{"pageProps":{"note":{"id":"n0dlszh240law45jq2zdszz","title":"Learn","desc":"","updated":1663422768895,"created":1663422765646,"custom":{},"fname":"software_dev.backend.jvm.scala.learn","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Content"},"contentHash":"dd81e1f6ad5e8ddec182734e7131c733","links":[],"anchors":{"fp-learn":{"type":"header","text":"FP Learn","value":"fp-learn","line":8,"column":0,"depth":1},"extended-ios":{"type":"header","text":"Extended IOS","value":"extended-ios","line":154,"column":0,"depth":2}},"children":[],"parent":"06n4kabn4pm1yjmprwykcij","data":{}},"body":"<h1 id=\"learn\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#learn\"></a>Learn</h1>\n<h1 id=\"fp-learn\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fp-learn\"></a>FP Learn</h1>\n<p><a href=\"https://en.wikiversity.org/wiki/Foundations_of_Functional_Programming\">Foundations of Functional Programming - Wikiversity</a></p>\n<p><a href=\"https://en.wikiversity.org/wiki/Foundations_of_Functional_Programming/The_%CE%BB-cube\">Foundations of Functional Programming/The λ-cube - Wikiversity</a></p>\n<p>Разобраться как это работает (интероп между Бифунктором BIO и MonadError</p>\n<p>Context Bound</p>\n<p>It shouldn’t be surprising that context bounds are implemented with implicit parameters, given their definition. Actually, the syntax I showed are syntactic sugars for what really happens. See below how they de-sugar:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\">def g<span class=\"token punctuation\">[</span><span class=\"token constant\">A</span> <span class=\"token operator\">:</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\ndef g<span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit ev<span class=\"token operator\">:</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>Not works</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\">def t<span class=\"token punctuation\">[</span>\n<span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">BIOPrimitives</span></span><span class=\"token operator\">:</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BIO</span><span class=\"token punctuation\">,</span> \n<span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Sync</span> <span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">MonadError</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit s<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">MonadError</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Int</span><span class=\"token punctuation\">]</span>\n <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pure</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Works</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> $plugin<span class=\"token punctuation\">.</span><span class=\"token property-access\">$ivy</span><span class=\"token punctuation\">.</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">org.typelevel:kind-projector_2.13.2:0.11.0</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword module\">import</span> scala<span class=\"token punctuation\">.</span><span class=\"token property-access\">concurrent</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ExecutionContext</span></span><span class=\"token punctuation\">.</span><span class=\"token property-access\">global</span>\n<span class=\"token keyword module\">import</span> doobie<span class=\"token punctuation\">.</span><span class=\"token property-access\">util</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ExecutionContexts</span></span>\n<span class=\"token keyword module\">import</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n<span class=\"token keyword module\">import</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n\n<span class=\"token operator\">~</span><span class=\"token operator\">~</span>i<span class=\"token operator\">~</span><span class=\"token operator\">~</span>mport izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">catz</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n<span class=\"token keyword module\">import</span> cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span><span class=\"token punctuation\">,</span> cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">effect</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span><span class=\"token punctuation\">,</span> cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">implicits</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\nimplicit val cs<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ContextShift</span><span class=\"token punctuation\">[</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">]</span>           <span class=\"token operator\">=</span> <span class=\"token constant\">IO</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">contextShift</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">ExecutionContexts</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">synchronous</span><span class=\"token punctuation\">)</span>\n\ndef t<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">BIOPrimitives</span></span><span class=\"token operator\">:</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BIO</span> <span class=\"token operator\">:</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">BIOApplicative</span></span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Sync</span> <span class=\"token operator\">:</span><span class=\"token known-class-name class-name\">MonadError</span><span class=\"token punctuation\">[</span><span class=\"token operator\">?</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit s<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">MonadError</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">MonadError</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pure</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndef t<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOPrimitives</span><span class=\"token operator\">:</span> <span class=\"token constant\">BIO</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit cs<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ContextShift</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Concurrent</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><a href=\"https://scalalandio.github.io/chimney/\">Welcome to Chimney's documentation! - Chimney 0.5.2 documentation</a></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token maybe-class-name\">Kai</span> @neko<span class=\"token operator\">-</span>kai <span class=\"token maybe-class-name\">May</span> <span class=\"token number\">21</span> <span class=\"token number\">23</span><span class=\"token operator\">:</span><span class=\"token number\">36</span>\n@<span class=\"token maybe-class-name\">Jacke</span> <span class=\"token maybe-class-name\">If</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span> is a different type that isn't <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> you could <span class=\"token keyword control-flow\">do</span> it like <span class=\"token keyword\">this</span><span class=\"token operator\">:</span>\n\ndef t<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOAsync</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOFork</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword module\">import</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">catz</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n  <span class=\"token maybe-class-name\">Concurrent</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nt<span class=\"token punctuation\">[</span>zio<span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">,</span> cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">effect</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">effect</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndef <span class=\"token keyword module\">from</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOAsync</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOFork</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Concurrent</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ContextShift</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token constant\">B</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword module\">import</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">catz</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n  <span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Concurrent</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ndef toCatsEffect<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>zio<span class=\"token operator\">:</span> <span class=\"token constant\">RIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit <span class=\"token constant\">R</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Runtime</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">LiftIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n     <span class=\"token constant\">F</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span>taskEffectInstance<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>zio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntoCatsEffect<span class=\"token punctuation\">[</span>cats<span class=\"token punctuation\">.</span><span class=\"token property-access\">effect</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IO</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Any</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>res14<span class=\"token punctuation\">)</span>\n\nimplicit <span class=\"token keyword\">class</span> <span class=\"token class-name\">RichZIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>val self<span class=\"token operator\">:</span> <span class=\"token constant\">RIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit <span class=\"token constant\">R</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Runtime</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">LiftIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AnyVal</span> <span class=\"token punctuation\">{</span>\ndef toCatsEffect<span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span>taskEffectInstance<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// WORKS</span>\n\nimplicit <span class=\"token keyword\">class</span> <span class=\"token class-name\">SmellyZI</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOAsync</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">BIOFork</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">t</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token constant\">B</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  def t<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword module\">import</span> izumi<span class=\"token punctuation\">.</span><span class=\"token property-access\">functional</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">bio</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">catz</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span>\n    <span class=\"token maybe-class-name\">Concurrent</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Effect</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\nimplicit <span class=\"token keyword\">class</span> <span class=\"token class-name\">SmellyCattyyy</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token operator\">+</span>_<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>zio<span class=\"token operator\">:</span> <span class=\"token constant\">ZIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">Throwable</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>implicit <span class=\"token constant\">R</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Runtime</span><span class=\"token punctuation\">[</span><span class=\"token constant\">R</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">F</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">LiftIO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    def toCatsEffect<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n        <span class=\"token constant\">F</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">liftIO</span><span class=\"token punctuation\">(</span>taskEffectInstance<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toIO</span><span class=\"token punctuation\">(</span>zio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><a href=\"https://github.com/Jacke/milewski-ctfp-pdf\">Jacke/milewski-ctfp-pdf</a></p>\n<p><a href=\"https://github.com/TheAlgorithms/Python\">TheAlgorithms/Python</a></p>\n<p><a href=\"https://christophm.github.io/interpretable-ml-book/the-future-of-machine-learning.html\">8.1 The Future of Machine Learning | Interpretable Machine Learning</a></p>\n<p><a href=\"https://github.com/Spread0x/zio-query\">Spread0x/zio-query</a></p>\n<p><a href=\"https://medium.com/@pascal.mengelt/building-a-cool-cli-with-decline-for-my-zio-app-80e095b2899a\">Building a cool CLI with Decline for my ZIO App</a></p>\n<p><a href=\"https://juliano-alves.com/2020/05/04/deathstar-zio-stream/?utm_campaign=ZIO%20News&#x26;utm_medium=email&#x26;utm_source=Revue%20newsletter\">Building the Death Star with ZIO Stream</a></p>\n<p><a href=\"https://github.com/typelevel/cats-mtl/blob/master/core/src/main/scala/cats/mtl/instances/readert.scala\">typelevel/cats-mtl</a></p>\n<p><a href=\"https://medium.com/rahasak/dependency-injection-with-reader-monad-in-scala-fe05b29e04dd\">Dependency injection with Reader Monad in Scala</a></p>\n<p><a href=\"https://stackoverflow.com/questions/55375125/scala-cats-compose-reader-with-readert\">Scala-cats, compose Reader with ReaderT</a></p>\n<p><a href=\"http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html\">State of Loom</a></p>\n<p><a href=\"https://typelevel.org/blog/2018/10/06/intro-to-mtl.html\">Typelevel.scala | A comprehensive introduction to Cats-mtl</a></p>\n<p><a href=\"https://blog.7mind.io/no-more-orphans.html\">No More Orphans</a></p>\n<p><a href=\"https://kubuszok.com/2019/io-monad-which-why-and-how/\">IO monad: which, why and how</a></p>\n<p><a href=\"https://miklos-martin.github.io/learn/fp/2017/09/28/handling-monadic-errors.html\">Handling monadic errors</a></p>\n<p><a href=\"https://gist.github.com/jackcviers/804b6d8d1b2ead210367a104a746fd00\">https://gist.github.com/jackcviers/804b6d8d1b2ead210367a104a746fd00</a></p>\n<p><a href=\"https://habr.com/ru/company/oleg-bunin/blog/472386/\">ZIO &#x26; Cats Effect: удачный союз</a></p>\n<p><a href=\"https://github.com/circe/circe/blob/d8c869733446545c2d54ffe632dfdccaa0bbe9ec/modules/generic-simple/src/main/scala/io/circe/generic/simple/util/macros/JsonCodecMacros.scala\">circe/circe</a></p>\n<p><a href=\"https://vlovgr.github.io/actors-cats-effect-fs2/#1\">Replacing Akka Actors with Cats Effect and FS2</a></p>\n<p><a href=\"https://typelevel.org/blog/2018/05/09/tagless-final-streaming.html\">Typelevel.scala | Tagless Final algebras and Streaming</a></p>\n<p><a href=\"https://github.com/typelevel/cats-effect/issues/634\">Cats Effect 3.0 Proposal · Issue #634 · typelevel/cats-effect</a></p>\n<p><a href=\"https://github.com/typelevel/cats-effect/issues/321\">Cats Effect 3.0 Design Discussion · Issue #321 · typelevel/cats-effect</a></p>\n<p><a href=\"https://typelevel.org/cats-mtl/lifting-classes.html\"></a></p>\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda layers</a></p>\n<p><a href=\"https://github.com/typelevel/cats-mtl/blob/dd5602ee8f18d24e44974eb91a5bed77fee9a896/tests/src/test/scala/cats/mtl/tests/WriterTTests.scala\">typelevel/cats-mtl</a></p>\n<p><a href=\"https://typelevel.org/cats/typeclasses/lawtesting.html\">Cats: Law Testing</a></p>\n<p><a href=\"https://stackoverflow.com/questions/9443004/what-does-the-operator-mean-in-scala\">What does the <code>#</code> operator mean in Scala?</a></p>\n<p><a href=\"http://eed3si9n.com/herding-cats/checking-laws-with-discipline.html\">herding cats - Checking laws with Discipline</a></p>\n<p><a href=\"https://github.com/typelevel/discipline/blob/master/core/src/test/scala/org/typelevel/discipline/laws.scala\">typelevel/discipline</a></p>\n<h2 id=\"extended-ios\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#extended-ios\"></a>Extended IOS</h2>\n<p><a href=\"https://tinkoffcreditsystems.github.io/tofu/docs/errors\">Error management · Tofu</a></p>","noteIndex":{"id":"root","title":"Content Vault","desc":"","updated":1662558369270,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Content"},"contentHash":"cb55f68d3ce79e0822804b10f09ca3fd","links":[],"anchors":{},"children":["wtyu6q43n3szreaed4nh02w","pip8c7re5b98dmsnp8246pv","vopa3fjqdrvoi06csdfu2xe","rbyvu5swyse0uutc1vs0lws","aiudhlxwyv7av6axq2c8i32","49mwaxvc4aomvxmu7o83sur","qztqwcntrkonaglf5wxa85t","87gxpbo9z9nig8qg07ud7i6","cf9snv892lcy4co9oe0f3x4","dxwd5gga585h8x70d34wo05","iqi9yclrq5k7a937ipxyhww","55o3fpy3ms77quhs0vo8axx","cr393pxlptk9nfaz70u5z8k","trc6cw7vev5i3e5wrhjb6kz","5nrh3mcyrtfirk8u619rr6x","rh2ecrw9pbao4q56496qk4v","hqzwb36ii5mgxy2xww9yqy5","tj6u64qj0sdlusp7mt1p2hi"],"parent":null,"data":{},"body":"\nThis is the root for Content Vault\n\nMigration is \"In progress\"\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Content"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"siteUrl":"https://content.iamjacke.com","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Stan's Content","description":"Stan's Personal Knowledge Space"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","cname":"content.iamjacke.com"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}