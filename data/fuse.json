{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Content Vault","n":0.707},"1":{"v":"\nThis is the root for Content Vault\n\nMigration is \"In progress\"\n","n":0.316}}},{"i":2,"$":{"0":{"v":"Personal","n":1}}},{"i":3,"$":{"0":{"v":"Interaction","n":1},"1":{"v":"\n# Interaction\n\n## Ask questions\n\n[How to ask good questions](https://jvns.ca/blog/good-questions/)\n\n[How to get useful answers to your questions](https://jvns.ca/blog/2021/10/21/how-to-get-useful-answers-to-your-questions/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)","n":0.258}}},{"i":4,"$":{"0":{"v":"Software Development","n":0.707},"1":{"v":"\n## Wisdom\n[The Seven Levels of Busy](https://randsinrepose.com/archives/the-seven-levels-of-busy/)\n[Manifesto for Minimalist Software Engineers](http://minifesto.org/)\n\n## Commits\n\n[The Perfect Commit](https://simonwillison.net/2022/Oct/29/the-perfect-commit/)\n\n## Hints\n\n[Tips for analyzing logs](https://jvns.ca/blog/2022/12/07/tips-for-analyzing-logs/)\n\n## Learning Cards\n[programming time](https://punkjazz.org/programming-time/)","n":0.224}}},{"i":5,"$":{"0":{"v":"Unix","n":1}}},{"i":6,"$":{"0":{"v":"Shell","n":1},"1":{"v":"\n# Shell\n\n[I/O Redirection](https://tldp.org/LDP/abs/html/io-redirection.html)\n\n[Illustrated Redirection Tutorial](https://wiki.bash-hackers.org/howto/redirection_tutorial)\n\n# Shell Scripting\n\n[GitHub - Spread0x/script: Making it easy to write shell-like scripts in Go](https://github.com/Spread0x/script)\n\n[GitHub - dylanaraps/pure-bash-bible: üìñ A collection of pure bash alternatives to external processes.](https://github.com/dylanaraps/pure-bash-bible)\n\n[GitHub - dylanaraps/pure-sh-bible: üìñ A collection of pure POSIX sh alternatives to external processes.](https://github.com/dylanaraps/pure-sh-bible)\n\n[GitHub - Jacke/mastering-zsh: Advanced topics to take advantage of zsh üë©‚Äçüíªüë®‚Äçüíª](https://github.com/Jacke/mastering-zsh)\n\n[GitHub - Jacke/bash-handbook: For those who wanna learn Bash](https://github.com/Jacke/bash-handbook/tree/master)\n\n[GitHub - Jacke/mastering-zsh: Advanced topics to take advantage of zsh üë©‚Äçüíªüë®‚Äçüíª](https://github.com/Jacke/mastering-zsh)\n\n[GitHub - MadhavBahl/shebang-everything: Your unofficial guidebook to shell scripting, give this repo a ‚≠ê if it helped you :)](https://github.com/MadhavBahl/shebang-everything)\n\n[GitHub - Idnan/bash-guide: A guide to learn bash](https://github.com/Idnan/bash-guide)\n\n[GitHub - fliptheweb/bash-shortcuts-cheat-sheet: Useful shortcuts for bash/zsh](https://github.com/fliptheweb/bash-shortcuts-cheat-sheet)\n\n[GitHub - MadhavBahl/shebang-everything: Your unofficial guidebook to shell scripting, give this repo a ‚≠ê if it helped you :)](https://github.com/MadhavBahl/shebang-everything)\n\n[Shell programming with bash: by example, by counter-example](https://matt.might.net/articles/bash-by-example/)\n\n[Advanced Bash-Scripting Guide](https://tldp.org/LDP/abs/html/)\n\n[leah blogs](https://leahneukirchen.org/blog/archive/2008/02/10-zsh-tricks-you-may-not-know.html)\n\n[Zsh Tips, Tricks and Examples by zzapper](http://www.rayninfo.co.uk/tips/zshtips.html)\n\n[GitHub - hmml/awesome-zsh: ZSH is awesome, here's why...](https://github.com/hmml/awesome-zsh)\n\n[Shell Field Guide](https://raimonster.com/scripting-field-guide/)\n\n[GitHub - Spread0x/the-art-of-command-line: Master the command line, in one page](https://github.com/Spread0x/the-art-of-command-line?organization=Spread0x&organization=Spread0x)\n\n[GitHub - Spread0x/Mastering-Linux-Shell-Scripting-Second-Edition: Mastering Linux Shell Scripting - Second Edition, published by Packt](https://github.com/Spread0x/Mastering-Linux-Shell-Scripting-Second-Edition)\n\n[GitHub - Spread0x/Linux-Shell-Scripting-Cookbook-Third-Edition: Linux Shell Scripting Cookbook Third Edition, published by Packt](https://github.com/Spread0x/Linux-Shell-Scripting-Cookbook-Third-Edition)\n\n[GitHub - Spread0x/shell-scripting-tutorial: A complete begineers guide to learn shell scripting from scratch which includes Videos, Practice scenarios and project idea.](https://github.com/Spread0x/shell-scripting-tutorial)","n":0.071}}},{"i":7,"$":{"0":{"v":"Filesystems","n":1},"1":{"v":"\n# File systems\n\n## ZFS\n\n[ZFS 101-Understanding ZFS storage and performance](https://arstechnica.com/information-technology/2020/05/zfs-101-understanding-zfs-storage-and-performance/)","n":0.333}}},{"i":8,"$":{"0":{"v":"Tools","n":1}}},{"i":9,"$":{"0":{"v":"Vim","n":1},"1":{"v":"\n# Vim\n\n[GitHub - Jacke/Learn-Vim: A book for learning the Vim editor the smart way.](https://github.com/Jacke/Learn-Vim/tree/master)","n":0.267}}},{"i":10,"$":{"0":{"v":"Scale","n":1}}},{"i":11,"$":{"0":{"v":"CAP Theorem","n":0.707},"1":{"v":"\n# CAP Theorem\n\n# What is CAP theorem?\n\nCAP Theorem has become the holy grail of distributed system design in recent years. CAP theorem states that any distributed computer system can support only any two among consistency, availability, and partition tolerance.\n\nLet's explore the meaning of these properties in a little more detail.\n\n# Consistency\n\nConsistency implies the following:\n\n- When data is partitioned (distributed), all the nodes see the same data at a given time, and this should be true for all times\n- When queried, each node will return the latest data. If not, the system will just error out.\n- Consistency is achieved by updating several nodes before allowing further reads.\n\n# Availability\n\nAvailability implies the following:\n\n- At all times, every request being fired at the system generates a valid response.\n- While doing this, it doesn't mean that every request will receive a response with the latest information (data). Availability is achieved by replicating the data across different servers.\n\n# Partition Tolerance\n\nPartition tolerance implies the following:\n\n- The system is able to perform continuously even if a network failure or data loss occur.\n- Partition tolerance can be achieved by replicating data and system functionality sufficiently across a cluster of nodes and network. The redundancy introduced ensures the system as a whole continues to function even in situations where a node or a set of nodes cannot communicate with each other.\n\n# System classification based on CAP theorem\n\nBecause only two of the three properties stated by CAP can be guaranteed at any time, systems are usually classified into three types under CAP Theorem:\n\n- **CA System**: Data is consistent between all nodes, and you can read/write from any node, while you cannot afford to let your network go down. (For example: RDBMS like MSSQL Server, Oracle and columnar relational stores)\n- **CP System**: Data is consistent and maintains tolerance for partitioning and preventing data going out of sync. (For example: Google Big Table, MongoDB (document oriented), and HBase (columnar))\n- **AP System**: Nodes are online always, but they may not get you the latest data; however, they sync whenever the lines are up. (For example: CouchDB (document oriented), and Cassandra (columnar))\n\n![https://i2.wp.com/www.acodersjourney.com/wp-content/uploads/2018/07/CAP-Theorem.jpg?w=1052&ssl=1](https://i2.wp.com/www.acodersjourney.com/wp-content/uploads/2018/07/CAP-Theorem.jpg?w=1052&ssl=1)\n\n# CAP theorem in action\n\nIn real life distributed systems, network partition will happen and we need to ensure that when network partition does happen, the system as a whole is still functional. So, really, our choice boils down to either Consistency Guarantee or Availability guarantee in most cases.\n\n![https://i1.wp.com/www.acodersjourney.com/wp-content/uploads/2018/07/CAP-Theorem-Network-Partition.jpg?w=1462&ssl=1](https://i1.wp.com/www.acodersjourney.com/wp-content/uploads/2018/07/CAP-Theorem-Network-Partition.jpg?w=1462&ssl=1)\n\nA row is updated in¬†**Node 1**¬†as shown in the preceding figure. Before¬†**Node 3**¬†receives the update propagation, it gets a request for the same row. Now¬†**Node 3**¬†has two choices--either provide the copy of the row it has (which may be stale) or deny the request. In the first case, it is compromising on consistency and in the second case, on availability.\n\n# How to use CAP theorem during system design interview?\n\nAs you saw in the previous section, different types of data stores provides different types of guarantees - some provide consistency guarantees while some provide availability guarantees.\n\nDuring a system design interview, you should always clarify what type of guarantee the interviewer is looking for in the system under discussion. For example, if you're building a news feed like twitter- it might have the following requirements:\n\n- Highly available\n- Consistency can take a hit in favor of availability, if a news feed does not show up for a little while, it should be fine.\n\nWith the above requirements, you immediately know that you need an AP system, that is, a system which offers availability during a network partition. So you can choose a NoSQL solution like Cassandra or Dynamo DB.\n\nPlease find below a handy cheat sheet for choosing the right data store for your system.\n\n# AP Systems\n\n- Dynamo DB\n- Voldemort\n- Cassandra\n- SimpleDB\n- CouchDB\n- Riak\n\n# CP Systems\n\n- Google BigTable\n- Hbase\n- MongoDB\n- MemcacheDB\n- Redis\n\n# CA Systems\n\n- RDBMS( MySQL, MSSQL Server)\n\n# Final thoughts on CAP theorem\n\nEach one of the three properties, namely,¬†***Availability, Consistency and Partition Tolerance***, should not be viewed as a binary off/on switch , but rather as tunable parameters when you're designing a distributed system. That is, if you opt for more consistency, you'll need to make your availability or partition tolerance requirements little lax. Conversely, you can tune up your availability if you are prepared to sacrifice some consistency or network partition tolerance.","n":0.038}}},{"i":12,"$":{"0":{"v":"Mq","n":1}}},{"i":13,"$":{"0":{"v":"Kafka","n":1},"1":{"v":"\n[Spread0x/kafkacat](https://github.com/Spread0x/kafkacat)\n\n[Confluent CLI | Confluent Documentation](https://docs.confluent.io/confluent-cli/current/)\n\n[Schema Registry Overview | Confluent Documentation](https://docs.confluent.io/platform/current/schema-registry/)\n\n## Kafka Streams\n\n[Gently Down the Stream](https://www.gentlydownthe.stream/#/1)\n","n":0.258}}},{"i":14,"$":{"0":{"v":"Media","n":1}}},{"i":15,"$":{"0":{"v":"Encodings","n":1},"1":{"v":"\n# Encodings\n\n## Video\n\n### FFmpeg\n\n[FFmpeg - Ultimate Guide | IMG.LY Blog](https://img.ly/blog/ultimate-guide-to-ffmpeg/)","n":0.316}}},{"i":16,"$":{"0":{"v":"Learn","n":1}}},{"i":17,"$":{"0":{"v":"Learning plans By Siraj","n":0.5},"1":{"v":"\n# READM5\n\n# Learn_Computer_Science_in_5_Months\n\nThis is the Curriculum for ‚ÄúLearn Computer Science in 5 Months‚Äù By Siraj Raval on Youtube\n\n## Overview\n\nYou can find the video [here](https://youtu.be/-OvRVlqKebI).\n\n# 5 Month Curriculum\n\n## Week 1-2 (Learn Python)\n\n- https://automatetheboringstuff.com/\n- https://www.codecademy.com/learn/learn-python\n\n## Week 3-4 (Data Structures)\n\n- https://www.edx.org/course/data-structures-fundamentals-uc-san-diegox-algs201x\n\n## Week 5-6 (Algorithms)\n\n- https://courses.csail.mit.edu/6.006/fall11/notes.shtml\n\n## Week 7 (Databases)\n\n- https://www.coursera.org/learn/python-databases\n\n## Week 8 (Networking)\n\n- https://www.coursera.org/learn/computer-networking\n\n## Week 9-10 (Web Development)\n\n- https://www.youtube.com/watch?v=1u2qu-EmIRc&list=PLhQjrBD2T382hIW-IsOVuXP1uMzEvmcE5\n- https://github.com/melanierichards/just-build-websites\n\n## Week 11-12 (Mobile Development)\n\n- https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/\n- https://developer.android.com/training/basics/firstapp/index.html\n\n## Week 13-14 (Data Science)\n\n- https://www.edx.org/course/python-for-data-science\n\n## Week 15-16 (Computer Vision)\n\n- https://www.udacity.com/course/introduction-to-computer-vision‚Äìud810\n\n## Week 17-18 (Natural Language Processing)\n\n- https://www.coursera.org/learn/python-text-mining\n\n## Week 19 (Software Engineering Practices)\n\n- https://www.coursera.org/learn/software-processes\n\n## Week 20 (Blockchain)\n\n- https://www.youtube.com/watch?v=cjbHqvr4ffo&list=PL2-dafEMk2A7jW7CYUJsBu58JH27bqaNL\n\n\n# Learn_Machine_Learning_in_3_Months\n\nThis is the Curriculum for ‚ÄúLearn Machine Learning in 3 Months‚Äù [this](https://youtu.be/Cr6VqTRO1v0) video by Siraj Raval on Youtube\n\n# Month 1\n\n## Week 1 Linear Algebra\n\nhttps://www.youtube.com/watch?v=kjBOesZCoqc&index=1&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/ ## Week 2 Calculus https://www.youtube.com/playlist?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr ## Week 3 Probability https://www.edx.org/course/introduction-probability-science-mitx-6-041x-2 ## Week 4 Algorithms https://www.edx.org/course/algorithm-design-analysis-pennx-sd3x\n\n# Month 2\n\n## Week 1\n\n### Learn python for data science\n\nhttps://www.youtube.com/watch?v=T5pRlIbr6gg&list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU #### Math of Intelligence https://www.youtube.com/watch?v=xRJCOz3AfYY&list=PL2-dafEMk2A7mu0bSksCGMJEmeddU_H4D #### Intro to Tensorflow https://www.youtube.com/watch?v=2FmcHiLCwTU&list=PL2-dafEMk2A7EEME489DsI468AB0wQsMV\n\n## Week 2\n\nIntro to ML (Udacity) https://eu.udacity.com/course/intro-to-machine-learning‚Äìud120\n\n## Week 3-4\n\nML Project Ideas https://github.com/NirantK/awesome-project-ideas\n\n# Month 3 (Deep Learning)\n\n## Week 1\n\nIntro to Deep Learning https://www.youtube.com/watch?v=vOppzHpvTiQ&list=PL2-dafEMk2A7YdKv4XfKpfbTH5z6rEEj3\n\n## Week 2\n\nDeep Learning by Fast.AI http://course.fast.ai/\n\n## Week 3-4\n\nRe-implement DL projects from my github https://github.com/llSourcell?tab=repositories\n\n---\n\n*Additional Resources:*\n- People in ML to [follow on Twitter](https://www.quora.com/Who-should-I-follow-on-Twitter-to-get-useful-and-reliable-machine-learning-information) - Join the [‚ÄúWizards‚Äù Slack channel](http://wizards.herokuapp.com/)\n\n\n# Learn_Deep_Learning_in_6_Weeks\n\nThis is the Curriculum for ‚ÄúLearn Deep Learning in 6 Weeks‚Äù by Siraj Raval on Youtube\n\n## Overview\n\nThis is the curriculum for [this](https://youtu.be/_qjNH1rDLm0) video on Youtube by Siraj Raval\n\n## Week 1 - Feedforward Neural Networks and Backpropagation\n\n- [ ]  Read Part I of the Deep Learning Book found [here](http://www.deeplearningbook.org/)\n- [ ]  Use this cheat sheet to help understand any math notation, found [here](https://www.flickr.com/photos/95869671@N08/40544016221)\n- [ ]  Watch [Build a Neural Net in 4 Minutes](https://www.youtube.com/watch?v=h3l4qz76JhQ)\n- [ ]  Read [Neural Net in 11 lines](https://iamtrask.github.io/2015/07/12/basic-python-network/)\n- [ ]  Type out the neural network code yourself in a text editor, compile, and run it locally (using no ML libraries)\n- [ ]  Watch [Backpropagation in 5 minutes](https://www.youtube.com/watch?v=q555kfIFUCM)\n\n## Week 2 - Convolutional Networks\n\n- [ ]  Watch the Convolutional Networks Specialization on Coursera, found [here](https://www.coursera.org/learn/convolutional-neural-networks).\n- [ ]  Read all 3 lecture notes under Module 2 for Karpathy CNN course found [here](http://cs231n.github.io/)\n- [ ]  Watch my video on CNNs [here](https://www.youtube.com/watch?v=FTr3n7uBIuE&t=1782s) and [here](https://www.youtube.com/watch?v=cAICT4Al5Ow&t=4s)\n- [ ]  Write out a simple CNN yourself (using no ML libraries)\n\n## Week 3 - Recurrent Networks\n\n- [ ]  Watch the Sequence Models Specialization on Coursera, found [here](https://www.coursera.org/learn/nlp-sequence-models)\n- [ ]  Watch my videos on recurrent networks, [here](https://www.youtube.com/watch?v=BwmddtPFWtA&t=4s), [here](https://www.youtube.com/watch?v=cdLUzrjnlr4), and [here](https://www.youtube.com/watch?v=9zhrxE5PQgY&t=25s)\n- [ ]  Read Trask‚Äôs blogpost on LSTM RNNs found [here](https://iamtrask.github.io/2015/11/15/anyone-can-code-lstm/)\n- [ ]  Write out a simple RNN yourself (using no ML libraries)\n\n## Week 4 - Tooling\n\n- [ ]  Watch CS20 (Tensorflow for DL research). Slides are [here](http://web.stanford.edu/class/cs20si/syllabus.html). Playlist is [here](https://www.youtube.com/watch?v=g-EvyKpZjmQ&list=PLDuNt91tg0urwwTQNKyUbncSDvMEl74ww)\n- [ ]  Watch my intro to tensorflow playlist [here](https://www.youtube.com/watch?v=2FmcHiLCwTU&list=PL2-dafEMk2A7EEME489DsI468AB0wQsMV)\n- [ ]  Read Keras Example code to quickly understand its structure [here](https://keras.io/getting-started/sequential-model-guide/)\n- [ ]  Learn which GPU provider is best for you [here](https://medium.com/@rupak.thakur/aws-vs-paperspace-vs-floydhub-choosing-your-cloud-gpu-partner-350150606b39)\n- [ ]  Write out a simple image classifier using Tensorflow\n\n## Week 5 - Generative Adversarial Network\n\n- [ ]  Watch the first 7 videos you see [here](https://www.youtube.com/results?search_query=generative+adversarial+network)\n- [ ]  Build a GAN using no ML libraries\n- [ ]  Build a GAN using tensorflow\n- [ ]  Read this to understand the math of GANs, but don‚Äôt worry if you dont understand it all. This is the bleeding edge [here](https://lilianweng.github.io/lil-log/2017/08/20/from-GAN-to-WGAN.html)\n\n## Week 6 - Deep Reinforcement Learning\n\n- [ ]  Watch CS 294 [here](http://rail.eecs.berkeley.edu/deeprlcourse/)\n- [ ]  Build a Deep Q Network using Tensorflow\n\n\n\n# Learn_Data_Science_in_3_Months\n\n### Course Objective\n\nThis is the Curriculum for [Learn Data Science in 3 Months](https://youtu.be/9rDhY1P3YLA) by Siraj Raval on Youtube. After completing this course, start applying for jobs, doing contract work, start your own data science consulting group, or just keep on learning. Remember to believe in your ability to learn. You can learn data science, you will learn data science, and if you stick to it, eventually you will master it.\n\n## Find a study buddy\n\nJoin the #DataSciencein3Months channel in our [Slack](http://wizards.herokuapp.com/) channel to find one.\n\n### Components\n\n- 3 Projects\n- 1 Weekly assignment. Pick 1 from the course for each week, do it in a weekend.\n\n### Course Length\n\n- 12 Weeks\n- 2-3 Hours of Study per Day\n\n### Tools Used\n\n- Python, SQL, R, Tensorflow, Hadoop, MapReduce, Spark, GitHub,\n\n### Accelerated Learning Techniques\n\n- Watch videos at 2x or 3x speed using a browser extension\n- Handwrite notes as you watch for memory retention\n- Immerse yourself in the [community](https://medium.com/@exastax/top-20-data-science-blogs-and-websites-for-data-scientists-d88b7d99740)\n\n# Month 1 - Data Analysis\n\n## Week 1 - Learn Python\n\n- EdX https://www.edx.org/course/introduction-python-data-science-2\n- Siraj Raval https://www.youtube.com/watch?v=T5pRlIbr6gg&list=PL2-dafEMk2A6QKz1mrk1uIGfHkC1zZ6UU\n\n## Week 2 - Statistics & Probability\n\n- KhanAcademy https://www.khanacademy.org/math/statistics-probability\n\n## Week 3 Data Pre-processing, Data Visualization, Exploratory Data Analysis\n\n- EdX https://www.edx.org/course/introduction-to-computing-for-data-analysis\n\n## Week 4 Kaggle Project #1\n\n- Try your best at a competition of your choice from [Kaggle](https://www.kaggle.com/competitions).\n- Use [Kaggle Learn](https://www.kaggle.com/learn/overview) as a helpful guide\n\n# Month 2 - Machine Learning\n\n### Math of Machine Learning Cheat Sheets\n\n- [Statistics](http://web.mit.edu/~csvoss/Public/usabo/stats_handout.pdf)\n- [Probability](https://static1.squarespace.com/static/54bf3241e4b0f0d81bf7ff36/t/55e9494fe4b011aed10e48e5/1441352015658/probability_cheatsheet.pdf)\n- [Calculus](http://tutorial.math.lamar.edu/pdf/Calculus_Cheat_Sheet_All.pdf)\n- [Linear Algebra](https://www.souravsengupta.com/cds2016/lectures/Savov_Notes.pdf)\n\n## Week 1-2 - Algorithms & Machine Learning\n\n- Columbia https://courses.edx.org/courses/course-v1:ColumbiaX+DS102X+2T2018/course/\n\n## Week 3 - Deep Learning\n\n- Part 1 and 2 of DL Book https://www.deeplearningbook.org/\n- Siraj Raval https://www.youtube.com/watch?v=vOppzHpvTiQ&list=PL2-dafEMk2A7YdKv4XfKpfbTH5z6rEEj3\n\n## Week 4 - Kaggle Project #2\n\n- Try your best at a competition of your choice from [Kaggle](https://www.kaggle.com/competitions). Make sure to add great documentation to your github repository! Github is the new resume.\n\n# Month 3 - Real-World Tools\n\n## Week 1 Databases (SQL + NoSQL)\n\n- Udacity https://www.udacity.com/course/intro-to-relational-databases‚Äìud197\n- EdX https://www.edx.org/course/introduction-to-nosql-data-solutions-2\n\n## Week 2 Hadoop & Map Reduce + Spark\n\n- Udacity https://www.udacity.com/course/intro-to-hadoop-and-mapreduce‚Äìud617\n- Spark Workshop https://stanford.edu/~rezab/sparkclass/slides/itas_workshop.pdf\n\n## Week 3 Data Storytelling\n\n- Edx https://www.edx.org/course/analytics-storytelling-impact-1\n\n## Week 4 Kaggle Project #3\n\n- Try your best at a competition of your choice from [Kaggle](https://www.kaggle.com/competitions).","n":0.034}}},{"i":18,"$":{"0":{"v":"Lang","n":1}}},{"i":19,"$":{"0":{"v":"C","n":1},"1":{"v":"\n# C Language\n\n## Modern guides\n\n[How to C (as of 2016)](https://matt.sh/howto-c)","n":0.316}}},{"i":20,"$":{"0":{"v":"Unsorted","n":1},"1":{"v":"\n\n# Misc\n\n[https://www.gleek.io/?ref=producthunt](https://www.gleek.io/?ref=producthunt)\n\n[Hypergrowth Network](https://www.basisset.ventures/hypergrowth-network?ref=producthunt)\n\n[Microsoft TileCode](https://microsoft.github.io/tilecode/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n[nvidia-snatcher](https://jef.codes/nvidia-snatcher/)\n\n[rrweb-io/rrweb](https://github.com/rrweb-io/rrweb)\n\n[TomWright/dasel](https://github.com/TomWright/dasel)\n\n[szeiger/ErasedTypes](https://github.com/szeiger/ErasedTypes)\n\n[Redesign Tuples with HList-like structure by OlivierBlanvillain ¬∑ Pull Request #2199 ¬∑ lampepfl/dotty](https://github.com/lampepfl/dotty/pull/2199/files)\n\n[Aux Pattern](https://gist.github.com/gigiigig/3cd104e8951b4432afd5#file-auxpattern-scala)\n\n[Propagate dependencies through implicit parameters by milessabin ¬∑ Pull Request #5601 ¬∑ lampepfl/dotty](https://github.com/lampepfl/dotty/pull/5601/files)\n\n[Spread0x/droste](https://github.com/Spread0x/droste)\n\n[precog/matryoshka](https://github.com/precog/matryoshka)\n\n[codetalkio/patterns-serverless-scala-minimal](https://github.com/codetalkio/patterns-serverless-scala-minimal)\n\n[er1c/scala-typesafeequals](https://github.com/er1c/scala-typesafeequals)\n\n[NotionMetrics](https://notionmetrics.com/?ref=producthunt)\n\n[Great Rejection Emails](https://www.dover.io/tools/rejection-emails?ref=producthunt)\n\n[Svg Wave - A free & beautiul gradient SVG wave Generator.](https://svgwave.in/?ref=producthunt)\n\n[Fun Remote Team Icebreaker Questions | Kaapi](https://www.kaapi.team/fun-icebreaker-questions?ref=producthunt)\n\n[MainStreet | Turn Tax Credits into Cash Flow](https://www.mainstreet.us/join?grsf=gevx33&ref=newsletter)\n\n[Copysmith - AI Content Marketing](https://www.copysmith.ai/?ref=producthunt)\n\n[Founder Library](https://www.founderlibrary.com/?ref=producthunt)\n\n---\n\nAdd to ML Tools\n\n[Lobe | Machine Learning Made Easy](https://lobe.ai/)\n\n[Deepnote - Data science notebook for teams](https://deepnote.com/?ref=producthunt)\n\n[Financial Modeling Made Easy.](https://finmark.com/?ref=producthunt)\n\n???\n\n[JavaScript for Data Science](https://js4ds.org/)\n\n[Cards of Logic](https://www.cardsoflogic.com/)\n\n[Material-UI Builder](https://mui.dev/?ref=producthunt)\n\n[About us - Vowel](https://www.vowel.com/about-us/)\n\n[Kite - Free AI Coding Assistant and Code Auto-Complete Plugin](https://www.kite.com/)\n\n[Anaemic Domain Model vs. Rich Domain Model - Amido](https://amido.com/blog/anaemic-domain-model-vs-rich-domain-model/)\n\n[Build your favicon in seconds!](https://formito.com/tools/favicon?utm_source=hackernewsletter&utm_medium=email&utm_term=design&mc_cid=0c9d7f1a72&mc_eid=204009bd32)\n\n[Dendron](https://www.dendron.so/?utm_source=hackernewsletter&utm_medium=email&utm_term=show_hn)\n\n[The Ultimate Profile For Developers - CodersRank](https://codersrank.io/?utm_source=google&utm_medium=cpc&utm_campaign=youtube_custom-intent-audience_programming-languages-keywords&utm_content=most-popular-backend-frameworks&gclid=CjwKCAjw0On8BRAgEiwAincsHLriGquHzO-21XejgOxm67EGw4iVnnMzjqwQG2F9snfGJbu9tB7EzBoCENgQAvD_BwE)\n\n---\n\n**Add to Networking Tools**\n\n[Which DNS](https://which.nameserve.rs/)\n\n[Tools](https://resolve.rs/tools.html)\n\n---\n\nAdd to ENV-Secret management tools\n\n[Installation](https://docs.doppler.com/docs/enclave-installation)\n\n**Add to html web scrapper tools**\n\n[Jacke/html5ever](https://github.com/Jacke/html5ever)\n\n[Automated link previews - no design tools needed](https://www.mugshotbot.com/?ref=producthunt)\n\n**C++ Interop tools**\n\n[Java API generator](https://www.scapix.com/documentation/java_link/java_api/)\n\nPerfomance tools / Testing\n\n[speedscope](https://www.speedscope.app/)\n\n[–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä—Å—Ç–∫–∏](https://habr.com/en/company/oleg-bunin/blog/499638/)\n\n[Sencha WebTestIt - Sencha.com](https://www.sencha.com/products/webtestit/?ref=producthunt)\n\n# Unsorted\n\n## Good Learning services\n\n[Sign In | Pluralsight](https://app.pluralsight.com/library/history)\n\n[Top Akka Courses Online - Updated [January 2021]](https://www.udemy.com/topic/akka/?utm_source=adwords&utm_medium=udemyads&utm_campaign=DSA_Catchall_la.EN_cc.ROW&utm_content=deal4584&utm_term=_._ag_88010211481_._ad_437497337004_._kw__._de_c_._dm__._pl__._ti_dsa-437115340933_._li_9047022_._pd__._&matchtype=b&gclid=Cj0KCQiA5bz-BRD-ARIsABjT4nhdokGA36ejj1cEb6CeB92z3C4VE1tHJLl1Jq27ONkvvEXzpSxaiycaAs2ZEALw_wcB)\n\n### Try\n\n[Spread0x/rust-s3](https://github.com/Spread0x/rust-s3)\n\n[What every developer should know about TCP](https://robertovitillo.com/what-every-developer-should-know-about-tcp/)\n\n[https://doc.akka.io/docs/akka-http/current/server-side/http2.html#dependency](https://doc.akka.io/docs/akka-http/current/server-side/http2.html#dependency)\n\n[https://github.com/scala/scala3-example-project](https://github.com/scala/scala3-example-project)\n\n[https://github.com/zio/zio-web](https://github.com/zio/zio-web)\n\n[https://github.com/fcambus/logswan](https://github.com/fcambus/logswan)\n\n[https://github.com/marketplace/pull-assistant](https://github.com/marketplace/pull-assistant)\n\n[thecodingmachine/workadventure](https://github.com/thecodingmachine/workadventure)\n\n[tensorflow/models](https://github.com/tensorflow/models)\n\n[gpakosz/.tmux](https://github.com/gpakosz/.tmux)\n\n[rothgar/awesome-tmux](https://github.com/rothgar/awesome-tmux)\n\n[tmuxinator/tmuxinator](https://github.com/Tmuxinator/Tmuxinator)\n\n[koekeishiya/yabai](https://github.com/koekeishiya/yabai)\n\n[tmux-plugins/tmux-resurrect](https://github.com/tmux-plugins/tmux-resurrect)\n\n[tmux-plugins/tmux-continuum](https://github.com/tmux-plugins/tmux-continuum)\n\n[tmux-plugins/tmux-yank](https://github.com/tmux-plugins/tmux-yank)\n\n[tmux-plugins/tmux-sensible](https://github.com/tmux-plugins/tmux-sensible)\n\n[Nord](https://www.nordtheme.com/ports/tmux)\n\n[cjbassi/gotop](https://github.com/cjbassi/gotop)\n\n[tmux-plugins/tmux-prefix-highlight](https://github.com/tmux-plugins/tmux-prefix-highlight)\n\n[Jacke/cascadia-code](https://github.com/Jacke/cascadia-code)\n\n[Jacke/spotgen](https://github.com/Jacke/spotgen)\n\n[Inside Out](https://disney.fandom.com/wiki/Inside_Out)\n\n[Onward](https://disney.fandom.com/wiki/Onward)\n\n[Soul](https://disney.fandom.com/wiki/Soul)\n\n[Applicant tracking system](https://en.wikipedia.org/wiki/Applicant_tracking_system)\n\n[](http://www.bb17go.com/w3/tr/2020/wd-css-color-5-20200303/)\n\n[Release v3.0.0-M5 ¬∑ typelevel/cats-effect](https://github.com/typelevel/cats-effect/releases/tag/v3.0.0-M5)\n\n[LTD - ZapBG](https://www.zapbg.com/?ref=producthunt)\n\n[ocadotechnology/sttp-oauth2](https://github.com/ocadotechnology/sttp-oauth2)\n\n[freeCodeCamp.org](https://www.freecodecamp.org/)\n\n[How to Use Thread.sleep Without Blocking on the JVM](https://www.freecodecamp.org/news/non-blocking-thread-sleep-on-jvm/)\n\n[](https://welovenocode.com/subscription?ref=producthunt)\n\n[Automate your Workflows on Notion](https://notion-automations.com/?ref=producthunt)\n\n[Niceboard | Modern & simple job board software.](https://niceboard.co/?ref=producthunt)\n\n[Profitable design apps database and insights report](https://gumroad.com/l/profitable-design-apps?ref=producthunt)\n\n[postmalloc/slowbug](https://github.com/postmalloc/slowbug?ref=producthunt)\n\n[Success, your weekly planner](https://eveningkid.com/success/?ref=producthunt)\n\n[Findnlink](https://www.findnlink.com/?ref=producthunt)\n\n[MainStreet | Turn Tax Credits into Cash Flow](https://www.mainstreet.us/join?grsf=7kyeml)\n\n[Getting Started | Nishan Docs](https://nishan-docs.netlify.app/docs/)\n\n## Notion\n\n[No Code Pages](https://nocodepages.com/)\n\n[Super - From Notion to Website in minutes](https://super.so/?ref=producthunt)\n\n[Vizydrop | Data Visualization Platform](https://vizydrop.com/notion?ref=producthunt)\n\n[Notion Pack: all the freelance documents you need, as Notion templates](https://www.supercreative.design/download/notionpack?ref=producthunt)\n\n[Validated ideas 2.0](https://gumroad.com/l/validatedideas2/nomyvfb?ref=producthunt)\n\n[Automate your Workflows on Notion](https://notion-automations.com/?ref=producthunt)\n\n[How to Build - Zapier Platform](https://zapier.com/platform/how-to-build)\n\n## Design // CSS\n\n[Native CSS Masonry Layout In CSS Grid - Smashing Magazine](https://www.smashingmagazine.com/native-css-masonry-layout-css-grid/)\n\n[Compiled | Build time atomic CSS-in-JS](https://compiledcssinjs.com/?ref=stackshare)\n\n[Shuffle](https://shuffle.dev/?ref=stackshare)\n\n[–° —á–µ–≥–æ –Ω–∞—á–∞—Ç—å –¥–∏–∑–∞–π–Ω —Å–∞–π—Ç–æ–≤? –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ —Å–≤–æ–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –≤ Figma - –î–∏–∑–∞–π–Ω –Ω–∞ vc.ru](https://vc.ru/design/183584-s-chego-nachat-dizayn-saytov-rasskazyvaem-pro-svoy-startovyy-shablon-v-figma)\n\n[UX-–¥–∏–∑–∞–π–Ω: –ó–∞–∫–æ–Ω –ú–∏–ª–ª–µ—Ä–∞, –∏–ª–∏ –∫–∞–∫ —Å–Ω–∏–∑–∏—Ç—å –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–æ–ª—à–µ–±–Ω–æ–µ —á–∏—Å–ª–æ —Å–µ–º—å –ø–ª—é—Å-–º–∏–Ω—É—Å –¥–≤–∞) - –î–∏–∑–∞–π–Ω –Ω–∞ vc.ru](https://vc.ru/design/190896-ux-dizayn-zakon-millera-ili-kak-snizit-kognitivnuyu-nagruzku-na-polzovateley-volshebnoe-chislo-sem-plyus-minus-dva)\n\n[Flow Wireframe Kit ‚Äï The last wireframe kit you will ever need!](https://flowuikit.com/?ref=producthunt)\n\n[Easily create GIFs with Gifmock for Sketch](https://gifmock.com/sketch?ref=producthunt)\n\n## C // C++ // Compilers // Algorithms // Hackerrank tasks\n\n[How to implement a programming language (tutorial for beginners)](http://lisperator.net/pltut/)\n\n[Implementing Concurrency and our Runtime Library](https://mukulrathi.netlify.app/create-your-own-programming-language/concurrency-runtime-language-tutorial/)\n\n[mkirchner/linked-list-good-taste](https://github.com/mkirchner/linked-list-good-taste?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[CS 6120](https://www.cs.cornell.edu/courses/cs6120/2020fa/self-guided/?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[Writing a Memory Allocator](http://dmitrysoshnikov.com/compilers/writing-a-memory-allocator/)\n\n[How to Make Your Code Reviewer Fall in Love with You](https://mtlynch.io/code-review-love/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n[Interval Tree Clocks](https://ferd.ca/interval-tree-clocks.html?utm_source=hackernewsletter&utm_medium=email&utm_term=learn)\n\n[Stack vs Heap Memory Allocation - GeeksforGeeks](https://www.geeksforgeeks.org/stack-vs-heap-memory-allocation/)\n\n[jwasham/coding-interview-university](https://github.com/jwasham/coding-interview-university)\n\n[bytedance/terarkdb](https://github.com/bytedance/terarkdb)\n\n[https://www.pllab.riec.tohoku.ac.jp/papers/icfp2011UenoOhoriOtomoAuthorVersion.pdf](https://www.pllab.riec.tohoku.ac.jp/papers/icfp2011UenoOhoriOtomoAuthorVersion.pdf)\n\n[State machines are wonderful tools](https://nullprogram.com/blog/2020/12/31/?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[C2x: –±—É–¥—É—â–∏–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç C](https://habr.com/ru/company/badoo/blog/503140/)\n\n[–ü–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è](https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D1%82%D0%BE%D0%BA_%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F)\n\n[Preface](https://changkun.de/modern-cpp/en-us/00-preface/index.html)\n\n[C++ Ring buffer](https://loosechainsaw.github.io/c++/2020/02/19/ringbuffer/)\n\n[Home](https://interviews.school/)\n\n[Valgrind Home](https://valgrind.org/)\n\n[mkirchner/linked-list-good-taste](https://github.com/mkirchner/linked-list-good-taste)\n\n[Command Line Interface Guidelines](https://clig.dev/)\n\n[Basics of Hash Tables Tutorials & Notes | Data Structures | HackerEarth](https://www.hackerearth.com/practice/data-structures/hash-tables/basics-of-hash-tables/tutorial/)\n\n[Squares of a Sorted Array - LeetCode](https://leetcode.com/problems/squares-of-a-sorted-array/)\n\n## Rust / Go\n\n[A half-hour to learn Rust - fasterthanli.me](https://fasterthanli.me/articles/a-half-hour-to-learn-rust?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[Learn Go in ~5mins](https://gist.github.com/prologic/5f6afe9c1b98016ca278f4d507e65510#file-learngoin5mins-md)\n\n[Rust Design Patterns](https://rust-unofficial.github.io/patterns/?utm_source=hackernewsletter&utm_medium=email&utm_term=books)\n\n[CXX - safe interop between Rust and C++](https://cxx.rs/tutorial.html)\n\n## SQL // Postgres\n\n[ossc-db/pg_hint_plan](https://github.com/ossc-db/pg_hint_plan)\n\n[Complete Intro to Databases - Exclusive Workshop](https://frontendmasters.com/workshops/complete-intro-databases/?utm_source=newsletter&utm_medium=email&utm_campaign=frontendfocus&utm_content=databases)\n\n[SQL style guide](https://www.sqlstyle.guide/)\n\n[Binary data performance in PostgreSQL - Cybertec](https://www.cybertec-postgresql.com/en/binary-data-performance-in-postgresql/)\n\n[Kafka Is Not a Database](https://fivetran.com/blog/kafka-is-not-a-database)\n\n[Basic Operations](https://www.bookstack.cn/read/rocksdb-en/2f89b6c17fd1b7d4.md)\n\n[API pagination design](https://solovyov.net/blog/2020/api-pagination-design/?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[PostgreSQL WAL Archiving](https://www.opsdash.com/blog/postgresql-wal-archiving-backup.html)\n\n[All About PostgreSQL Streaming Replication](https://www.opsdash.com/blog/postgresql-streaming-replication-howto.html)\n\n[Homepage](https://materialize.com/)\n\n[turbo/pg-shortkey](https://github.com/turbo/pg-shortkey)\n\n[pgagroal](https://agroal.github.io/pgagroal/gettingstarted.html)\n\n[pgtop - a top clone for PostgreSQL](https://dev.to/cosimo/pgtop-a-top-clone-for-postgresql-319)\n\n[Postgres sequence's last_value field does not work as expected](https://stackoverflow.com/questions/49687272/postgres-sequences-last-value-field-does-not-work-as-expected)\n\n[The Open Source Firebase Alternative | Supabase](https://supabase.io/)\n\n## Services\n\n[Serverless SaaS Boilerplate](https://serverless.page/?ref=producthunt)\n\n[Postal - Paywall for your email](https://www.postalapp.io/?ref=producthunt)\n\n[Stan Sobolev](https://read.cv/jacke)\n\n[Upptime](https://upptime.js.org/?utm_source=hackernewsletter&utm_medium=email&utm_term=show_hn)\n\n[The Intuitive Management Tool](https://monday.com/lp/startup-recruitment/?utm_source=apps_marketplace&utm_campaign=producthunt)\n\n[Product-Hunt - LinearB](https://linearb.io/product-hunt/?ref=producthunt)\n\n[n8n.cloud | Powerful workflow automation tool](https://www.n8n.cloud/?ref=producthunt)\n\n[Pioneer Launcher](https://pioneer.app/launcher?ref=producthunt)\n\n[ClickUp‚Ñ¢ | One app to replace them all](https://clickup.com/)\n\n[UIGiants](https://uigiants.com/?ref=producthunt)\n\n[Type Studio - The easiest way to edit your video.](https://typestudio.co/)\n\n[Discover the Best Remote Jobs to Work From Home](https://www.remote.io/?ref=producthunt)\n\n[Validated Ideas](https://validated.substack.com/?ref=producthunt)\n\n[Algoritmika Coding Bootcamp 2.0](https://bootcamp.algoritmika.org/?utm_source=telegram&utm_medium=smm&utm_campaign=techcrunchru&utm_category=Technologies#!/tab/207220321-1)\n\n[–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ Ducalis.io –ø—Ä–∏–≤–ª—ë–∫ –æ—Ç –§–†–ò–ò –ø–µ—Ä–≤—ã–µ –≤–Ω–µ—à–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ - –§–∏–Ω–∞–Ω—Å—ã –Ω–∞ vc.ru](https://vc.ru/finance/190211-razrabotchik-sistemy-prioritizacii-zadach-dlya-biznesa-ducalis-io-privlek-ot-frii-pervye-vneshnie-investicii)\n\n[FileParty - Watch Local Files Together](https://fileparty.co/?ref=producthunt)\n\n[Lobe | Machine Learning Made Easy](https://lobe.ai/?ref=producthunt)\n\n[Launch - Discover your next favorite non-technical tool or product](https://launch.nocodedevs.com/?ref=producthunt)\n\n[Pitch](https://app.pitch.com/app/create-required-workspace)\n\n[–ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è - –®–∫–æ–ª–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏ SkillFactory](https://skillfactory.ru/courses)\n\n[Slash - The productivity machine you've been looking for.](https://getslash.co/producthunt?ref=producthunt)\n\n[Demo - Wanted](https://getwanted.com/en-us/company/demo?ref=producthunt)\n\n[–ú–∞—Ä–∞—Ñ–æ–Ω –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä—ã](https://marathon.habr.com/?utm_source=habr_banner)\n\n[7777 - Your remote AWS database on your local port 7777](https://port7777.com/)\n\n[Elegant spreadsheet imports for all | Flatfile Portal](https://get.flatfile.io/producthunt-portal?ref=newsletter&utm_source=partner&utm_medium=email&utm_campaign=producthunt-email-newsletter_q4-2020-portal-promotion-day-6-newsletter-promo&utm_content=email-promotion&utm_term=producthunt-day-6)\n\n[Birabo | Effortless Real-Time Collaboration For Teams](https://www.birabo.com/)\n\n## Typescript / Javascript\n\n[Inside Figma: a case study on strict null checks](https://www.figma.com/blog/inside-figma-a-case-study-on-strict-null-checks/)\n\n[Detached window memory leaks](https://web.dev/detached-window-memory-leaks/)\n\n[Frontend framework](https://mfrachet.github.io/create-frontend-framework/)\n\n## Java / Scala\n\n[Advanced Java Bytecode Tutorial | JRebel by Perforce](https://www.jrebel.com/blog/java-bytecode-tutorial)\n\n[Scalac - Senior Scala Developer @ Scalac](https://jobs.lever.co/scalac/a9bc9f19-a585-4df1-8330-af8d2083e4aa?lever-origin=applied&lever-source[]=Twitter)\n\n[Beyond Java](https://www.beyondjava.net/java-programmers-guide-java-byte-code)\n\n[How to Read Java Bytecode (with examples)](https://dev.to/theodesp/how-to-read-java-bytecode-with-examples-4p7g)\n\n[Retry Failing Tasks with Cats and Scala](https://alexn.org/blog/2020/08/03/on-error-retry-loop.html)\n\n[Understanding HotSpot JVM Performance with JITWatch](https://www.infoq.com/presentations/jitwatch/)\n\n[Request-Level Client-Side API](https://doc.akka.io/docs/akka-http/current/client-side/request-level.html)\n\n[wireapp/wire-signals](https://github.com/wireapp/wire-signals)\n\n[Type classes with Scala 2](https://justinhj.github.io/2020/12/06/type-classes-scala-2.html)\n\n[Tapir vs Endpoints4s - The battle of the endpoints definition!](https://scalac.io/tapir-vs-endpoints4s/)\n\n[apimorphism/telegramium](https://github.com/apimorphism/telegramium)\n\n[Java Persistence API](https://ru.wikipedia.org/wiki/Java_Persistence_API)\n\n[Your relational data. Objectively. - Hibernate ORM](http://hibernate.org/orm/)\n\n[Monad transformers and cats‚Ää-‚Ää3 tips for beginners](https://blog.softwaremill.com/monad-transformers-and-cats-3-tips-for-beginners-196fabe58daa)\n\n[Forward Compatibility for the Scala 3 Transition](https://scala-lang.org/blog/2020/11/19/scala-3-forward-compat.html)\n\n[Mirror, Mirror on the Wall, Who's the Genericioust of Them All? - Generic Programming with Scala 3](https://blog.philipp-martini.de/blog/magic-mirror-scala3/)\n\n[propensive/probably](https://github.com/propensive/probably/)\n\n[https://github.com/lihaoyi/mainargs](https://github.com/lihaoyi/mainargs)\n\n[ollls/zio-tls-http](https://github.com/ollls/zio-tls-http?utm_campaign=ZIO%20News&utm_medium=email&utm_source=Revue%20newsletter)\n\n[Securing a Web Application](https://spring.io/guides/gs/securing-web/)\n\n## Kubernetes // Docker\n\n[Docker Plugin - sbt-native-packager 1.8.0-RC12+0-41cd4384+20201026-2033 documentation](https://www.scala-sbt.org/sbt-native-packager/formats/docker.html)\n\n[Install Tools](https://kubernetes.io/docs/tasks/tools/)\n\n[Pods](https://kubernetes.io/docs/concepts/workloads/pods/)\n\n[Getting started](https://kubernetes.io/docs/setup/)\n\n[Creating a cluster with kubeadm](https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/)\n\n[Using Minikube to Create a Cluster](https://kubernetes.io/docs/tutorials/kubernetes-basics/create-cluster/cluster-intro/)\n\n[Hello Minikube](https://kubernetes.io/docs/tutorials/hello-minikube/)\n\n[Install Tools](https://kubernetes.io/docs/tasks/tools/)\n\n[–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes —Å –ø–æ–º–æ—â—å—é Minikube](https://kubernetes.io/ru/docs/setup/learning-environment/minikube/)\n\n[How to Use Minikube to Create Kubernetes Clusters and Deploy Applications - Container Journal](https://containerjournal.com/topics/container-ecosystems/using-minikube-for-kubernetes-clusters/)\n\n[Using Multi-Node Clusters](https://minikube.sigs.k8s.io/docs/tutorials/multi_node/)\n\n[Set up a Standalone Kubernetes Cluster with Minikube](https://www.alibabacloud.com/blog/set-up-a-standalone-kubernetes-cluster-with-minikube_595448)\n\n[kubectl Cheat Sheet](https://kubernetes.io/docs/reference/kubectl/cheatsheet/)\n\n[Spread0x/Kubernetes-Cheat-Sheet](https://github.com/Spread0x/Kubernetes-Cheat-Sheet)\n\n[Best practices for writing Dockerfiles](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/)\n\n[Introducing Glommio a Thread per Core Crate for Rust & Linux](https://www.datadoghq.com/blog/engineering/introducing-glommio/)\n\n## AWS\n\n[Handle AWS lambda error with API gateway integration using Typescript in a clean way](https://www.albertgao.xyz/2019/07/08/handle-aws-lambda-error-with-api-gateway-integration-using-typescript-in-a-clean-way/)\n\n[How to solve the callback response already delivered warning when writing AWS lambda](https://www.albertgao.xyz/2020/03/04/how-to-solve-the-callback-response-already-delivered-warning-when-writing-aws-lambda/)\n\n## Swift\n\n[Build a SwiftUI app for iOS 14 - SwiftUI for iOS 14 - Design+Code](https://designcode.io/swiftui2-course)\n\n[https://www.raywenderlich.com/4919757-your-first-ios-and-swiftui-app/lessons/2](https://www.raywenderlich.com/4919757-your-first-ios-and-swiftui-app/lessons/2)\n\n[https://www.albertgao.xyz/2017/12/14/how-to-add-item-for-tab-bar-controller/](https://www.albertgao.xyz/2017/12/14/how-to-add-item-for-tab-bar-controller/)\n\n[iOS User Interfaces: Storyboards vs. NIBs vs. Custom Code](https://www.toptal.com/ios/ios-user-interfaces-storyboards-vs-nibs-vs-custom-code)\n\n[How to write storyboard-free views in Swift with SnapKit](https://medium.com/@kenzai/how-to-write-clean-beautiful-storyboard-free-views-in-swift-with-snapkit-443e74fc23b2)\n\n[Ramotion/folding-cell](https://github.com/Ramotion/folding-cell)\n\n[marcosgriselli/SwipeableTabBarController](https://github.com/marcosgriselli/SwipeableTabBarController)\n\n[robb/Cartography](https://github.com/robb/Cartography)\n\n## Numpy // ML // Python\n\n[NumPy Illustrated: The Visual Guide to Numpy](https://medium.com/better-programming/numpy-illustrated-the-visual-guide-to-numpy-3b1d4976de1d)\n\n[ML Space - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è ML-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞](https://sbercloud.ru/ru/aicloud/mlspace)\n\n# Misc\n\n[Tejotron](https://www.tejotron.com/?utm_source=hackernewsletter&utm_medium=email&utm_term=show_hn)\n\n### Networking\n\n[Visualizing Network Topologies: Zero to Hero in Two Days](https://habr.com/en/post/534716/)\n\n[https://www.youtube.com/watch?v=hiKPPy584Mg](https://www.youtube.com/watch?v=hiKPPy584Mg)\n\n[Networking - Amazon Web Services Tutorial - Intellipaat](https://intellipaat.com/blog/tutorial/amazon-web-services-aws-tutorial/networking/)\n\n[https://www.youtube.com/watch?v=b1gq9jTqInA](https://www.youtube.com/watch?v=b1gq9jTqInA)\n\n[https://www.youtube.com/watch?v=8toveAOL5eA](https://www.youtube.com/watch?v=8toveAOL5eA)\n\n[Ditherpunk - The article I wish I had about monochrome image dithering - surma.dev](https://surma.dev/things/ditherpunk/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n[](https://surma.dev/things/ditherpunk/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n[Parsing JSON at the CLI: A Practical Introduction to `jq` (and more!)](https://sequoia.makes.software/parsing-json-at-the-cli-a-practical-introduction-to-jq-and-more/?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[Percona-QA/pquery](https://github.com/Percona-QA/pquery)\n\n[Things you're allowed to do](https://milan.cvitkovic.net/writing/things_youre_allowed_to_do/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n[–ü–æ—á–µ–º—É –±–∏–∑–Ω–µ—Å—É –Ω–µ –Ω—É–∂–Ω–æ –±–æ—è—Ç—å—Å—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤](https://vc.ru/u/574744-professionaly-4-0/184874-pochemu-biznesu-ne-nuzhno-boyatsya-frilanserov)\n\n[PhoneInfoga](https://sundowndev.github.io/PhoneInfoga/)\n\n[TON Surf. Blockchain Communicator: data browser, crypto wallet and private chat](https://ton.surf/main)\n\n[–ò—Å–ø–æ–ª—å–∑—É–µ–º GPG –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤](https://habr.com/ru/post/358182/)\n\n[git-crypt - transparent file encryption in git](https://www.agwa.name/projects/git-crypt/)\n\n[How to secure sensitive data with git-crypt](https://buddy.works/guides/git-crypt)\n\n[Stork Search: Impossibly Fast Web Search for Static Sites](https://stork-search.net/?ref=stackshare)\n\n[Spread0x/Project-Lightspeed](https://github.com/Spread0x/Project-Lightspeed)\n\n[Slack Status Automated](https://www.statusly.app/?ref=producthunt)\n\n[–¢–µ—Ä–º–æ—Å—Ç–∞—Ç Nest: –æ–±–∑–æ—Ä, —Ñ—É–Ω–∫—Ü–∏–∏, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ - future2day.ru](https://future2day.ru/nest-termostat/)\n\n[–ö–∞–∫ —è 1000 –¥–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è OpenHAB, –∞ –∑–∞—Ç–µ–º –ø–µ—Ä–µ—à–µ–ª –Ω–∞ Home Assistant](https://habr.com/ru/post/485848/)\n\n[Designer as Writer - Page 4](https://stasaki.com/designer-as-writer/4/?utm_source=hackernewsletter&utm_medium=email&utm_term=design)\n\n[Ask HN: What was a book that changed your life? | Hacker News](https://news.ycombinator.com/item?id=25530700&utm_source=hackernewsletter&utm_medium=email&utm_term=books)\n\n[Ask HN: Best Talks of 2020? | Hacker News](https://news.ycombinator.com/item?id=25537230&utm_source=hackernewsletter&utm_medium=email&utm_term=ask_hn)\n\n[Ask HN: What's a side project you built to make money that hasn't? | Hacker News](https://news.ycombinator.com/item?id=25580637&utm_source=hackernewsletter&utm_medium=email&utm_term=ask_hn)\n\n[Ask HN: What is the best book you read in 2020? | Hacker News](https://news.ycombinator.com/item?id=25590522&utm_source=hackernewsletter&utm_medium=email&utm_term=books)\n\n[The Growth Toolkit](https://growthtoolkit.growgrowgrow.co/?ref=producthunt)\n\n[–ü–æ—Ä–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å: 15 –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ vc.ru —á–∞—â–µ –≤—Å–µ–≥–æ –¥–æ–±–∞–≤–ª—è–ª–∏ –≤ –∑–∞–∫–ª–∞–¥–∫–∏ - –°—Ç–∞—Ä—Ç–∞–ø—ã –∏ –±–∏–∑–Ω–µ—Å –Ω–∞ vc.ru](https://vc.ru/team/190373-pora-otkryvat-15-materialov-kotorye-polzovateli-vc-ru-chashche-vsego-dobavlyali-v-zakladki)\n\n[–°–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø–æ–¥–±–æ—Ä–∫–∞ –ø–æ –ø—Ä–æ–∫–∞—á–∫–µ soft skills. –•–≤–∞—Ç–∏—Ç –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å - –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–∞ vc.ru](https://vc.ru/education/101011-samaya-bolshaya-podborka-po-prokachke-soft-skills-hvatit-na-vsyu-zhizn)\n\n[–î–µ–≤—è—Ç—å –≥–ª–∞–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –≤ UX/UI-–¥–∏–∑–∞–π–Ω–µ –≤ 2021 –≥–æ–¥—É - –î–∏–∑–∞–π–Ω –Ω–∞ vc.ru](https://vc.ru/design/178662-devyat-glavnyh-trendov-v-ux-ui-dizayne-v-2021-godu)\n\n[–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —É–¥–∞–ª—ë–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, internal mobility –∏ –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ: –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ –ò–¢-–∫–∞—Ä—å–µ—Ä–∞ –≤ Luxoft - Luxoft - —Å—Ç–∞—Ç—å–∏, –≤–∞–∫–∞–Ω—Å–∏–∏, —Ñ–æ—Ç–æ, –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞ vc.ru](https://vc.ru/luxoft/191837-mezhdunarodnye-proekty-udalennaya-rabota-internal-mobility-i-mentorstvo-kak-ustroena-it-karera-v-luxoft)\n\n## Trello related projects\n\n[Jacke/taskbook-trello](https://github.com/Jacke/taskbook-trello)\n\n[Jacke/trello-cli](https://github.com/Jacke/trello-cli)\n\n## Random\n\n[Share Your Product Demo](https://www.navattic.com/?ref=producthunt)\n\n[Voiceflow | Design, prototype, & launch voice apps](https://www.voiceflow.com/?ref=producthunt)\n\n[Build internal tools, remarkably fast.](https://retool.com/?ref=cooperpress)\n\n[Contra - Work the Way You Want](https://contra.com/?ref=producthunt)\n\n[APIs for Software Developers - NoCodeAPI](https://nocodeapi.com/devapis/?ref=producthunt)\n\n[Olvy | Beautiful release notes that add joy to shipping software](https://olvy.co/)\n\n[Nodes - a new way to create with code | https://nodes.io](https://nodes.io/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n# Resources (merge to topics)\n\n## Courses\n\n[Introduction to Deep Learning & Neural Networks - Learn Interactively](https://www.educative.io/courses/intro-deep-learning?utm_source=activecampaign&utm_medium=email&utm_campaign=intro-deep-learning&vgo_ee=8PmY%2Fa2UfC%2FXNOFDMzsCJovy7T5YEJ8ohjC9vauJg30%3D)\n\n[The All-in-One Guide to C++20 - Learn Interactively](https://www.educative.io/courses/all-in-one-guide-cpp-20?utm_source=activecampaign&utm_medium=email&utm_campaign=all-in-one-guide-cpp-20&vgo_ee=8PmY%2Fa2UfC%2FXNOFDMzsCJovy7T5YEJ8ohjC9vauJg30%3D)\n\n[](https://www.educative.io/courses/cpp-programming-experienced-devs?utm_source=activecampaign&utm_medium=email&utm_campaign=cpp-programming-experienced-devs&vgo_ee=8PmY%2Fa2UfC%2FXNOFDMzsCJovy7T5YEJ8ohjC9vauJg30%3D)\n\n[C Programming for Experienced Engineers - Learn Interactively](https://www.educative.io/courses/c-programming-experienced-devs?utm_source=activecampaign&utm_medium=email&utm_campaign=c-programming-experienced-devs&vgo_ee=8PmY%2Fa2UfC%2FXNOFDMzsCJovy7T5YEJ8ohjC9vauJg30%3D)\n\n[CSE 506: Schedule](http://www.cs.unc.edu/~porter/courses/cse506/s16/syllabus.html)\n\n[450 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –æ—Ç –õ–∏–≥–∏ –ø–ª—é—â–∞ - –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –Ω–∞ vc.ru](https://vc.ru/education/129931-450-besplatnyh-kursov-ot-ligi-plyushcha)\n\n## Math / Linear algebra\n\n[Free Math Resources - Textbooks, Lectures Notes, Videos and Online Courses](https://realnotcomplex.com/)\n\n[An Intuitive Guide to Linear Algebra](https://betterexplained.com/articles/linear-algebra-guide/)\n\n[Videos](https://ocw.mit.edu/resources/res-18-010-a-2020-vision-of-linear-algebra-spring-2020/videos/index.htm)\n\n## Deep learning\n\n[MIT Deep Learning 6.S191](http://introtodeeplearning.com/)\n\n## Algos / Algorithms / Tech Interview\n\n## Interview resources\n\n[algorithm-visualizer/algorithm-visualizer](https://github.com/algorithm-visualizer/algorithm-visualizer)\n\n[kdn251/interviews](https://github.com/kdn251/interviews)\n\n[yangshun/tech-interview-handbook](https://github.com/yangshun/tech-interview-handbook)\n\n[amejiarosario/dsa.js-data-structures-algorithms-javascript](https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript)\n\n[This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if anything crucial is missing. I will add more links soon.](https://gist.github.com/TSiege/cbb0507082bb18ff7e4b)\n\n[TSiege/Tech-Interview-Cheat-Sheet](https://github.com/TSiege/Tech-Interview-Cheat-Sheet)\n\n[Dongryul-Kim/harvard_notes](https://github.com/Dongryul-Kim/harvard_notes)\n\n[Know Thy Complexities!](https://www.bigocheatsheet.com/)\n\n---\n\n[Algorithms and Data Structures Cheatsheet](https://algs4.cs.princeton.edu/cheatsheet/)\n\n---\n\n[Algorithms Cheat Sheets](https://cheatography.com/tag/algorithms/)\n\n[Balanced Brackets | HackerRank](https://www.hackerrank.com/challenges/balanced-brackets/problem)\n\n[Depth-first search](https://en.wikipedia.org/wiki/Depth-first_search)\n\n[Breadth-first search](https://en.wikipedia.org/wiki/Breadth-first_search#:~:text=Breadth%2Dfirst%20search%20(BFS),tree%20or%20graph%20data%20structures)\n\n[Algorithms For Dummies Cheat Sheet - dummies](https://www.dummies.com/programming/big-data/algorithms-dummies-cheat-sheet/)\n\n[Cheatsheet | Tech Interview Handbook](https://yangshun.github.io/tech-interview-handbook/cheatsheet/)\n\n[15 days cheat sheet for hacking technical interviews at big tech companies.](https://medium.com/@nhudinhtuan/15-days-cheat-sheet-for-hacking-technical-interviews-at-big-tech-companies-d780717dcec1)\n\n[Technical Interview Preparation - Data Structures and Algorithms - HackMD](https://hackmd.io/@nesquena/SJIV-n7B?type=view)\n\n[My Google Technical Interview Cheat Sheet](https://dev.to/elliot/my-google-technical-interview-cheat-sheet-1lbd)\n\n[A*](https://codingtrain.github.io/AStar/)\n\n[Binary Search | Master algorithms together](https://binarysearch.io/)\n\n[teivah/algodeck](https://github.com/teivah/algodeck)\n\n[The Missing Semester of Your CS Education](https://missing.csail.mit.edu/)\n\n[A visual debugger for Jupyter](https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559)\n\n## Linux / OS\n\n[styleguide](https://google.github.io/styleguide/shellguide.html#s8-calling-commands)\n\n[Unix Toolbox](http://cb.vu/unixtoolbox.xhtml)\n\n[Analyzing the Attacks on my Website](https://dev.to/pluralsight/analyzing-the-attacks-on-my-website-30jf)\n\n[Concurrent programming, with examples](https://begriffs.com/posts/2020-03-23-concurrent-programming.html?hn=1&utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n#c  \n\n[Linux Kernel Teaching - The Linux Kernel documentation](https://linux-kernel-labs.github.io/refs/heads/master/index.html)\n\n[Linux Kernel Development and Writing a Simple Kernel Module - Developers Area](https://devarea.com/linux-kernel-development-and-writing-a-simple-kernel-module/#.XoXzntMzZQa)\n\n[Writing an OS in Rust](https://os.phil-opp.com/)\n\n[A Tiny, Static, Full-Text Search Engine using Rust and WebAssembly | Matthias Endler](https://endler.dev/2019/tinysearch/?utm_source=hackernewsletter&utm_medium=email&utm_term=code)\n\n[Writing a file system from scratch in Rust](https://blog.carlosgaldino.com/writing-a-file-system-from-scratch-in-rust.html)\n\n[WasmBoxC&colon; Simple, Easy, and Fast VM-less Sandboxing](https://kripken.github.io/blog/wasm/2020/07/27/wasmboxc.html)\n\n[oso Documentation - oso 0.3.0 documentation](https://docs.osohq.com/)\n\n[The Book of Shaders](https://thebookofshaders.com/?utm_source=hackernewsletter&utm_medium=email&utm_term=books)\n\n[Nicole Orchard](https://nicoleorchard.com/blog/compilers)\n\n[How do you create a video chat application?](https://blog.phuaxueyong.com/post/2020-06-15-how-to-make-a-video-chat-app/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n## Distributed systems\n\n[heathermiller/dist-prog-book](https://github.com/heathermiller/dist-prog-book)\n\n[Challenges with distributed systems](https://aws.amazon.com/builders-library/challenges-with-distributed-systems/)\n\n## Containers\n\n[Docker Images : Part I - Reducing Image Size](https://www.ardanlabs.com/blog/2020/02/docker-images-part1-reducing-image-size.html)\n\n## Probability theory\n\n[Amb](http://rosettacode.org/wiki/Amb#Scala)\n\n## Rust / C\n\n[Foreign Function Interface](https://doc.rust-lang.org/rust-by-example/std_misc/ffi.html)\n\n[How to C (as of 2016)](https://matt.sh/howto-c)\n\n..\n\n## **D3**\n\n[Learn D3: Introduction](https://readhacker.news/s/4j8Jz)\n\n[Learn D3: Introduction](https://observablehq.com/@d3/learn-d3)\n\n## C++\n\n[Learn C++](https://www.learncpp.com/)\n\n[C++ Core Guidelines](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-functions)\n\n## Assembler / Machine code / x86 / ARM /\n\n[x86 Assembly Guide](http://flint.cs.yale.edu/cs421/papers/x86-asm/asm.html)\n\n[http://flint.cs.yale.edu/cs421/papers/x86-asm/asm.html](http://flint.cs.yale.edu/cs421/papers/x86-asm/asm.html)\n\n[Assembly Register Calling Convention Tutorial](https://www.raywenderlich.com/615-assembly-register-calling-convention-tutorial)\n\n## Flutter /. Dart\n\n[Dart documentation](https://dart.dev/guides)\n\n[Write your first Flutter app, part 1](https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/#1)\n\n[Best practices adoption automation for Dev & DevOps | Datree.io](https://www.datree.io/)\n\n[How do you create a video chat application?](https://blog.phuaxueyong.com/post/2020-06-15-how-to-make-a-video-chat-app/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)","n":0.026}}},{"i":21,"$":{"0":{"v":"System Design","n":0.707},"1":{"v":"\n\n> TODO: ADD BOOKS!!!\n\n## Videos\n\n[System Design](https://www.youtube.com/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX)\n\n## Courses\n\n[Grokking the System Design Interview - Learn Interactively](https://www.educative.io/courses/grokking-the-system-design-interview)\n\n[Scalability & System Design for Developers - Learn Interactively](https://www.educative.io/path/scalability-system-design)\n\n[Grokking the System Design Interview - Learn Interactively](https://www.educative.io/courses/grokking-the-system-design-interview)\n\n[1. Bloom Filters - Grokking the Advanced System Design Interview](https://www.educative.io/courses/grokking-adv-system-design-intvw/g2NrQEKn463)\n\n[Grokking the Advanced System Design Interview - Learn Interactively](https://www.educative.io/courses/grokking-adv-system-design-intvw)\n\n## Questions\n\n[GitHub - jwasham/coding-interview-university: A complete computer science study plan to become a software engineer.](https://github.com/jwasham/coding-interview-university#system-design-scalability-data-handling)\n\n[GitHub - donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards.](https://github.com/donnemartin/system-design-primer#cap-theorem)\n\n## Complex systems\n[What complex systems can teach us about building software | Kevin Sookocheff](https://sookocheff.com/post/systems/what-complex-systems-can-teach-us-about-building-software/)","n":0.105}}},{"i":22,"$":{"0":{"v":"Styleguide","n":1},"1":{"v":"\n[How to design better APIs](https://r.bluethl.net/how-to-design-better-apis)","n":0.447}}},{"i":23,"$":{"0":{"v":"Skill Playground","n":0.707},"1":{"v":"\n# Skills Playground\n\n### FS2\n\n[FS2 Tutorial: More than Functional Streaming in Scala](https://blog.rockthejvm.com/fs2/)\n\n[Log in - bunny.net](https://panel.bunny.net/welcome)\n\n[](https://cmhteixeira.com/concurrency/javaTimer.html)\n\n[Getting Started | Upstash: Documentation](https://docs.upstash.com/redis)\n\n[Hands-On GitOps Patterns for Helm Users](https://gist.github.com/scottrigby/82b224804052726624fd46d5f042146c)\n\n[Using Ansible & Nomad for a homelab (part 1)](https://blog.aleksic.dev/using-ansible-and-nomad-for-a-homelab-part-1)\n\n[Getting Started with YugabyteDB, Temporal, and the Temporal-Maru Benchmarking Tool - The Distributed SQL Blog](https://blog.yugabyte.com/getting-started-yugabytedb-temporal)\n\n[GitHub - leaningtech/cheerp-compiler: Cheerp compiler based on LLVM monorepo](https://github.com/leaningtech/cheerp-compiler)\n\n[Writing an OS in Rust](https://os.phil-opp.com/)\n\n[GitHub - mcollina/autocannon: fast HTTP/1.1 benchmarking tool written in Node.js](https://github.com/mcollina/autocannon)\n\n[Run Every Node.js Version in AWS Lambda](https://fusebit.io/blog/run-every-nodejs-version-in-lambda/?utm_source=nodeweekly.com&utm_medium=referral&utm_campaign=none)\n\n[Getting Started](https://docs.opta.dev/getting-started/)\n\n[GitHub - yoav-lavi/melody: Melody is a language that compiles to regular expressions and aims to be more easily readable and maintainable](https://github.com/yoav-lavi/melody?ref=console.dev)\n\n[GitHub - Spread0x/mizu: API traffic viewer for Kubernetes enabling you to view all API communication between microservices. Think TCPDump and Wireshark re-invented for Kubernetes](https://github.com/Spread0x/mizu)\n\n[5mins of Postgres E4: Writing your own custom Postgres aggregates with Rust or raw SQL](https://pganalyze.com/blog/5mins-postgres-custom-aggregates-rust-sql-pgx)\n\n[What's new in Pgpool-II 4.3?](https://pgsqlpgpool.blogspot.com/2022/01/whats-new-in-pgpool-ii-43.html)\n\n[GitHub - sergeche/create-ilf-editor: –ü—Ä–æ–µ–∫—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ \"–Ø ‚ù§Ô∏è –§—Ä–æ–Ω—Ç—ç–Ω–¥\"](https://github.com/sergeche/create-ilf-editor)\n\n[GitHub - littlefs-project/littlefs: A little fail-safe filesystem designed for microcontrollers](https://github.com/littlefs-project/littlefs)\n\n[GitHub - sekigon-gonnoc/Pico-PIO-USB: USB host/device implementation using PIO of raspberry pi pico (RP2040).](https://github.com/sekigon-gonnoc/Pico-PIO-USB)\n\n[GitHub - OffcierCia/DeFi-Developer-Road-Map: DeFi Developer roadmap is a curated Web3.0 Developer handbook which includes a list of the best tools for DApps, development resources and lifehacks.](https://github.com/OffcierCia/DeFi-Developer-Road-Map)\n\n[GitHub - algorithmica-org/algorithmica: New version of the website](https://github.com/algorithmica-org/algorithmica)\n\n[GitHub - DataTalksClub/data-engineering-zoomcamp: Free Data Engineering course!](https://github.com/DataTalksClub/data-engineering-zoomcamp)\n\n[GitHub - dair-ai/GNNs-Recipe: A recipe to study Graph Neural Networks (GNNs)](https://github.com/dair-ai/GNNs-Recipe)\n\n[GitHub - BishopFox/unredacter: Never ever ever use pixelation as a redaction technique](https://github.com/BishopFox/unredacter)\n\n[ailab/Real-CUGAN at main ¬∑ bilibili/ailab](https://github.com/bilibili/ailab/tree/main/Real-CUGAN)\n\n[My Approach to Automatic Musical Composition](https://flujoo.github.io/en/my-approach-to-automatic-musical-composition/)\n\n[SNES Development Part 1: Getting Started](https://blog.wesleyac.com/posts/snes-dev-1-getting-started)\n\n[GitHub - gaogaotiantian/viztracer: VizTracer is a low-overhead logging/debugging/profiling tool that can trace and visualize your python code execution.](https://github.com/gaogaotiantian/viztracer?ref=stackshare)\n\n[Use Streams to Build High-Performing Node.js Applications | AppSignal Blog](https://blog.appsignal.com/2022/02/02/use-streams-to-build-high-performing-nodejs-applications.html)\n\n[GitHub - Jacke/parallel-for: Automatically parallelize your for-comprehensions at compile time.](https://github.com/Jacke/parallel-for)\n\n[GitHub - Jacke/go-generics-the-hard-way: A hands-on approach to getting started with Go generics.](https://github.com/Jacke/go-generics-the-hard-way)\n\n[systemd by example - the systemd playground](https://systemd-by-example.com/)\n\n[GitHub - weinberg/SQLToy: An in-memory SQL database written in Javascript to demonstrate how SQL works.](https://github.com/weinberg/SQLToy?utm_source=hackernewsletter&utm_medium=email&utm_term=data)\n\n[GitHub - Spread0x/awesome-selfhosted: A list of Free Software network services and web applications which can be hosted on your own servers](https://github.com/Spread0x/awesome-selfhosted)\n\n[GitHub - iluwatar/java-design-patterns: Design patterns implemented in Java](https://github.com/iluwatar/java-design-patterns)\n\n[GitHub - async-labs/builderbook: Open source web application to learn JS stack: React, Material-UI, Next.js, Node.js, Express.js, Mongoose, MongoDB database.](https://github.com/async-labs/builderbook)\n\n[Introduction to Actors](https://doc.akka.io/docs/akka/current/typed/actors.html)\n\n[My Dos and Donts in sbt Build Definitions](https://www.chris-kipp.io/blog/my-dos-and-donts-in-sbt-build-definitions)\n\n[Setting Up | Atlas](https://atlasgo.io/cli/getting-started/setting-up)","n":0.053}}},{"i":24,"$":{"0":{"v":"Security","n":1},"1":{"v":"\n## Linux\n\n[itpol/linux-workstation-security.md at master ¬∑ lfit/itpol](https://github.com/lfit/itpol/blob/master/linux-workstation-security.md)\n\n[TCP/IP Stack Hardening](https://cromwell-intl.com/cybersecurity/stack-hardening.html)\n\n[](https://blog.cloudflare.com/ocsp-stapling-how-cloudflare-just-made-ssl-30/)\n\n[Raymii.org](https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html)\n\n[Raymii.org](https://raymii.org/s/articles/HTTP_Public_Key_Pinning_Extension_HPKP.html)\n\n[Configuring Apache, Nginx, and OpenSSL for Forward Secrecy | Qualys Security Blog](https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy)\n\n[Zukunftssicher Verschl√ºsseln mit Perfect Forward Secrecy](https://www.heise.de/security/artikel/Zukunftssicher-Verschluesseln-mit-Perfect-Forward-Secrecy-1923800.html)\n\n[How's My SSL?](https://www.howsmyssl.com/)\n\n[SSL Server Test](https://www.ssllabs.com/ssltest)\n\n[https://testssl.sh/](https://testssl.sh/)\n\n[ImperialViolet](https://www.imperialviolet.org/2010/06/25/overclocking-ssl.html)\n\n[](https://insouciant.org/tech/ssl-performance-case-study/)\n\n[Logjam: PFS Deployment Guide](https://weakdh.org/sysadmin.html)","n":0.18}}},{"i":25,"$":{"0":{"v":"Firewall","n":1},"1":{"v":"\n# Firewall 101\n\n[[Lightboard Video] Kubernetes Networking 101](https://www.youtube.com/watch?v=S8RA2h7I8Uw&list=WL&index=3)\n\n[Firewalls: Basics of Iptables](https://serversforhackers.com/c/firewalls-basics-of-iptables)\n\n[https://www.youtube.com/watch?v=6Ra17Qpj68c](https://www.youtube.com/watch?v=6Ra17Qpj68c)\n\n[https://www.youtube.com/watch?v=ouqDHX6HwOo](https://www.youtube.com/watch?v=ouqDHX6HwOo)\n\n[https://www.youtube.com/watch?v=XKfhOQWrUVw](https://www.youtube.com/watch?v=XKfhOQWrUVw)\n\n[–ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables –¥–ª—è —á–∞–π–Ω–∏–∫–æ–≤ | Losst](https://losst.ru/nastrojka-iptables-dlya-chajnikov)\n\n[https://ronaknathani.com/blog/2020/07/kubernetes-nodeport-and-iptables-rules/](https://ronaknathani.com/blog/2020/07/kubernetes-nodeport-and-iptables-rules/)\n\n[A Cheat Sheet For Using pf in OS X Lion and Up - krypted](https://krypted.com/mac-security/a-cheat-sheet-for-using-pf-in-os-x-lion-and-up/)\n\n[https://www.youtube.com/watch?v=SOWQCAA8lZA](https://www.youtube.com/watch?v=SOWQCAA8lZA)\n\n[Quick and easy pf (packet filter) firewall rules on macOS - Neil Sabol's Blog - IT, weird bikes, and other random topics](https://blog.neilsabol.site/post/quickly-easily-adding-pf-packet-filter-firewall-rules-macos-osx/)\n\n[https://www.youtube.com/watch?v=AWGSchaLnJA](https://www.youtube.com/watch?v=AWGSchaLnJA)","n":0.143}}},{"i":26,"$":{"0":{"v":"Perf","n":1},"1":{"v":"\n# Performance\n\n\n## Performance Metrics for Web Applications\n\n[Time to First Byte (TTFB)](https://web.dev/ttfb/)\n[Rendering on the Web](https://web.dev/rendering-on-the-web/#terminology)\n[First Contentful Paint - Chrome Developers](https://web.dev/first-contentful-paint/)\n[Largest Contentful Paint (LCP)](https://web.dev/lcp/)\n[Time to Interactive - Chrome Developers](https://web.dev/interactive/)\n","n":0.192}}},{"i":27,"$":{"0":{"v":"OS","n":1}}},{"i":28,"$":{"0":{"v":"Virtualization","n":1},"1":{"v":"\n# Virtualization\n\n[Programming with C & Python languages](https://www.unicorn-engine.org/docs/tutorial.html)\n\n[Unicorn & QEMU](https://www.unicorn-engine.org/docs/beyond_qemu.html)","n":0.333}}},{"i":29,"$":{"0":{"v":"Linux","n":1},"1":{"v":"\n# Books\n\n[Linux Insides](https://0xax.gitbooks.io/linux-insides/content/)\n[Linux From Scratch](https://www.linuxfromscratch.org/lfs/view/stable/)\n\n## Internals\n[Interactive map of Linux kernel](https://makelinux.github.io/kernel/map/)\n","n":0.316}}},{"i":30,"$":{"0":{"v":"Optimisation","n":1},"1":{"v":"\n## Size\n\n[Size Optimization Tricks](https://justine.lol/sizetricks/#elf)","n":0.5}}},{"i":31,"$":{"0":{"v":"Net","n":1},"1":{"v":"\n## Intro\n\n[Linux IP Stacks](https://www.satchell.net/ipstacks/toc.html)\n\n## Playground\n\n[Home](https://dn42.eu/Home)\n\n## BGP\n\n[Why and how I got my own ASN!](https://chown.me/blog/getting-my-own-asn)\n\n# Cisco\n\n## Cheatsheets\n\n[Cisco Commands Cheat Sheet](https://www.netwrix.com/cisco_commands_cheat_sheet.html)\n\n[](https://w7cloud.com/packet-tracer-cisco-commands-list-cli-basic/)\n\n## Core\n\n[](https://www.bgp4.as/)\n\n## Home Lab\n\n[Home Lab Beginners guide - Hardware](https://haydenjames.io/home-lab-beginners-guide-hardware/)","n":0.196}}},{"i":32,"$":{"0":{"v":"Interview","n":1},"1":{"v":"\n# Coding interview\n\n## Salary negotiation\n\n[Ten rules for negotiating a job offer](https://haseebq.com/my-ten-rules-for-negotiating-a-job-offer/)\n\n## Passing the Interview\n\n[An Algorithm for Passing Programming Interviews - malisper.me](https://malisper.me/an-algorithm-for-passing-programming-interviews/)\n\n## Courses\n\n[InterviewBit](https://www.interviewbit.com/practice/)\n\n[Learn C++ from Scratch - Free Interactive Course](https://www.educative.io/courses/learn-cpp-from-scratch?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-8vWxDZmOOkutDBOsm_bV7-xHebMwivgOzs6d-42zd1gSVDRRkZvRJPT-fZoKvIOYO93npUdrw9qY5q88OFAFSNZX8u_g&utm_content=168598836&utm_source=hs_email)\n\n## Java\n\n[GitHub - iluwatar/java-design-patterns: Design patterns implemented in Java](https://github.com/iluwatar/java-design-patterns)\n\n[GitHub - TheAlgorithms/Java: All Algorithms implemented in Java](https://github.com/TheAlgorithms/Java)\n\n### Unsorted\n\n[Web Application and Software Architecture 101 - Learn Interactively](https://www.educative.io/courses/web-application-software-architecture-101?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-8rHQMf83aIvB6hCHnxzazTs8PGdgJD4fGbNsQwjVvjE3TAesjvJZ2Tc-8h0tXTMDX2HNybTa11As8w9Xx2eZKz6M4ZmA&utm_content=168598836&utm_source=hs_email)\n\n[Machine Learning System Design - Learn Interactively](https://www.educative.io/courses/machine-learning-system-design?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-_03a4Mr-Cbi2hU3W4V5kLLQ7pJBOwKr9KCO5XMVo5SG6ZztNgRp-eG0uYG9QYKVxyyE0oOS0sPousz3dWmWo0w5xtnJw&utm_content=168598836&utm_source=hs_email)\n\n[Become an Effective Software Engineering Manager - Learn Interactively](https://www.educative.io/courses/become-an-effective-engineering-manager?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-9KxugnpUbYV9YMWMFTfbzP3ftZ8RYfbyY98xmwT6eYQbbPn1DekL9uIqoxwXP862qVOEEv9hA1Zl7kCDCeTVvFJggHgg&utm_content=168598836&utm_source=hs_email)\n\n[Grokking the Coding Interview: Patterns for Coding Questions - Learn Interactively](https://www.educative.io/courses/grokking-the-coding-interview?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-8dcvoCGBNqQ_qMUn21Fc4sKAOcC2OXOP91XR_UsNj6Y-ZtEGocUxPGwL7kjKiTCCJjl0gDU9B6Ig9y6kW-xsb_7-aStA&utm_content=168598836&utm_source=hs_email)\n\n[Grokking the Behavioral Interview - Learn Interactively](https://www.educative.io/courses/grokking-the-behavioral-interview?utm_campaign=Email%20Marketing&utm_medium=email&_hsmi=168598836&_hsenc=p2ANqtz-8ZWgZlUUNl2u1MSHu1TbhhA-0TKcQBxFrc4VRIwgXdeCONT7NJh1314mVEjhh4EtaSSUJeo0wi1FZ7zz9r9bmdpShWIw&utm_content=168598836&utm_source=hs_email)\n\n[Building Enterprise Applications with Spring Boot - Learn Interactively](https://www.educative.io/courses/enterprise-applications-spring-boot?_hsenc=p2ANqtz-_SSqRqYIrk2b7nymrnkIRY7Pbw9IuzB4tzS-nsnYfA-7woNOvCkv8yRzBvXmUjPLOd1xBijkQ5yHTihH4kZZGtc6-fJg&_hsmi=167095974&utm_campaign=New%20Courses%20Weekly%20Announcement&utm_content=167095974&utm_medium=email&utm_source=hs_email)\n\n## Cheatsheets\n\n- When to use specific algos\n    \n    ```\n    If input array is sorted then\n        - Binary search\n        - Two pointers\n    \n    If asked for all permutations/subsets then\n        - Backtracking\n    \n    If given a tree then\n        - DFS\n        - BFS\n    \n    If given a graph then\n        - DFS\n        - BFS\n    \n    If given a linked list then\n        - Two pointers\n    \n    If recursion is banned then\n        - Stack\n    \n    If must solve in-place then\n        - Swap corresponding values\n        - Store one or more different values in the same pointer\n    \n    If asked for maximum/minumum subarray/subset/options then\n        - Dynamic programming\n    \n    If asked for top/least K items then\n        - Heap\n    \n    If asked for common strings then\n        - Map\n        - Trie\n    \n    Else\n        - Map/Set for O(1) time & O(n) space\n        - Sort input for O(nlogn) time and O(1) space\n    \n    ```\n    \n\n[This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if anything crucial is missing. I will add more links soon.](https://gist.github.com/TSiege/cbb0507082bb18ff7e4b)\n\n## General algo\n\n[The Algorithms](https://the-algorithms.com/)\n\n[Data structures cheat sheet, for coding interviews and computer science classes | Interview Cake](https://www.interviewcake.com/data-structures-reference)\n\n[Know Thy Complexities!](https://www.bigocheatsheet.com/)\n\n[GitHub - Jacke/Tech-Interview-Cheat-Sheet: Studying for a tech interview sucks. Here's an open source cheat sheet to help](https://github.com/Jacke/Tech-Interview-Cheat-Sheet)\n\n[[PUBLIC] Java Syntax Notes.pdf](https://drive.google.com/file/d/1ao4ZA28zzBttDkuS6MLQI52gDs_CJZEm/view)\n\n[GitHub - OpenGenus/cosmos: World's largest Contributor driven code dataset | Join our Internship and enjoy üå± | Algorithms that run our universe | Your personal library of every algorithm and data structure code that you will ever encounter |](https://github.com/OpenGenus/cosmos)\n\n[Swift Algorithm Club: Graphs with Adjacency List](https://www.raywenderlich.com/773-swift-algorithm-club-graphs-with-adjacency-list)\n\n## Language specific resources\n\n### JS\n\n[Jacke/javascript-algorithms](https://github.com/Jacke/javascript-algorithms?organization=Jacke&organization=Jacke)\n\n[Jacke/javascript-questions](https://github.com/Jacke/javascript-questions)\n\n### Scala\n\n[Scala interview questions](https://pedrorijo.com/blog/scala-interview-questions/#9-what-is-unit)\n\n[HiredInTech's Training Camp for Coding Interviews](https://www.hiredintech.com/classrooms/algorithm-design/lesson/39)\n\n[Top 40 Data Structure Interview Questions and Answers (2021) - InterviewBit - InterviewBit](https://www.interviewbit.com/data-structure-interview-questions/)\n\n[AlgoDaily - An Executable Data Structures Cheat Sheet for Interviews - Introduction/Arrays](https://algodaily.com/lessons/an-executable-data-structures-cheat-sheet#binary-search-tree-10)\n\n[Top 10 algorithms in Interview Questions - GeeksforGeeks](https://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/)\n\n[GitHub - yangshun/lago: üìï Data Structures and Algorithms library in TypeScript](https://github.com/yangshun/lago)\n\n[GitHub - kdn251/interviews: Everything you need to know to get the job.](https://github.com/kdn251/interviews)\n\n[When to use each Sorting Algorithm - GeeksforGeeks](https://www.geeksforgeeks.org/when-to-use-each-sorting-algorithms/)\n\n## Visualization\n\n[VisuAlgo - visualising data structures and algorithms through animation](https://visualgo.net/en)\n\n[Radix Sort](https://www.cs.usfca.edu/~galles/visualization/RadixSort.html)\n\n# Interview General\n\n## Behavioural interview\n\n[Using the Star technique to shine at job interviews: a how-to guide](https://www.theguardian.com/careers/careers-blog/star-technique-competency-based-interview)\n\n## UNSORTED\n\nhttps://github.com/yangshun/tech-interview-handbook\n\n[Learn Advanced Distributed Systems Design](https://particular.net/adsd)\n\n[CS5412: Topics in Cloud Computing (Spring 2021 focus: Using the Cloud to Create Smart IoT Systems).](https://www.cs.cornell.edu/courses/cs5412/2021sp/)\n\n[6.824 Schedule: Spring 2021](https://pdos.csail.mit.edu/6.824/schedule.html)\n\n[](https://www.udemy.com/course/master-the-coding-interview-big-tech-faang-interviews/)\n\n[GT - Refresher - Advanced OS | Udacity Free Courses](https://www.udacity.com/course/gt-refresher-advanced-os--ud098)","n":0.046}}},{"i":33,"$":{"0":{"v":"Git","n":1},"1":{"v":"\n## Commits\n\n[Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\n\n[How to Write a Git Commit Message](https://cbea.ms/git-commit/#seven-rules)\n\n## Git\n\n[Resetting, Checking Out & Reverting | Atlassian Git Tutorial](https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting)\n","n":0.236}}},{"i":34,"$":{"0":{"v":"Frontend","n":1}}},{"i":35,"$":{"0":{"v":"TS","n":1}}},{"i":36,"$":{"0":{"v":"React","n":1}}},{"i":37,"$":{"0":{"v":"JS","n":1},"1":{"v":"\n# General\n\n[The Modern JavaScript Tutorial](https://javascript.info/)\n\n\n## JS\n\n[JavaScript Equality Table Game](https://eqeq.js.org/)\n\n[Values * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_values.html)\n\n[Operators * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_operators.html)\n\n[The non-values `undefined` and `null` * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_undefined-null.html)\n\n[Symbols * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_symbols.html)\n\n[Modules * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_modules.html)\n\n[Evaluating code dynamically: `eval()`, `new Function()` (advanced) * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_dynamic-code-evaluation.html)\n\n[Destructuring * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_destructuring.html)\n\n[WeakSets (`WeakSet`) (advanced) * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_weaksets.html)\n\n[Asynchronous programming in JavaScript * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_async-js.html)\n\n[Synchronous generators (advanced) * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_sync-generators.html)\n\n[Promises for asynchronous programming [ES6] * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_promises.html)\n\n[Async functions * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_async-functions.html)\n\n[Creating and parsing JSON (`JSON`) * JavaScript for impatient programmers (ES2022 edition)](https://exploringjs.com/impatient-js/ch_json.html)","n":0.089}}},{"i":38,"$":{"0":{"v":"CSS","n":1},"1":{"v":"\n## Tailwind\n[[design#tailwind]]\n\n## Tips\n\n[Defensive CSS](https://defensivecss.dev/)\n\n## Backdrop Filters\n\n[backdrop-filter demo](https://codepen.io/ZoranJambor/pen/ExbroQV)\n\n# CSS\n\n[3D in CSS](https://garden.bradwoods.io/notes/css/3d)\n\n[What's New Since CSS3 in 2015? | CSS-Tricks](https://css-tricks.com/whats-new-since-css3/)\n\n[How Flexbox Works](https://tiffanybbrown.com/2022/01/how-does-flexbox-work/index.html)\n\n[CSS Animations Tutorial: Complete Guide for Beginners](https://themeisle.com/blog/css-animations-tutorial/)\n\n[How to Favicon in 2022: Six files that fit most needs - Martian Chronicles](https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs)","n":0.162}}},{"i":39,"$":{"0":{"v":"DevOps","n":1},"1":{"v":"\n## Essentials\n\n[Google - Site Reliability Engineering](https://sre.google/sre-book/table-of-contents/)\n\n[The USE Method](https://www.brendangregg.com/usemethod.html)\n\n[The RED Method: key metrics for microservices architecture](https://www.weave.works/blog/the-red-method-key-metrics-for-microservices-architecture/)\n\n## Load balancing\n\n[Multi-tier load-balancing with Linux](https://vincent.bernat.ch/en/blog/2018-multi-tier-loadbalancer)","n":0.224}}},{"i":40,"$":{"0":{"v":"k8s","n":1},"1":{"v":"\n\n## Awesome resources\n\n[GitHub - ramitsurana/awesome-kubernetes: A curated list for awesome kubernetes sources](https://github.com/ramitsurana/awesome-kubernetes)\n\n## Cheatsheets\n\n[Kubectl Kubernetes Free CheatSheet](https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-a4)\n\n[Containers Courses - Cloud Academy](https://cloudacademy.com/library/containers/courses/)\n\n[https://github.com/Spread0x/dobby](https://github.com/Spread0x/dobby)\n\n[Installing Skaffold](https://skaffold.dev/docs/install/)\n\n## Build engines\n\n[Spread0x/buildkit](https://github.com/Spread0x/buildkit)\n\n## Backup\n\n[vmware-tanzu/velero](https://github.com/vmware-tanzu/velero)\n\n## Chaos engineering\n\n[GitHub - Netflix/chaosmonkey: Chaos Monkey is a resiliency tool that helps applications tolerate random instance failures.](https://github.com/netflix/chaosmonkey)\n\n[Open Source solutions for chaos engineering in Kubernetes](https://blog.flant.com/chaos-engineering-in-kubernetes-open-source-tools/)\n\n[GitHub - dastergon/awesome-chaos-engineering: A curated list of Chaos Engineering resources.](https://github.com/dastergon/awesome-chaos-engineering)\n\n[GitHub - codecentric/chaos-monkey-spring-boot: Chaos Monkey for Spring Boot](https://github.com/codecentric/chaos-monkey-spring-boot)\n\n## Gitlab\n\n[IBM/Kubernetes-container-service-GitLab-sample](https://github.com/IBM/Kubernetes-container-service-GitLab-sample)\n\n## Persistence\n\n### Postgres\n\n[How to Deploy pgAdmin in Kubernetes](https://www.enterprisedb.com/blog/how-deploy-pgadmin-kubernetes)\n\n[pgmetrics](https://pgmetrics.io/)\n\n### Terraform\n\n[hashicorp/terraform-k8s](https://github.com/hashicorp/terraform-k8s)\n\n[](https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs)\n\n[hashicorp/terraform-provider-kubernetes](https://github.com/hashicorp/terraform-provider-kubernetes)\n\n## Gateway & Security\n\n[Home ¬∑ Netflix/Hystrix Wiki](https://github.com/Netflix/Hystrix/wiki)\n\n[GitHub - Netflix/zuul: Zuul is a gateway service that provides dynamic routing, monitoring, resiliency, security, and more.](https://github.com/Netflix/zuul)\n\n## Deployment\n\n[Spinnaker](https://spinnaker.io/)\n\n[GitHub - spinnaker/swabbie: Spinnaker's clean up service](https://github.com/spinnaker/swabbie)\n\n## Replace YAML and test on local cluster with kind library\n\n[Spread0x/naml](https://github.com/Spread0x/naml)\n\n[kubernetes-sigs/kind](https://github.com/kubernetes-sigs/kind)\n\n[Distributed Load Testing Using Kubernetes | Qwiklabs](https://www.qwiklabs.com/focuses/967?parent=catalog)\n\n[Kubernetes performance testing tutorial: Load test a cluster](https://searchitoperations.techtarget.com/tutorial/Kubernetes-performance-testing-tutorial-Load-test-a-cluster)\n\n[Distributed load testing using Google Kubernetes Engine](https://cloud.google.com/architecture/distributed-load-testing-using-gke)\n\n[Top 5 Kubernetes Load-Testing Tools and How They Compare Speedscale](https://speedscale.com/2021/04/08/kubernetes-load-testing/)\n\n[Spread0x/kboom](https://github.com/Spread0x/kboom)\n\n[13-Step Guide to Performance Testing in Kubernetes - DZone Cloud](https://dzone.com/articles/performance-testing-in-kubernetes)\n\n[Traefik Mesh](https://doc.traefik.io/traefik-mesh/)\n\n[About Hexomatic and how it works](https://hexomatic.com/about)\n\n[https://gist.github.com/Jacke/06b6e835f02de46d53793d04e691334d](https://gist.github.com/Jacke/06b6e835f02de46d53793d04e691334d)\n\n[https://github.com/RehanSaeed/Kubernetes-Cheat-Sheet](https://github.com/RehanSaeed/Kubernetes-Cheat-Sheet)\n\n[Annotating Kubernetes Services for Humans](https://ambassadorlabs.github.io/k8s-for-humans/)\n\n[Spread0x/k8svent](https://github.com/Spread0x/k8svent)\n\n[Telepresence Quick Start | Ambassador](https://www.getambassador.io/docs/telepresence/latest/quick-start/demo-node/)\n\n[Intercept a service in your own environment | Ambassador](https://www.getambassador.io/docs/telepresence/latest/howtos/intercepts/)\n\n[https://github.com/Spread0x/Echo-Server](https://github.com/Spread0x/Echo-Server)\n\n[Spread0x/shell-operator](https://github.com/Spread0x/shell-operator)\n\n### Networking\n\n<aside>\nüåç Calico\n\n</aside>\n\n[Install calicoctl](https://docs.projectcalico.org/getting-started/clis/calicoctl/install)\n\n[Installing Calico on Amazon EKS](https://docs.aws.amazon.com/eks/latest/userguide/calico.html)\n\n[Managing the kube-proxy add-on](https://docs.aws.amazon.com/eks/latest/userguide/managing-kube-proxy.html)\n\n## Shell\n\n### Prompt\n\n[GitHub - jonmosco/kube-ps1: Kubernetes prompt info for bash and zsh](https://github.com/jonmosco/kube-ps1)\n\n[GitHub - superbrothers/zsh-kubectl-prompt: Display information about the kubectl current context and namespace in zsh prompt.](https://github.com/superbrothers/zsh-kubectl-prompt)\n","n":0.07}}},{"i":41,"$":{"0":{"v":"AWS","n":1},"1":{"v":"\n## Pulumi\n\n[Before You Begin | AWS](https://www.pulumi.com/docs/get-started/aws/begin/)\n\n## IAM\n\n[GitHub - Netflix/consoleme: A Central Control Plane for AWS Permissions and Access](https://github.com/Netflix/consoleme)\n\n## TLS\n\n[Lemur - lemur develop documentation](https://lemur.readthedocs.io/en/latest/index.html)\n\n## App Runner\n\n[Securing the new AWS App Runner service | Sysdig](https://sysdig.com/blog/securing-the-new-aws-app-runner-service/)\n\n[App Runner: The AWS Service We've Been Dreaming Of?](https://www.trek10.com/blog/aws-app-runner)\n\n[How I used Lambda and EFS for massively parallel compute.](https://read.acloud.guru/how-i-used-lambda-and-efs-for-massively-parallel-compute-96575bc85157)\n\n## Cloudformation\n\n[Getting Started with AWS CloudFormation - Amazon Web Services](https://aws.amazon.com/cloudformation/getting-started/)\n\n## Terraform\n\n[Introduction - Terraform by HashiCorp](https://www.terraform.io/intro/index.html)\n\n## Cloudwatch\n\n[GitHub - lucagrulla/cw: The best way to tail AWS CloudWatch Logs from your terminal](https://github.com/lucagrulla/cw)","n":0.113}}},{"i":42,"$":{"0":{"v":"DB","n":1},"1":{"v":"\n[Things You Should Know About Databases](https://architecturenotes.co/things-you-should-know-about-databases/)\n\n# General\n\n[How Does a Database Work? | Let‚Äôs Build a Simple Database](https://cstack.github.io/db_tutorial/)\n\n## Kinds\n\n[The key differences between SQL and NoSQL databases](https://laptrinhx.com/the-key-differences-between-sql-and-nosql-databases-2430850351/)\n\n## Transactions & ACID & Indexing\n\n[Indexing in Databases | Set 1 - GeeksforGeeks](https://www.geeksforgeeks.org/indexing-in-databases-set-1/?ref=rp)\n\n[Transaction Isolation Levels in DBMS - GeeksforGeeks](https://www.geeksforgeeks.org/transaction-isolation-levels-dbms/)\n\n[Dirty Reads and the Read Uncommitted Isolation Level](https://www.sqlshack.com/dirty-reads-and-the-read-uncommitted-isolation-level/)\n\n[–ö–∞–∫ –±—ã —è —Å–µ–π—á–∞—Å –æ–±—ä—è—Å–Ω–∏–ª –º–æ–ª–æ–¥–æ–º—É —Å–µ–±–µ... –∑–∞—á–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è ACID –¥–ª—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö?](https://habr.com/ru/post/535616/)\n\n[–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è ACID –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º —è–∑—ã–∫–µ](https://habr.com/ru/post/555920/)\n\n## High perfomance\n\n[GitHub - vesoft-inc/nebula-graph: A distributed, fast open-source graph database featuring horizontal scalability and high availability](https://github.com/vesoft-inc/nebula-graph)\n\n# Postgres\n\n## Scalability & Clustering & Sharding\n\n[](https://hazelcast.com/glossary/sharding/)\n\n[An Overview of Sharding & Partitioning | Hazelcast](https://hazelcast.com/glossary/sharding/)\n\n[Deploying Pgpool-II Exporter with Docker](https://b-peng.blogspot.com/2021/07/deploying-pgpool2-exporter-with-docker.html)\n\n[Database sharding vs partitioning | Newbedev](https://newbedev.com/database-sharding-vs-partitioning)\n\n## PL & extensions\n\n[PLV8](https://plv8.github.io/#building-for-macos-linux)\n\n[GitHub - zombodb/pgx: Build Postgres Extensions with Rust!](https://github.com/zombodb/pgx)\n\n## FoundationDB\nhttps://blog.the-pans.com/notes-on-the-foundationdb-paper/\n","n":0.093}}},{"i":43,"$":{"0":{"v":"SQL","n":1}}},{"i":44,"$":{"0":{"v":"PG","n":1},"1":{"v":"\n[The Internals of PostgreSQL : Chapter 1 Database Cluster, Databases, and Tables](https://www.interdb.jp/pg/pgsql01.html)","n":0.289}}},{"i":45,"$":{"0":{"v":"Data Structure","n":0.707},"1":{"v":"\n## Course\n\n[6.851: Advanced Data Structures (Spring'21)](https://courses.csail.mit.edu/6.851/spring21/lectures/)\n\n### Floating points\n\n[IEEE-754 Floating Point representation explained](https://bartaz.github.io/ieee754-visualization/)\n\n[Floating Point Visually Explained](https://fabiensanglard.net/floating_point_visually_explained/)\n\n## Packing\n\n[A primer on Roaring bitmaps: what they are and how they work](https://vikramoberoi.com/a-primer-on-roaring-bitmaps-what-they-are-and-how-they-work/)\n[The Lost Art of Structure Packing](http://www.catb.org/esr/structure-packing/)","n":0.177}}},{"i":46,"$":{"0":{"v":"Crypto","n":1},"1":{"v":"\n[The Animated Elliptic Curve](https://curves.ulfheim.net/)\n[HyperLogLog playground](https://djhworld.github.io/hyperloglog/)","n":0.447}}},{"i":47,"$":{"0":{"v":"SSL","n":1},"1":{"v":"\n# Learn the OpenSSL // Own CA\n\n## Goal\n\n- Set up your own CA\n- Create certificates\n- Try to use them in scripts\n\n[Sign up to get your Virtual Badge | 7 Days Free Trial](https://www.virtualbadge.io/signup?ref=producthunt)\n\n[TinyCert](https://www.tinycert.org/?ref=producthunt)\n\n[How to create an SSH certificate authority](https://jameshfisher.com/2018/03/16/how-to-create-an-ssh-certificate-authority/)\n\n[step-ca | Easily Manage Certificates For Production Workloads](https://smallstep.com/certificates/)\n\n[How to act as a Certificate Authority (the Easy Way)](https://realtimelogic.com/articles/How-to-act-as-a-Certificate-Authority-the-Easy-Way)\n\n[Private Certificate Authority - AWS Certificate Manager - Amazon Web Services (AWS)](https://aws.amazon.com/certificate-manager/private-certificate-authority/)\n\n[Managed PKI Solutions](https://www.securew2.com/solutions/managed-pki/)\n\n[AWS Certificate Manager - Amazon Web Services (AWS)](https://aws.amazon.com/certificate-manager/)\n\n[How to Create Your Own SSL Certificate Authority for Local HTTPS Development](https://deliciousbrains.com/ssl-certificate-authority-for-local-https-development/)\n\n[OpenSSL Certificate Authority - Jamie Nguyen](https://jamielinux.com/docs/openssl-certificate-authority/)\n\n[Create your own Certificate Authority](https://priyalwalpita.medium.com/create-your-own-certificate-authority-47f49d0ba086)\n\n[Generate Certificates - Open Distro for Elasticsearch Documentation](https://opendistro.github.io/for-elasticsearch-docs/old/0.9.0/docs/security/generate-certificates/)\n\n[Expose web services at home via Tailscale for fun](https://init8.lol/expose-web-services-at-home-via-tailscale-for-fun/?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[Setting up a Remote Dev Environment When You're a Cloud Skeptic](https://blog.tilt.dev/2021/10/11/old-school-remote-dev-clusters.html?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[You can use Tailscale with Kubernetes, you know](https://tailscale.com/blog/kubecon-21/?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[Tailscale for developers: Connect to your resources from Gitpod](https://tailscale.com/blog/gitpod/?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[Tailscale for developers: Connect to your resources from GitHub Codespaces](https://tailscale.com/blog/github-codespaces/?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[Access AWS RDS privately using Tailscale](https://tailscale.com/kb/1141/aws-rds/?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\n\n[Tailscale on AWS Lambda](https://tailscale.com/kb/1113/aws-lambda/)\n\n[Tailscale on AWS Lightsail](https://tailscale.com/kb/1128/aws-lightsail/)\n\n[Tailscale on fly.io](https://tailscale.com/kb/1132/flydotio/)\n\n[Connect to an AWS VPC using subnet routes](https://tailscale.com/kb/1021/install-aws/)\n\n[Access your tailnet from OpenVSCode](https://tailscale.com/kb/1162/openvscode/)\n\n[Terminology and Concepts](https://tailscale.com/kb/1155/terminology-and-concepts/)\n\n[GitHub - smallstep/certificates: üõ°Ô∏è A private certificate authority (X.509 & SSH) & ACME server for secure automated certificate management, so you can use TLS everywhere & SSO for SSH.](https://github.com/smallstep/certificates)\n[GitHub - sandyghai/Build-Your-Own-Certificate-Authority: Build your own Certificate Authority to implement certificate chain](https://github.com/sandyghai/Build-Your-Own-Certificate-Authority)\n[GitHub - samrocketman/my_internal_ca: A set of basic scripts for managing an internal certificate authority.](https://github.com/samrocketman/my_internal_ca)\n[certificate-authority ¬∑ GitHub Topics ¬∑ GitHub](https://github.com/topics/certificate-authority)\n[GitHub - jhthorsen/app-sslmaker: Be your own SSL certificate authority](https://github.com/jhthorsen/app-sslmaker)\n[GitHub - radiac/caman: A self-signing certificate authority manager](https://github.com/radiac/caman)\n[How to create an HTTPS certificate for localhost domains ¬∑ GitHub](https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8)\n[GitHub - letsencrypt/boulder: An ACME-based certificate authority, written in Go.](https://github.com/letsencrypt/boulder)\n[GitHub - latentflip/dev-cert-authority: Self-signed certs for development](https://github.com/latentflip/dev-cert-authority)\n[GitHub - devilbox/cert-gen: Generate CA and self-signed SSL certificates usable in your browser for local development.](https://github.com/devilbox/cert-gen)\n[GitHub - llekn/openssl-ca: Shell scripts to manage a private Certificate Authority using OpenSSL](https://github.com/llekn/openssl-ca)\n[GitHub - rabbitmq/tls-gen: Generates self-signed x509/TLS/SSL certificates useful for development](https://github.com/michaelklishin/tls-gen)\n[GitHub - FiloSottile/mkcert: A simple zero-config tool to make locally trusted development certificates with any names you'd like.](https://github.com/FiloSottile/mkcert)\n[GitHub - etdey/ssl.ca: SSL certificate authority script package for creating and signing your own SSL/TLS certificates](https://github.com/etdey/ssl.ca)\n[GitHub - akanass/self-signed-certificate-with-custom-ca: Generate self signed certificate with a custom CA for your development process and make all browsers happy with a lock in the address bar](https://github.com/akanass/self-signed-certificate-with-custom-ca)\n[GitHub - mikegioia/pki: Certificate Authority management suite](https://github.com/mikegioia/pki)\n[GitHub - google/easypki: Creating a certificate authority the easy way](https://github.com/google/easypki)\n[Generate a self-signed certificate with a custom CA ¬∑ GitHub](https://gist.github.com/palazzem/a8ce2c6bda29af2b092d)\n[GitHub - TotallyInformation/SelfSigned-Cert-Creator: A short script to make it easy to create a viable, trusted self-signed certificate that can be used for SSL/TLS in particular.](https://github.com/TotallyInformation/SelfSigned-Cert-Creator)\n[kubernetes-the-hard-way/04-certificate-authority.md at master ¬∑ kelseyhightower/kubernetes-the-hard-way ¬∑ GitHub](https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/04-certificate-authority.md)\n[GitHub - olivierlemasle/java-certificate-authority: A Java Certificate Authority (CA), with web GUI and CLI](https://github.com/olivierlemasle/java-certificate-authority)\n[Managing your organization's SSH certificate authorities - GitHub Enterprise Cloud Docs](https://docs.github.com/en/organizations/managing-git-access-to-your-organizations-repositories/managing-your-organizations-ssh-certificate-authorities)\n[GitHub - zeus911/certificate-authority-1: Certificate Authority](https://github.com/zeus911/certificate-authority-1)\n[Certificate and Certificate Authority creation tool (for UnrealIRCd) ¬∑ GitHub](https://gist.github.com/FiXato/1215268)\n[GitHub - jetstack/google-cas-issuer: cert-manager issuer for Google CA Service](https://github.com/jetstack/google-cas-issuer)\n[simple-ca/README.md at master ¬∑ jcmoraisjr/simple-ca ¬∑ GitHub](https://github.com/jcmoraisjr/simple-ca/blob/master/README.md)\n[GitHub - kairoaraujo/goca: Golang Certificate Authority (CA) package](https://github.com/kairoaraujo/goca)\n[Certificate-Authority-Situational-Awareness/CASA System Design Document 160331.pdf at master ¬∑ nsacyber/Certificate-Authority-Situational-Awareness ¬∑ GitHub](https://github.com/nsacyber/Certificate-Authority-Situational-Awareness/blob/master/CASA%20System%20Design%20Document%20160331.pdf)\n[Kubernetes kubelet-certificate-authority on premise with kubespray causes certificate validation error for master node ¬∑ Issue #6760 ¬∑ kubernetes-sigs/kubespray ¬∑ GitHub](https://github.com/kubernetes-sigs/kubespray/issues/6760)\n[Certificate-Authority-Situational-Awareness/README.md at master ¬∑ nsacyber/Certificate-Authority-Situational-Awareness ¬∑ GitHub](https://github.com/nsacyber/Certificate-Authority-Situational-Awareness/blob/master/README.md)\n[GitHub - hakwerk/labca: A private Certificate Authority for internal (lab) use, based on the open source ACME Automated Certificate Management Environment implementation from Let's Encrypt (tm).](https://github.com/hakwerk/labca)\n[GitHub - SethRobertson/CA-baka: Simple X509 Certificate Authority/Generation Script (The sysadmin's and network security developer's best friend)](https://github.com/SethRobertson/CA-baka)\n[Certificate-Authority-Situational-Awareness/CASA_Documentation_SplunkCriteria.txt at master ¬∑ nsacyber/Certificate-Authority-Situational-Awareness ¬∑ GitHub](https://github.com/nsacyber/Certificate-Authority-Situational-Awareness/blob/master/CASA_Documentation_SplunkCriteria.txt)\n[GitHub - NLnetLabs/krill: RPKI Certificate Authority and Publication Server written in Rust](https://github.com/NLnetLabs/krill)\n[Setup a minimal certificate authority. #ca #minimal-ca #certificate #certificate-authority ¬∑ GitHub](https://gist.github.com/indygwyn/97d73c2cac588b1e99012924b08b8471)\n[GitHub - nerves-hub/nerves_hub_ca: NervesHub Certificate Authority](https://github.com/nerves-hub/nerves_hub_ca)\n[GitHub - csdvrx/sixel-tmux: sixel-tmux is a fork of tmux, with just one goal: having the most reliable support of graphics](https://github.com/csdvrx/sixel-tmux)\n[mapdns/main.go at main ¬∑ bahlo/mapdns ¬∑ GitHub](https://github.com/bahlo/mapdns/blob/main/main.go)\n[GitHub - miekg/dns: DNS library in Go](https://github.com/miekg/dns)\n[GitHub - mattn/tailscale-systray: Linux port of tailscale system tray menu.](https://github.com/mattn/tailscale-systray?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774)\nhttps://github.com/davidsbond/terraform-provider-tailscale/releases/tag/v0.4.0?utm_source=Tailscale+Newsletter&utm_campaign=a73def24ca-EMAIL_CAMPAIGN_2020_10_06_12_18_COPY_01&utm_medium=email&utm_term=0_0b42c45af3-a73def24ca-438431774\n","n":0.04}}},{"i":48,"$":{"0":{"v":"Clean Code","n":0.707},"1":{"v":"\n# Clean Code\n\n[GitHub - Spread0x/clean-code-javascript: Clean Code concepts adapted for JavaScript](https://github.com/Spread0x/clean-code-javascript)","n":0.302}}},{"i":49,"$":{"0":{"v":"Build X","n":0.707},"1":{"v":"\n## Webservers\n\n[Big list of http static server one-liners](https://gist.github.com/Jacke/7f24159fc62aff2c093c566d14da1099)","n":0.354}}},{"i":50,"$":{"0":{"v":"Books","n":1},"1":{"v":"\n\n# E-Books\n\n[Computer Networks](https://www.networksfromscratch.com/)\n\n## Linux\n\n[From bootloader to kernel](https://0xax.gitbooks.io/linux-insides/content/Booting/linux-bootstrap-1.html)","n":0.378}}},{"i":51,"$":{"0":{"v":"Backend","n":1}}},{"i":52,"$":{"0":{"v":"Spring","n":1},"1":{"v":"\n[](https://www.baeldung.com/start-here)\n\n## References\n\n[Spring Framework Overview](https://docs.spring.io/spring-framework/docs/5.3.x/reference/html/overview.html#overview)\n\n[Spring Framework - Architecture](https://www.tutorialspoint.com/spring/spring_architecture.htm)\n\n[Spring Framework Architecture | amitph](https://www.amitph.com/spring-framework-architecture/)\n\n[](https://www.baeldung.com/spring-boot-clean-architecture)\n\n## Courses\n\n[](https://www.baeldung.com/learn-spring-data-jpa-course)\n\n[](https://www.baeldung.com/learn-spring-course)\n\n[](https://www.baeldung.com/rest-with-spring-course)\n\n## Code Example\n\n[GitHub - spring-projects/spring-petclinic: A sample Spring-based application](https://github.com/spring-projects/spring-petclinic)\n\n[GitHub - gothinkster/spring-boot-realworld-example-app: Example Spring codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the RealWorld API spec.](https://github.com/gothinkster/spring-boot-realworld-example-app)\n\n[GitHub - gothinkster/spring-boot-realworld-example-app: Example Spring codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the RealWorld API spec.](https://github.com/gothinkster/spring-boot-realworld-example-app)\n\n[GitHub - Spread0x/spring-boot-examples: Code Examples for everything thats written on www.springboottutorial.com](https://github.com/Spread0x/spring-boot-examples)\n\n[gs-crud-with-vaadin/CrudWithVaadinApplication.java at main ¬∑ spring-guides/gs-crud-with-vaadin](https://github.com/spring-guides/gs-crud-with-vaadin/blob/main/complete/src/main/java/com/example/crudwithvaadin/CrudWithVaadinApplication.java)\n\n## JSON\n\n[Processing JSON Data in Spring Boot](https://attacomsian.com/blog/processing-json-spring-boot)\n\n## Java Records\n\n[The best way to use Java Records with JPA and Hibernate - Vlad Mihalcea](https://vladmihalcea.com/java-records-jpa-hibernate/)\n\n[Spring Boot and Java 16 Records](https://ashishtechmill.com/spring-boot-and-java-16-records)\n\n[indian-states/StateService.java at develop ¬∑ yrashish/indian-states](https://github.com/yrashish/indian-states/blob/develop/src/main/java/com/example/indianstates/StateService.java)\n\n[Java Records - How to use them with Hibernate and JPA](https://thorben-janssen.com/java-records-hibernate-jpa/)\n\n[Spring boot clean architecture tutorial and source code - baeldung - Java‰∫∫](https://javamana.com/2021/01/20210126205624496e.html)","n":0.089}}},{"i":53,"$":{"0":{"v":"Rust","n":1},"1":{"v":"\n[The Rust Reference](https://doc.rust-lang.org/reference/variables.html)\n\n[Global Memory Usage: The Whole World](https://speice.io/2019/02/the-whole-world.html)\n\n[Fixed Memory: Stacking Up](https://speice.io/2019/02/stacking-up.html)","n":0.302}}},{"i":54,"$":{"0":{"v":"JVM","n":1},"1":{"v":"\n## Internals\n[Bytecode Instructions](https://en.wikipedia.org/wiki/List_of_Java_bytecode_instructions)\n[Bytecode Specification](https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html)\n\n# JVM & Concurrency\n\n[Cheatsheet: Concurrency & Parallel Programming](https://cheatsheet.dennyzhang.com/cheatsheet-concurrency-a4)\n\n[dennyzhang/cheatsheet.dennyzhang.com](https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-concurrency-A4/concurrency.org#how-to-implement-a-spinlock)\n\n[null](https://www.youtube.com/playlist?list=PL9KKsDgbsrt4SyAJ1LdOTvofGPVCCrUt2)\n\n## Refs\n\n[Chapter 12. Execution](https://docs.oracle.com/javase/specs/jls/se16/html/jls-12.html#jls-12.2)\n\n[Chapter 2. The Structure of the Java Virtual Machine](https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-2.html)\n\n[https://www.youtube.com/watch?v=R6pl91IRVaI](https://www.youtube.com/watch?v=R6pl91IRVaI)\n\n[](https://www.baeldung.com/java-countdown-latch)\n\n### Resources\n\n**For testing**\n\n[Load / Soak Tests](http://tempusfugitlibrary.org/documentation/junit/load/)\n\n**General info and example**\n\n[GitHub - Jacke/100-Java-Concurrency-questions: An attempt to answer to the questions from the famous blogpost (in Russian)](https://github.com/Jacke/100-Java-Concurrency-questions)\n\n[GitHub - code-review-checklists/java-concurrency: Checklist for code reviews](https://github.com/code-review-checklists/java-concurrency)\n\n[GitHub - callicoder/java-concurrency-examples: Java Concurrency/Multithreading Tutorial with Examples for Dummies](https://github.com/callicoder/java-concurrency-examples)\n\n[GitHub - Apress/java-threads-concurrency-utilities: Source code for 'Java Threads and the Concurrency Utilities' by JEFF FRIESEN](https://github.com/Apress/java-threads-concurrency-utilities)\n\n[GitHub - LeonardoZ/java-concurrency-patterns: Concurrency Patterns and features found in Java, through multithreaded programming. Threads, Locks, Atomics and more.](https://github.com/LeonardoZ/java-concurrency-patterns)\n\n[](https://www.baeldung.com/java-mutex)\n\n[Java Threads 2nd edition: ATM locking example does not synchronize. WHY?](https://coderanch.com/t/232910/java/Java-Threads-edition-ATM-locking)\n\n[research!rsc: Memory Models](https://research.swtch.com/mm)\n\n[–ê–∫—Ç—É–∞–ª—å–Ω–∞ –ª–∏ –∫–Ω–∏–≥–∞ \"Java Concurrency in Practice\" –≤–æ –≤—Ä–µ–º–µ–Ω–∞ Java 8 –∏ 11?](https://habr.com/ru/company/piter/blog/451322/)\n\n[Java Concurrent Collections Cheat Sheet](https://www.logicbig.com/tutorials/core-java-tutorial/java-collections/concurrent-collection-cheatsheet.html)\n\n[https://sites.cs.ucsb.edu/~cappello/190B/resources/rc061-010d-java_concurrency_0.pdf](https://sites.cs.ucsb.edu/~cappello/190B/resources/rc061-010d-java_concurrency_0.pdf)\n\n[Core Java Concurrency - DZone Refcardz](https://dzone.com/refcardz/core-java-concurrency)\n\n[Java Performance Optimization - DZone Refcardz](https://dzone.com/refcardz/java-performance-optimization?fromrel=true)","n":0.088}}},{"i":55,"$":{"0":{"v":"Streams","n":1},"1":{"v":"\n### Abstract for Scala Ecosystem\n\n[https://www.youtube.com/watch?v=UaSXx-oObf4&list=WL&index=27](https://www.youtube.com/watch?v=UaSXx-oObf4&list=WL&index=27)\n\n## Akka\n\n### Videos\n\n```scala\n/Users/stan/Dev/_Videos/Akka\n```\n\n### Resources\n\n[Basics and working with Flows](https://doc.akka.io/docs/akka/current/stream/stream-flows-and-basics.html)\n\n[Buffers and working with rate](https://doc.akka.io/docs/akka/current/stream/stream-rate.html)\n\n[Basics and working with Flows](https://doc.akka.io/docs/akka/current/stream/stream-flows-and-basics.html)\n\n[Basics and working with Flows](https://doc.akka.io/docs/akka/current/stream/stream-flows-and-basics.html#stream-materialization)\n\n[Design Principles behind Akka Streams](https://doc.akka.io/docs/akka/current/general/stream/stream-design.html)\n\n## FS2\n\n[https://www.youtube.com/watch?v=tbShO8eIXbI](https://www.youtube.com/watch?v=tbShO8eIXbI)\n\n[https://www.youtube.com/watch?v=YWhrrfP3718](https://www.youtube.com/watch?v=YWhrrfP3718)\n\n## Java streams\n\n[https://www.youtube.com/watch?v=O8oN4KSZEXE](https://www.youtube.com/watch?v=O8oN4KSZEXE)\n\n[https://www.youtube.com/watch?v=i0Jr2l3jrDA](https://www.youtube.com/watch?v=i0Jr2l3jrDA)\n\n[https://www.youtube.com/watch?v=vxikpWnnnCU](https://www.youtube.com/watch?v=vxikpWnnnCU)\n\n[https://www.youtube.com/watch?v=TCJdc9SYwlQ](https://www.youtube.com/watch?v=TCJdc9SYwlQ)\n\n[https://www.youtube.com/watch?v=RzEiCguFZiY](https://www.youtube.com/watch?v=RzEiCguFZiY)\n\n# Fink & Projectifi\n\n[streaming-with-flink/examples-scala](https://github.com/streaming-with-flink/examples-scala)\n\n[apache/flink](https://github.com/apache/flink/tree/master/flink-examples)\n\n[phatak-dev/flink-examples](https://github.com/phatak-dev/flink-examples/blob/master/src/main/scala/com/madhukaraphatak/flink/streaming/examples/WindowAnatomy.scala)\n\n[ProjectiFi - Personal Finance Planning and Simulation for Financial Independence (FI)](https://projectifi.io/?ref=hn&utm_source=hackernewsletter&utm_medium=email&utm_term=show_hn)","n":0.151}}},{"i":56,"$":{"0":{"v":"Scala","n":1},"1":{"v":"## Dotty\n\n[GitHub - gzoller/dotty-reflection: Runtime-Like Reflection for Dotty](https://github.com/gzoller/dotty-reflection)\n\n[GitHub - Jacke/scala3-inspections](https://github.com/Jacke/scala3-inspections)\n\n## Misc\n\n## Courses\n\n[Foundations of Functional Programming in Scala](https://www.fp-tower.com/courses/foundations)\n\n## Error handling\n\n[A practical guide to error handling in Scala Cats and Cats Effect | SoftwareMill](https://softwaremill.com/practical-guide-to-error-handling-in-scala-cats-and-cats-effect/#recover-from-failure)","n":0.177}}},{"i":57,"$":{"0":{"v":"Learn","n":1},"1":{"v":"\n# FP Learn\n\n[Foundations of Functional Programming - Wikiversity](https://en.wikiversity.org/wiki/Foundations_of_Functional_Programming)\n\n[Foundations of Functional Programming/The Œª-cube - Wikiversity](https://en.wikiversity.org/wiki/Foundations_of_Functional_Programming/The_%CE%BB-cube)\n\n–†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∏–Ω—Ç–µ—Ä–æ–ø –º–µ–∂–¥—É –ë–∏—Ñ—É–Ω–∫—Ç–æ—Ä–æ–º BIO –∏ MonadError\n\nContext Bound\n\nIt shouldn‚Äôt be surprising that context bounds are implemented with implicit parameters, given their definition. Actually, the syntax I showed are syntactic sugars for what really happens. See below how they de-sugar:\n\n```jsx\ndef g[A : B](a: A) = h(a)\ndef g[A](a: A)(implicit ev: B[A]) = h(a)\n\n```\n\nNot works\n\n```jsx\ndef t[\nF[+_,+_]: izumi.functional.bio.BIOPrimitives: izumi.functional.bio.BIO, \nR[_] : Sync : MonadError[Throwable, ?]]\n(t: R[Int])(implicit s: MonadError[F[Throwable, ?], Throwable]): F[Throwable, Int]\n = s.pure(10/1)\n```\n\nWorks\n\n```jsx\nimport $plugin.$ivy.`org.typelevel:kind-projector_2.13.2:0.11.0`\nimport scala.concurrent.ExecutionContext.global\nimport doobie.util.ExecutionContexts\nimport izumi.functional._\nimport izumi.functional.bio._\n\n~~i~~mport izumi.functional.bio.catz._\nimport cats._, cats.effect._, cats.implicits._\nimplicit val cs: ContextShift[IO]           = IO.contextShift(ExecutionContexts.synchronous)\n\ndef t[F[+_,+_]: izumi.functional.bio.BIOPrimitives: izumi.functional.bio.BIO : izumi.functional.bio.BIOApplicative, R[_] : Sync :MonadError[?[_], Throwable], B](t: R[B])(implicit s: MonadError[R, Throwable]): F[Throwable, Int] = MonadError[F[Throwable, ?], Throwable].pure(10 / 0)\nt(IO(1/0))\n\ndef t[F[+_, +_]: BIOPrimitives: BIO, R[_]: Effect, B](t: R[B])(implicit cs: ContextShift[R]): F[Throwable, B] = {\n  Concurrent[F[Throwable, ?]].liftIO(Effect[R].toIO(t))\n}\n```\n\n[Welcome to Chimney's documentation! - Chimney 0.5.2 documentation](https://scalalandio.github.io/chimney/)\n\n```jsx\nKai @neko-kai May 21 23:36\n@Jacke If R[_] is a different type that isn't F[Throwable, ?], you could do it like this:\n\ndef t[F[+_, +_]: BIOAsync: BIOFork, R[_]: Effect, B](t: R[B]): F[Throwable, B] = {\n  import izumi.functional.bio.catz._\n  Concurrent[F[Throwable, ?]].liftIO(Effect[R].toIO(t))\n}\n\nt[zio.IO, cats.effect.IO, Int](cats.effect.IO(1))\n\ndef from[F[+_, +_]: BIOAsync: BIOFork, R[_]: Concurrent: ContextShift: Effect, B](t: F[_, B]): R[B] = {\n  import izumi.functional.bio.catz._\n  Effect[R].liftIO(Concurrent[F[Throwable, ?]].toIO(t))\n}\n\ndef toCatsEffect[F[+_], R, A](zio: RIO[R, A])(implicit R: Runtime[R], F: LiftIO[F]): F[A] =\n     F.liftIO(taskEffectInstance.toIO(zio))\n\ntoCatsEffect[cats.effect.IO, Any, Int](res14)\n\nimplicit class RichZIO[F[+_], R, A](val self: RIO[R, A])(implicit R: Runtime[R], F: LiftIO[F]) extends AnyVal {\ndef toCatsEffect[F[+_], R, A]: F[A] = F.liftIO(taskEffectInstance.toIO(self))\n}\n// WORKS\n\nimplicit class SmellyZI[F[+_, +_]: BIOAsync: BIOFork, R[_]: Effect, B](t: R[B]) {\n  def t: F[Throwable, B] = {\n    import izumi.functional.bio.catz._\n    Concurrent[F[Throwable, ?]].liftIO(Effect[R].toIO(t))\n  }\n  }\n\nimplicit class SmellyCattyyy[F[+_], R, A](zio: ZIO[R, Throwable, A])(implicit R: Runtime[R], F: LiftIO[F]) {\n    def toCatsEffect: F[A] =\n        F.liftIO(taskEffectInstance.toIO(zio))\n  }\n```\n\n[Jacke/milewski-ctfp-pdf](https://github.com/Jacke/milewski-ctfp-pdf)\n\n[TheAlgorithms/Python](https://github.com/TheAlgorithms/Python)\n\n[8.1 The Future of Machine Learning | Interpretable Machine Learning](https://christophm.github.io/interpretable-ml-book/the-future-of-machine-learning.html)\n\n[Spread0x/zio-query](https://github.com/Spread0x/zio-query)\n\n[Building a cool CLI with Decline for my ZIO App](https://medium.com/@pascal.mengelt/building-a-cool-cli-with-decline-for-my-zio-app-80e095b2899a)\n\n[Building the Death Star with ZIO Stream](https://juliano-alves.com/2020/05/04/deathstar-zio-stream/?utm_campaign=ZIO%20News&utm_medium=email&utm_source=Revue%20newsletter)\n\n[typelevel/cats-mtl](https://github.com/typelevel/cats-mtl/blob/master/core/src/main/scala/cats/mtl/instances/readert.scala)\n\n[Dependency injection with Reader Monad in Scala](https://medium.com/rahasak/dependency-injection-with-reader-monad-in-scala-fe05b29e04dd)\n\n[Scala-cats, compose Reader with ReaderT](https://stackoverflow.com/questions/55375125/scala-cats-compose-reader-with-readert)\n\n[State of Loom](http://cr.openjdk.java.net/~rpressler/loom/loom/sol1_part1.html)\n\n[Typelevel.scala | A comprehensive introduction to Cats-mtl](https://typelevel.org/blog/2018/10/06/intro-to-mtl.html)\n\n[No More Orphans](https://blog.7mind.io/no-more-orphans.html)\n\n[IO monad: which, why and how](https://kubuszok.com/2019/io-monad-which-why-and-how/)\n\n[Handling monadic errors](https://miklos-martin.github.io/learn/fp/2017/09/28/handling-monadic-errors.html)\n\n[https://gist.github.com/jackcviers/804b6d8d1b2ead210367a104a746fd00](https://gist.github.com/jackcviers/804b6d8d1b2ead210367a104a746fd00)\n\n[ZIO & Cats Effect: —É–¥–∞—á–Ω—ã–π —Å–æ—é–∑](https://habr.com/ru/company/oleg-bunin/blog/472386/)\n\n[circe/circe](https://github.com/circe/circe/blob/d8c869733446545c2d54ffe632dfdccaa0bbe9ec/modules/generic-simple/src/main/scala/io/circe/generic/simple/util/macros/JsonCodecMacros.scala)\n\n[Replacing Akka Actors with Cats Effect and FS2](https://vlovgr.github.io/actors-cats-effect-fs2/#1)\n\n[Typelevel.scala | Tagless Final algebras and Streaming](https://typelevel.org/blog/2018/05/09/tagless-final-streaming.html)\n\n[Cats Effect 3.0 Proposal ¬∑ Issue #634 ¬∑ typelevel/cats-effect](https://github.com/typelevel/cats-effect/issues/634)\n\n[Cats Effect 3.0 Design Discussion ¬∑ Issue #321 ¬∑ typelevel/cats-effect](https://github.com/typelevel/cats-effect/issues/321)\n\n[](https://typelevel.org/cats-mtl/lifting-classes.html)\n\n[AWS Lambda layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)\n\n[typelevel/cats-mtl](https://github.com/typelevel/cats-mtl/blob/dd5602ee8f18d24e44974eb91a5bed77fee9a896/tests/src/test/scala/cats/mtl/tests/WriterTTests.scala)\n\n[Cats: Law Testing](https://typelevel.org/cats/typeclasses/lawtesting.html)\n\n[What does the `#` operator mean in Scala?](https://stackoverflow.com/questions/9443004/what-does-the-operator-mean-in-scala)\n\n[herding cats - Checking laws with Discipline](http://eed3si9n.com/herding-cats/checking-laws-with-discipline.html)\n\n[typelevel/discipline](https://github.com/typelevel/discipline/blob/master/core/src/test/scala/org/typelevel/discipline/laws.scala)\n\n## Extended IOS\n\n[Error management ¬∑ Tofu](https://tinkoffcreditsystems.github.io/tofu/docs/errors)","n":0.051}}},{"i":58,"$":{"0":{"v":"Java","n":1}}},{"i":59,"$":{"0":{"v":"Haskell","n":1},"1":{"v":"\n# Haskell\n\n[wreq: An easy-to-use HTTP client library.](https://hackage.haskell.org/package/wreq)\n\n[AWS Œª Runtime](https://theam.github.io/aws-lambda-haskell-runtime/)\n\n[Types and Typeclasses](http://learnyouahaskell.com/types-and-typeclasses)\n\n[snoyberg/http-client](https://github.com/snoyberg/http-client/blob/master/TUTORIAL.md)\n\n[protocol-buffers: Parse Google Protocol Buffer specifications](https://hackage.haskell.org/package/protocol-buffers)\n\n[google/proto-lens](https://github.com/google/proto-lens)\n\n[req: Easy-to-use, type-safe, expandable, high-level HTTP client library](https://hackage.haskell.org/package/req)\n\n[https://www.youtube.com/watch?v=x3uF7fcQwWE](https://www.youtube.com/watch?v=x3uF7fcQwWE)","n":0.209}}},{"i":60,"$":{"0":{"v":"Go","n":1},"1":{"v":"\n# Go\n\n## Read\n\n[Revisiting arrays and slices with generics](https://quii.gitbook.io/learn-go-with-tests/go-fundamentals/revisiting-arrays-and-slices-with-generics)\n\n## Implement\n\n[SMTP protocol basics from scratch in Go: receiving email from Gmail](https://notes.eatonphil.com/handling-email-from-gmail-smtp-protocol-basics.html)\n\n## Threads\n\n[Go's Concurrency Examples in Java 19](https://mccue.dev/pages/5-2-22-go-concurrency-in-java)","n":0.2}}},{"i":61,"$":{"0":{"v":"Auth","n":1},"1":{"v":"\n## Identity\n\n(Identity 101)[https://www.okta.com/au/identity-101/]\n\n## OAuth\n\n### Common\n\n[The Modern Guide to OAuth](https://fusionauth.io/learn/expert-advice/oauth/modern-guide-to-oauth/)\n\n[Access Tokens](https://auth0.com/docs/secure/tokens/access-tokens)","n":0.316}}},{"i":62,"$":{"0":{"v":"Architecture","n":1},"1":{"v":"\n## Design Patterns\n\n### Javascript\n\n[Learning JavaScript Design Patterns](https://www.patterns.dev/posts/classic-design-patterns/#factorypatternjavascript)\n\n## Data Mesh\n\n[Data Mesh Architecture](https://www.datamesh-architecture.com/#why)\n\n[The Twelve-Factor App](https://12factor.net/)","n":0.277}}},{"i":63,"$":{"0":{"v":"API","n":1},"1":{"v":"\n## Curl\n\n[README](https://everything.curl.dev/)","n":0.707}}},{"i":64,"$":{"0":{"v":"Algorithms","n":1},"1":{"v":"\n## Course\n\n[CS 168: The Modern Algorithmic Toolbox, Spring 2022](https://web.stanford.edu/class/cs168/index.html)\n\n## Algorithms\n\n[Dictionary of Algorithms and Data Structures](https://xlinux.nist.gov/dads/)\n\n[Algorithms for Modern Hardware](https://en.algorithmica.org/hpc/)\n\n[Asymptotic Notations](https://learnxinyminutes.com/docs/asymptotic-notation/)\n\n[Dynamic Programming](https://learnxinyminutes.com/docs/dynamic-programming/)\n\n[Lambda Calculus](https://learnxinyminutes.com/docs/lambda-calculus/)\n\n[Learn X in Y minutes Where X=Set theory Set theory is a branch of mathematics that studies sets](https://learnxinyminutes.com/docs/set-theory/)\n\n[Algorithms for Competitive Programming](https://cp-algorithms.com/)\n\n[ALGORITHMS](https://cs.lmu.edu/~ray/classes/a/)\n\n[DATA STRUCTURES](https://cs.lmu.edu/~ray/classes/dsa/)\n\n### Floats\n[What Every Computer Scientist Should Know About Floating-Point Arithmetic](https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)\n\n# Abstract\n\n## Complexity\n[Big-Oh For Algorithms](https://scribe.rip/big-oh-for-algorithms-7fdb1d2f35d)\n\n## Visualization\n\n[Visualizing Algorithms](https://bost.ocks.org/mike/algorithms/)\n[SVD-Demo: Image Compression](http://timbaumann.info/svd-image-compression-demo/)\n[Red/Black Tree Visualization](https://www.cs.usfca.edu/~galles/visualization/RedBlack.html)\n\n# Distributed systems\n\n## Consensus algorithms\n\n[Paxos](https://martinfowler.com/articles/patterns-of-distributed-systems/paxos.html)\n[Raft is so fetch: The Raft Consensus Algorithm explained through \"Mean Girls\"](https://www.cockroachlabs.com/blog/raft-is-so-fetch/)\n\n# Encoding algorithms\n\n## H264\n\n[H.264 is magic: a technical walkthrough of a remarkable technology.](https://sidbala.com/h-264-is-magic/)","n":0.107}}},{"i":65,"$":{"0":{"v":"Leetcode","n":1},"1":{"v":"\n# Leetcode Picks\n\n[Explore - LeetCode](https://leetcode.com/explore/featured/card/top-interview-questions-easy/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/coding-interview-strategy/)\n\n\n# Leetcode & Kaggle\n\n[Therapy for Leetcode Warriors](https://leetcodetherapy.com/)\n\n# LeetCode\n\n[Mock Interview - LeetCode](https://leetcode.com/interview/)\n\n# HackerRank\n\n# Kaggle\n\n[Titanic classifier - 0.7799](https://www.kaggle.com/shlezinger/titanic-classifier-0-7799)\n\n## CONSTANT LEARNING\n\n[Explore - LeetCode](https://leetcode.com/explore/learn/card/fun-with-arrays/)\n\n[Explore - LeetCode](https://leetcode.com/explore/featured/card/top-interview-questions-easy/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/coding-interview-strategy/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/top-interview-questions-medium/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/top-interview-questions-medium/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/top-interview-questions-easy/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/top-interview-questions-medium/)\n\n[Explore - LeetCode](https://leetcode.com/explore/interview/card/top-interview-questions-hard/)\n\n## Concepts\n\n### Binary search\n\n[Explore - LeetCode](https://leetcode.com/explore/learn/card/binary-search/)\n\n## Challenges\n\n[GitHub - donnemartin/interactive-coding-challenges: 120+ interactive Python coding interview challenges (algorithms and data structures). Includes Anki flashcards.](https://github.com/donnemartin/interactive-coding-challenges#bit-manipulation)","n":0.128}}},{"i":66,"$":{"0":{"v":"3d","n":1},"1":{"v":"\n## WebGL\n[WebGL2 Fundamentals](https://webgl2fundamentals.org/)\n","n":0.577}}},{"i":67,"$":{"0":{"v":"Retro","n":1},"1":{"v":"\n## Mac emulations\n\n[Infinite Mac: An Instant-Booting Quadra in Your Browser](https://blog.persistent.info/2022/03/blog-post.html)","n":0.316}}},{"i":68,"$":{"0":{"v":"Psychology","n":1},"1":{"v":"\n# Acceptance and commitment Therapy\n[How To Do Hard Things - No Small Plans - Every](https://every.to/no-small-plans/how-to-do-hard-things)\n\n# Cognitive biases\n\n[The Ultimate List of Cognitive Biases: Why Humans Make Irrational Decisions](http://humanhow.com/list-of-cognitive-biases-with-examples/)\n[List of Cognitive Biases and Heuristics - The Decision Lab](https://thedecisionlab.com/biases)\n[Cognitive Bias List: Common Types of Bias](https://www.verywellmind.com/cognitive-biases-distort-thinking-2794763)\n[Cognitive Biases (2023): Complete List of 151 Biases [Psychology]](https://gustdebacker.com/cognitive-biases/)\n[List of selected 52 cognitive biases](https://uxinlux.github.io/cognitive-biases/52-list-en/)\n\n\n# Emotions\n[The Tyranny of Feelings (Ed Batista)](https://www-edbatista-com.translate.goog/2021/02/the-tyranny-of-feelings.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n\n\n[Book Review: The Seven Principles For Making Marriage Work | Slate Star Codex](https://slatestarcodex.com/2020/02/27/book-review-the-seven-principles-for-making-marriage-work/)\n[Force Isn't Power (Ed Batista)](https://www.edbatista.com/2021/03/force-isnt-power.html)\n[The Tyranny of Feelings (Ed Batista)](https://www-edbatista-com.translate.goog/2021/02/the-tyranny-of-feelings.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Leadership and Authenticity (Ed Batista)](https://www-edbatista-com.translate.goog/2018/06/leadership-and-authenticity.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Conscious Competence in Practice (Ed Batista)](https://www-edbatista-com.translate.goog/2015/02/conscious-competence-in-practice.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Corn Mazes and Mental Models (Ed Batista)](https://www-edbatista-com.translate.goog/2011/12/corn-mazes-and-mental-models.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Comfort with Discomfort (Ed Batista)](https://www-edbatista-com.translate.goog/2015/06/comfort-with-discomfort.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Learning How to Learn (Ed Batista)](https://www-edbatista-com.translate.goog/2018/07/learning-how-to-learn.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Make Getting Feedback Less Stressful (Ed Batista)](https://www-edbatista-com.translate.goog/2014/08/new-post-at-hbr-make-getting-feedback-less-stressful.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Why Change Is Hard (Ed Batista)](https://www-edbatista-com.translate.goog/2014/12/why-change-is-hard.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Attitude and Behavior (Ed Batista)](https://www-edbatista-com.translate.goog/2020/07/attitude-and-behavior.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Interpersonal Power (Ed Batista)](https://www-edbatista-com.translate.goog/2008/02/power.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Weather Systems (Power, Charisma and Leadership) (Ed Batista)](https://www-edbatista-com.translate.goog/2019/05/weather-systems-power-charisma-and-leadership.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[The Value of a Good Fight (Ed Batista)](https://www-edbatista-com.translate.goog/2016/12/the-value-of-a-good-fight.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Power Play](https://hbr-org.translate.goog/2010/07/power-play?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[The Language of Persuasion](https://hbr-org.translate.goog/2008/02/the-language-of-persuasion.html?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Harnessing the Science of Persuasion](https://hbr-org.translate.goog/2001/10/harnessing-the-science-of-persuasion?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[Nice Guys or Jerks? Who Gets Ahead - The Atlantic](https://www-theatlantic-com.translate.goog/magazine/archive/2015/06/why-it-pays-to-be-a-jerk/392066/?_x_tr_sl=en&_x_tr_tl=ru&_x_tr_hl=en&_x_tr_pto=wapp)\n[A Theory of Consciousness](https://tylerneylon.com/a/theory-of-consciousness/)\n[A Model of Human Thought: Philosophy](https://tylerneylon.com/a/thought1/)\n[Mental Toughness is a Hugely Valuable Trait](https://www.sport-excellence.co.uk/mental-toughness-is-a-hugely-valuable-trait/)\n[Dopamine Nation Summary - Four Minute Books](https://fourminutebooks.com/dopamine-nation-summary/)\n[Defetter](https://defetter.com/)\n[My strategies for keeping my attention | David Bieber](https://davidbieber.com/snippets/2022-03-18-attention-strategies/)\n\n# Halucinogens\n[What Hallucinogens Will Make You See - Nautilus](https://nautil.us/what-hallucinogens-will-make-you-see-308247/)","n":0.072}}},{"i":69,"$":{"0":{"v":"Relationships","n":1},"1":{"v":"\n# Relationships\n\n[–ü—Ä–æ–µ–∫—Ç FAQ'–∞ –ø–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é –∏ –≤—ã–±–æ—Ä—É –∂–µ–Ω—â–∏–Ω—ã –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π - P–∞–∑–≤–∏—Ç–∏–µ –∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π –¥–ª—è –º—É–∂—á–∏–Ω - –ø–∏–∫–∞–ø.–§–æ—Ä—É–º](https://forum.pickup.ru/topic/181400-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82-faq%D0%B0-%D0%BF%D0%BE-%D1%81%D0%B0%D0%BC%D0%BE%D1%80%D0%B0%D0%B7%D0%B2%D0%B8%D1%82%D0%B8%D1%8E-%D0%B8-%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%D1%83-%D0%B6%D0%B5%D0%BD%D1%89%D0%B8%D0%BD%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%BE%D1%82%D0%BD%D0%BE%D1%88%D0%B5%D0%BD%D0%B8%D0%B9/)\n[–ù–∞–±—Ä–æ—Å–æ–∫ —Å—Ç–∞—Ç—å–∏ –æ –í—ã–±–æ—Ä–µ - P–∞–∑–≤–∏—Ç–∏–µ –∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π –¥–ª—è –º—É–∂—á–∏–Ω - –ø–∏–∫–∞–ø.–§–æ—Ä—É–º](https://forum.pickup.ru/topic/197584-%D0%BD%D0%B0%D0%B1%D1%80%D0%BE%D1%81%D0%BE%D0%BA-%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8-%D0%BE-%D0%B2%D1%8B%D0%B1%D0%BE%D1%80%D0%B5/)\n[–°–∏—Å—Ç–µ–º–∞ –î–°–ü+–°–æ—Ü. - FAQ'–∏ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º - –ø–∏–∫–∞–ø.–§–æ—Ä—É–º](https://forum.pickup.ru/topic/145828-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-%D0%B4%D1%81%D0%BF%D1%81%D0%BE%D1%86/)\n","n":0.162}}},{"i":70,"$":{"0":{"v":"Mindset","n":1},"1":{"v":"\n## Principles\n[100 Rules To Live By - Dru Riley](https://druriley.com/100-rules-2020/)\n[Agile Otter Blog: Is It My Fault You Can't Handle The Truth?](http://agileotter.blogspot.com/2019/09/is-it-my-fault-you-cant-handle-truth.html)\n[50 Ideas That Changed My Life - David Perell](https://perell.com/essay/50-ideas-that-changed-my-life/)\n[1% Better Manifesto | Pedro Sorren](https://pedrosorren.com/blog/1-percent-better-manifesto)\n\n## Life is short\n[Four Thousand Weeks](https://leebyron.com/4000/)\n\n## Procrastination\n[‚ÄúThe Procrastination Equation‚Äù by Dr. Piers Steel (Book Summary) - NJlifehacks](https://www.njlifehacks.com/the-procrastination-equation-piers-steel-summary/)\n\n## Wisdom\n\n[Parable of the two watchmakers - Citizendium](http://en.citizendium.org/wiki/Parable_of_the_two_watchmakers)\n[Everything Is A Practice - by Scott Gilbertson](https://luxagraf.net/essay/everything-is-a-practice)\n[Power Struggles Among Nice People](https://www.edbatista.com/2022/03/power-struggles-among-nice-people.html)\n[Force isn't power](https://www.edbatista.com/2021/03/force-isnt-power.html)\n\n## Software engineering\n\n[An On-Ramp to Flow](https://census.dev/blog/an-on-ramp-to-flow)\n[Programmer Interrupted: The Real Cost of Interruption and Context Switching](https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/)","n":0.11}}},{"i":71,"$":{"0":{"v":"Work Life Balance","n":0.577},"1":{"v":"\n# Work-life balance\n\n## Contents\n\n- [Work-life balance](#work-life-balance)\n  - [Contents](#contents)\n  - [Don't care too much](#dont-care-too-much)\n    - [Caring just enough](#caring-just-enough)\n      - [Balance](#balance)\n      - [Prioritize what to care about](#prioritize-what-to-care-about)\n      - [Pragmatism and boundaries](#pragmatism-and-boundaries)\n  - [Don't work long hours](#dont-work-long-hours)\n    - [Overwork triggers](#overwork-triggers)\n    - [Benefits of working fewer hours](#benefits-of-working-fewer-hours)\n    - [Getting your work done on time](#getting-your-work-done-on-time)\n    - [Leaving when you plan to](#leaving-when-you-plan-to)\n  - [Separate work and personal life](#separate-work-and-personal-life)\n    - [Detaching from work in the evening](#detaching-from-work-in-the-evening)\n  - [Pursue other interests](#pursue-other-interests)\n    - [What about self-improvement?](#what-about-self-improvement)\n      - [Make time for learning at work](#make-time-for-learning-at-work)\n      - [Your spare time is your spare time](#your-spare-time-is-your-spare-time)\n      - [Don't get intimidated by articles and blogs](#dont-get-intimidated-by-articles-and-blogs)\n      - [Don't get intimidated by job ads](#dont-get-intimidated-by-job-ads)\n  - [Resources](#resources)\n\n## Don't care too much\n\nIf you don't care about work one single bit, you probably won't do a very good job. However, a lot of people have the the opposite problem: they care too much about work.\n\nCaring too much is bad for both you and your company:\n\n-   It makes you feel overwhelmed and stressed\n-   It makes you more likely to get sick, burn out or quit\n-   It prevents you from getting the downtime you need in order to actually be productive at work\n-   It wastes energy on feeling stressed, disappointed or frustrated instead of allowing you to use that energy for actual work\n-   It prevents you from recognizing tasks that are not important and thus not an effective use of your time\n\nBy caring just enough and stressing less, you will actually get more productive work done and you will be able to better identify what the most important tasks are.\n\n### Caring just enough\n\n#### Balance\n\n-   Find the point where you're still doing a great job, but in a relaxed way without unnecessary stress\n-   Realize that you are not your job\n    -   There's more to life than work\n    -   Your professional efforts and results do not define who you are\n\n#### Prioritize what to care about\n\n-   Take a step back to see the bigger picture and find out what's really important\n-   Not all tasks or problems are really worth caring about\n-   Not all issues are things you can do something about\n-   Some things can easily be ignored, either temporarily of permanently\n    -   Don't waste time and energy on unimportant details that will likely go unnoticed or sort themselves out\n-   Your colleagues and manager can help you decide what the real priorities are (and help you get them done)\n\n#### Pragmatism and boundaries\n\n-   Accept that you won't be able to do everything, or at least not as well as you'd like\n-   Would it really be that much of a disaster if you mess up a small detail, miss a deadline by a day, ...?\n    -   An annoyed or impatient customer is still not the end of the world\n-   Set proper boundaries and adjust people's expectations of you to what you think is reasonable\n-   See also [Pragmatism and imperfectionism](./Pragmatism-imperfectionism.md)\n-   See also [Expectation management](../soft-skills/Expectation-management.md)\n\n## Don't work long hours\n\nThe research is clear regarding working long hours, especially on a consistent basis:\n\n-   It does not yield higher total productivity than working normal hours\n-   It often even yields lower total productivity than working normal hours\n\nBoth for factory workers and knowledge workers, there have been studies that demonstrated that limiting working time makes people more productive and reduces the amount of expensive mistakes and accidents\n\nSome reasons why long hours don't work:\n\n-   They make people continue working when they're actually tired and no longer productive\n-   They lead to stress and health problems like bad sleep, depression and impaired memory, which all make you worse at your job during all of the hours that you're working\n-   They lead to people getting sick, burning out or quitting\n-   They give people a false sense of comfort: \"It's okay, I can always squeeze in one more hour\". This prevents them from actually having to look at the bigger picture, prioritize and improve their effectiveness\n-   They make people, consciously or subconsciously, dial back the intensity of their efforts in order to be able to make it until the end of a long day\n\nHarsh but sensible quote from [this article](https://hbr.org/2015/08/the-research-is-clear-long-hours-backfire-for-people-and-for-companies): \"Keep overworking, and you‚Äôll progressively work more stupidly on tasks that are increasingly meaningless\"\n\n### Overwork triggers\n\nSome triggers that can cause people to overwork (and some tips on dealing with them):\n\n-   **Stress:** Stress about the never-ending backlog, looming deadlines, the chance that the business might fail, ...\n    -   Remind yourself that there will always be more work, that deadlines and scope are often not as fixed as they appear to be, and that some things are at least partially out of your control. In any case, getting proper rest and relaxation will put you in the best position to deal with whatever life decides to throw your way.\n-   **Insecurity:** The feeling that you aren't doing enough, looking bad in front of your manager and peers, ...\n    -   If this is the case, you are likely failing to see the actual value that you are bringing. You might also be setting unrealistic expectations for yourself. If you're really worried about your performance, ask your manager about it. See also [Expectation management](../soft-skills/Expectation-management.md).\n-   **Frustration:** Feeling frustrated because you were not able to get done what you planned to get done\n    -   If this happened because something else came up, remind yourself that it's not realistic to expect yourself to finish the planned work as well. Additionally, the work you did instead might actually be very valuable. Sometimes, you can feel like you \"got nothing done\" when in reality you made a huge contribution to your team's success by mentoring people, clarifying requirements with stakeholders, planning future work, making sure team members are on the same page, ...\n    -   If this happened because for whatever reason the work you planned to do is taking longer than expected, remind yourself that shit happens. After some proper rest and relaxation, you will also be in a better position to finish the work the next day.\n-   **Guilt:** Feeling guilty because you had an off day and couldn't get yourself to be productive\n    -   Often, an off day is caused by a lack of rest and relaxation. In this case, overworking out of guilt is the best way to guarantee that tomorrow will be an off day as well. Instead, get some much-needed rest to set yourself up for a more productive day tomorrow.\n-   **Obsession:** Getting obsessed with a problem you're solving\n    -   Remind yourself that it's probably way more efficient to get some rest and continue tomorrow. Additionally, switching from a problem you're obsessed with to a completely unrelated leisure activity is the ideal setup for [Hammock-driven development](./Hammock-driven-development.md).\n\n### Benefits of working fewer hours\n\nWorking fewer hours comes with some clear benefits:\n\n-   You are forced to look at the bigger picture to see if the tasks you are working on are really important and if you're tackling them in the simplest, most effective way\n-   You are forced to give more realistic estimates that account for the inevitable fact that some things will go wrong or might need more thought and discussion\n-   You are forced to spend more time thinking and planning up front, which greatly reduces the amount of work that is needed later on\n    -   Efficiency vs. effectiveness: Effectiveness is picking a direction, efficiency is running really hard in that direction. No matter how hard you run, you will never make it to your destination if you are running in the wrong direction.\n-   You have the energy to give your best during the hours you do work, as well as the time to recover from it so you can have that same energy tomorrow as well\n    -   \"It's a marathon, not a sprint\"\n\n### Getting your work done on time\n\nSome tips to get your work done within the limited time you have:\n\n-   Establish clear priorities for your tasks (decided either by yourself or your boss) and start with the most important task\n    -   Even if you don't get as much done as planned, you can still go home knowing that you worked on the most important stuff first\n-   Plan how to approach your tasks in the most effective way\n    -   Investing in this kind of upfront planning can save you hours or even days\n-   When a new task appears, establish its priority relative to your other tasks and push other tasks back as needed\n    -   If your plate is full, you might need to drop or delegate another task\n    -   Potentially, you might be able to offer an alternative (\"I can't do X, but I can do Y\")\n    -   Make sure that you communicate this to stakeholders as needed. See also [Expectation management](../soft-skills/Expectation-management.md)\n-   Set clear boundaries regarding the amount of work that you can do\n\n### Leaving when you plan to\n\nSometimes, it's easy to get caught up in a task and end up staying late anyway. A strategy to prevent this:\n\n-   Determine the schedule to follow, so you know beforehand at what time you should stop working\n-   In the last 1.5 hours or so before you should leave:\n    -   Continue working on whatever you were working on\n    -   If you finish, consider not starting a new big task but instead catching up on smaller tasks like code reviews, taking a step back to see if everything you're doing makes sense in the big picture, planning future work, ...\n        -   Starting a new big task is risky because by the time you properly get going it's already time to leave\n        -   If starting the new big task is the only thing that makes sense, focus on things that make it easier to stop and start again (chopping it up into smaller parts, doing some analysis and writing down your findings, ...)\n-   In the last 15 minutes, stop working and write down everything you need to know in order to continue the task later on\n    -   Benefit: you can get off to a flying start the next morning\n    -   Benefit: doing this helps your brain to work on the task in the background while you are relaxing. See also [Hammock-driven development](./Hammock-driven-development.md).\n\n## Separate work and personal life\n\n-   Set boundaries for working time (see above)\n-   Separate work time and personal time as clearly as possible\n    -   When working from the office:\n        -   Only work when you're physically at work\n        -   Avoid opening your work laptop at home\n    -   When working for home\n        -   Have a clear schedule regarding what is work time and what is personal time\n        -   Make the distinction between work time and personal time as clear as possible (use a separate desk for working, don't use your work machine for personal stuff, wear dedicated work clothes, ...)\n    -   Avoid having any work-related communication coming into your phone\n-   When you're working, work. When you're not working, don't work\n    -   Goes both ways: it also helps to avoid doing personal stuff during designated work time, otherwise the lines get blurry and you could even guilt-trip yourself into working in your personal time in order to compensate\n    -   Especially when working from home, it can sometimes be nice to be able to combine work and private stuff as the need arises. However, you risk constantly being in a gray zone where you are always ‚Äúkind of working but also kind of not working‚Äù. It's often better to plan blocks of time for work and blocks of time for private stuff and to keep those blocks as clearly separated as possible.\n\n### Detaching from work in the evening\n\n-   Move from your working space to somewhere else\n-   Put your work machine, work notes, ... where you don't see them\n-   Take off your work clothes\n-   Get some exercise or just go for a short walk\n-   Pursue some non-work-related interests (see below)\n\n## Pursue other interests\n\nPursuing other interests (music, cooking, exercise, reading, ...) makes you more well-rounded and might actually have a more positive impact on your added value as a developer than spending your free time on development stuff!\n\nWhat pursuing other interests helps with:\n\n-   Could help you look at things from different angles\n-   Could help you understand your customers better\n-   Could help you improve your communication skills (listening, speaking, writing, explaining ideas to others, ...)\n-   Could help you get along better with customers and colleagues\n-   Goal diversification (setting and pursuing different kinds of goals, so not only those related to work) leads to reduced stress and improved wellbeing (see [How I Broke the Cycle of Stress](https://blogs.scientificamerican.com/observations/how-i-broke-the-cycle-of-stress/)) \n-   Getting your mind off of anything work-related is a prerequisite for letting your subconscious work its magic on your work tasks (see [Hammock-driven development](./Hammock-driven-development.md))\n-   People want to be involved in something that's meaningful to them. Even though you can often find some meaning in your job if you focus on the right moments, your job shouldn't be your only source of meaning. Outside of work, you can easily find meaning in appreciating beauty and nature, creating something just for creation's sake, volunteering, having quality time with people that are important to you, ...\n\n### What about self-improvement?\n\n#### Make time for learning at work\n\n-   As software developers, we are expected to learn a lot of things on the job, within normal working hours.\n    -   \"Learning is part of your job. Make time for it.\" ([‚ÄúIt never gets easier, you just go faster.‚Äù](https://letterstoanewdeveloper.com/2020/04/27/it-never-gets-easier-you-just-go-faster/))\n-   If your job does not give your opportunities to learn and grow, it's probably time for another job\n-   Even if you use outdated technology at work, you can still learn about new technologies on the job\n    -   Minimize the required time investment by focusing on concepts rather than specifics (see also [Concepts, not code - Learning new technologies](./Concepts-not-code.md#learning-new-technologies))\n    -   Look for actual problems caused by outdated technology, find alternative technologies solving the problem, explain to your manager how those could solve the problem without huge investment of time and resources, and ideally get buy-in to investigate further and actually try the technology\n        -   Examples of actual problems: Hard to find and hire people who know the technology or are willing to learn it, time and energy wasted on doing repetitive work, having to work around bugs in the technology that are no longer getting fixed within reasonable time frames, ...\n        -   Even if you don't get buy-in to investigate further, you have added some tools to your mental toolbox\n\n#### Your spare time is your spare time\n\nIt's not required to be working on anything work-related or career-related in your free time!\n\nBut what if you _want_ to write code or improve your knowledge and skills in your free time?\n\n-   Don't just take your work home. Spending more time on solving the same kinds of problems you're already solving at work isn't going to teach you things you couldn't just learn at work\n-   If you want to write code, avoid putting pressure on yourself to build something useful in technologies that are relevant to your job or career:\n    -   Consider creating a silly application, just for the sake of creation\n    -   Consider using completely different technologies than the ones you normally use\n    -   Consider hacking something together using awful code, just as a way of learning how certain kinds of systems work or even just for fun\n-   If you want to improve your knowledge, focus on learning concepts. See also [Concepts, not code](./Concepts-not-code.md)\n-   Remember: there's no need to pressure yourself about this kind of stuff!\n\n#### Don't get intimidated by articles and blogs\n\n-   The field is huge, nobody knows all there is to know about everything\n-   If you feel like you know nothing after reading some impressive article written by someone in a different subfield, remember that they probably don't have a lot of relevant knowledge regarding the stuff you are working on and know a lot about\n-   It's mostly about your ability to figure out things as you go\n-   You will always have some gaps in your knowledge. While it's good to be aware of them, it's not good to be intimidated by them.\n\n#### Don't get intimidated by job ads\n\n-   Job ads are written with the perfect candidate in mind, which by definition means that that candidate doesn't exist\n-   While some of the listed skills/technologies are really needed for the job, the rest is often just things they want to use but aren't really using in practice, things they included in an attempt to make the job look more interesting, ...\n-   Even for skills/technologies that are really needed, there's likely a lot that you can just learn on the job as you go, especially if they are relatively similar to things you already have experience with\n-   If you're looking at job ads to get a feel for what your current skill set is worth, remember taking them with a big grain of salt\n-   If you're looking for a new job, don't let intimidating job ads keep you from applying. Just state what you know, what you don't know (yet), and how some things you do know could help you to learn some of the things you don't know yet. Then, it's up to the company to decide if you're interesting enough to interview.\n\n## Resources\n\n-   [Want to Be Happy at Work? Care Less About It](https://www.quietrev.com/want-to-be-happy-at-work-care-less-about-it/)\n-   [Caring less made me better at my job](https://medium.com/@Sindemark/caring-less-made-me-better-at-my-job-fdefdaf9ca94)\n-   [1 in 5 Employees Is Highly Engaged and at Risk of Burnout](https://hbr.org/2018/02/1-in-5-highly-engaged-employees-is-at-risk-of-burnout)\n-   [The Research Is Clear: Long Hours Backfire for People and for Companies](https://hbr.org/2015/08/the-research-is-clear-long-hours-backfire-for-people-and-for-companies)\n-   [Stop Working and Go Home](https://www.bloomberg.com/opinion/articles/2019-11-06/long-work-hours-waste-time-and-lead-to-lower-productivity)\n-   [The compelling case for working a lot less](https://www.bbc.com/worklife/article/20171204-the-compelling-case-for-working-a-lot-less)\n-   [The futile comfort of working long hours](https://codewithoutrules.com/2018/02/11/working-long-hours/)\n-   [Why senior engineers get nothing done](https://swizec.com/blog/why-senior-engineers-get-nothing-done/)\n-   [How to manage an ‚Äúover worker‚Äù?](https://workplace.stackexchange.com/questions/102909/how-to-manage-an-over-worker)\n-   [My FOSS Story](https://blog.burntsushi.net/foss/)\n-   [Avoiding hour creep: get your work done and still go home at 5PM](https://codewithoutrules.com/2018/06/15/avoid-hour-creep/)\n-   [Work/life balance will make you a better software engineer](https://codewithoutrules.com/2016/11/10/work-life-balance-software-engineer/)\n-   [Ask HN: How do you switch off from work, particularly when working from home?](https://news.ycombinator.com/item?id=24196433)\n-   [Can software engineering be meaningful work?](https://codewithoutrules.com/2019/04/12/meaningful-programming-work/)\n-   [How I Broke the Cycle of Stress](https://blogs.scientificamerican.com/observations/how-i-broke-the-cycle-of-stress/)\n-   [‚ÄúIt never gets easier, you just go faster.‚Äù](https://letterstoanewdeveloper.com/2020/04/27/it-never-gets-easier-you-just-go-faster/)\n-   [Your technical skills are obsolete: now what?](https://codewithoutrules.com/2017/10/23/obsolete-skills/)\n-   [How to Feel Less Overwhelmed as a Developer](https://medium.com/@juliahaigh/how-to-feel-less-overwhelmed-as-a-developer-79bc816709de)\n-   [It's perfectly fine to only code at work, don't let anyone tell you otherwise.](https://dev.to/ben/its-perfectly-fine-to-only-code-at-work-dont-let-anyone-tell-you-otherwise--25i3)","n":0.018}}},{"i":72,"$":{"0":{"v":"Pragmatism","n":1},"1":{"v":"\n# Pragmatism and imperfectionism\n\n## Contents\n\n- [Pragmatism and imperfectionism](#pragmatism-and-imperfectionism)\n  - [Contents](#contents)\n  - [Pragmatism](#pragmatism)\n  - [Don't expect perfection](#dont-expect-perfection)\n  - [Imperfectionist mindset](#imperfectionist-mindset)\n    - [Be humble](#be-humble)\n    - [Own your mistakes](#own-your-mistakes)\n    - [Focus on what you can control](#focus-on-what-you-can-control)\n    - [Focus on putting in the work rather than on the results](#focus-on-putting-in-the-work-rather-than-on-the-results)\n    - [Prefer incremental improvement over sudden perfection](#prefer-incremental-improvement-over-sudden-perfection)\n    - [Consider going for imperfect action now instead of possibly perfect action in the future](#consider-going-for-imperfect-action-now-instead-of-possibly-perfect-action-in-the-future)\n    - [Focus on solutions rather than problems](#focus-on-solutions-rather-than-problems)\n    - [Make success easier than failure](#make-success-easier-than-failure)\n  - [Resources](#resources)\n\n## Pragmatism\n\n-   Work in a way this is practical and sensible given the circumstances, even if it's different from the theoretical \"ideal way\"\n-   Focus on what actually gets the job done for your particular project and case, in a way that's good enough in your context\n-   One size doesn't fit all\n-   See also [It depends](./It-depends.md)\n-   See also [Keep it simple](./Keep-it-simple.md)\n\n## Don't expect perfection\n\nProgramming is hard and people are not perfect, so don't expect perfection.\n\n-   Don't expect perfection from **yourself**\n    -   Just like any other human, you are not perfect\n    -   You will write code that is not bug-free\n    -   You will write code that takes shortcuts, doesn't follow some of the project's conventions or is not clear about its intended purpose\n    -   You will solve problems in suboptimal ways\n    -   You will fail to see things that are obvious in hindsight\n    -   You will lack knowledge on some topics that others know a lot more about and that maybe even seem like essential knowledge\n    -   You will communicate in confusing ways or fail to communicate important information\n    -   You will misunderstand your colleagues, even if what they say is sensible and clear\n-   Don't expect perfection from your **colleagues**\n    -   Just like any other human, your colleagues are not perfect\n    -   Everything that's listed above? Your colleagues will do that too.\n-   Don't expect perfection from your **codebase**\n    -   Your codebase was likely written under time pressure and based on changing requirements, with everyone working on it an imperfect human\n    -   There will be technical debt and not all of it will ever get fixed\n    -   There will be things that don't make sense given the current situation but are impossible or impractical to change\n-   Don't expect perfection from your **process**\n    -   There will be communication overhead and misunderstandings\n    -   There will be unclear and changing requirements\n    -   There will be situations where team members are blocking each other\n    -   There will be situations where team members unknowingly perform duplicate or conflicting work\n    -   There will be decisions that later turn out to be suboptimal because you didn't have the right info, knowledge, experience or priorities at the time\n\n## Imperfectionist mindset\n\n### Be humble\n\n-   Realize that you are imperfect, just like everyone around you\n    -   See also the previous section\n-   Be open to feedback from others, as it is likely that you can learn something from them or they have noticed something you missed\n-   Embrace the fact that you can learn a lot from the people around you\n    -   There's no need to be the \"smartest person in the room\"\n\n### Own your mistakes\n\n-   Since you are not perfect, it is expected that you make mistakes\n    -   Mistakes you make in _specific_ situations do not imply that you are not good at what you do _in general_\n    -   It feels great to realize this and get comfortable admitting your mistakes\n-   Rather than trying to hide your mistakes, admit them and give honest information about what happened\n    -   People who admit their mistakes come across as more confident, reliable and relatable than those who pretend to be perfect\n    -   Bonus points if you already have ideas on how to solve the problem\n    -   Bonus points if you can improve your process so the same mistake won't be able to happen again\n-   Instead of ruminating about mistakes you have made, put that time and energy into fixing the situation or preventing the mistake from happening again\n-   If someone in the team makes a mistake, take responsibility as a team\n    -   Naming the person who made a mistake doesn't solve anything, and gives the impression that the team likes to blame individuals instead of taking responsibility\n    -   Remember that everybody makes mistakes. If the process allowed for this mistake to happen, it was a matter of time before someone actually made the mistake, and it could easily have been someone else.\n    -   Solve the issue as a team and improve your process as a team\n\nRelevant article: [So you've made a mistake and it's public...](https://meta.wikimedia.org/wiki/So_you%27ve_made_a_mistake_and_it%27s_public...)\n\n### Focus on what you can control\n\n-   A lot of things are out of your control, meaning it's a waste of energy to stress out over them or try to change them\n-   Instead, focus on what you can control\n-   \"Don‚Äôt get stuck thinking that you can‚Äôt do good work unless something you can‚Äôt control changes\" (from [Three Growth Strategies for Individual Contributors](https://hackernoon.com/three-growth-strategies-for-individual-contributors-kv4q3zgt))\n\n### Focus on putting in the work rather than on the results\n\n-   Worrying about results steals time and energy that you could otherwise spend on putting in the actual work that is needed to get the results\n-   Reducing the pressure you put on yourself actually helps you perform your tasks more effectively\n-   Focusing less on results doesn't prevent you from getting the results you want, it just takes away the anxiety about not getting those results\n-   Note: This doesn't mean that there's no value in periodically evaluating whether your work generally gives you the kind of results you would expect to see. However, it does mean that there is no value in letting stress about results distract you from doing the work in the first place.\n\n### Prefer incremental improvement over sudden perfection\n\n-   Focus on consistently making progress or adding value\n-   Start from the way things actually are, not from the way you wish they were\n-   Incremental improvement gives you early feedback on whether you're moving in the right direction\n    -   See also [Fail fast](./Fail-fast.md)\n-   Incremental improvement is often a lot more practical than sudden huge changes\n    -   Example: First writing a working \"first draft\" of the code and then improving its readability can be a lot more effective than trying to write perfectly clean code immediately\n        -   \"First make it work, then make it clean\"\n    -   Example: When introducing stricter coding standards to an existing project, changing all the existing code is often not practical or justifiable. But, if you apply the new standards whenever you write new code or touch an existing piece of code, all parts of the codebase that are under active development will soon follow the new standards\n-   Big goals are daunting. Instead, break them into small steps and follow the process, focusing on one step at a time.\n-   There is often a compounding where early progress makes future progress easier\n    -   Example: Setting up basic automated linting makes it easy to add more strict/advanced rules later on\n    -   Example: When learning, properly understanding basic concepts makes it a lot easier to understand more advanced concepts later on ([Concepts, not code](./Concepts-not-code.md))\n-   See also [How to Be Great? Just Be Good, Repeatably](https://blog.stephsmith.io/how-to-be-great/)\n\n### Consider going for imperfect action now instead of possibly perfect action in the future\n\n-   Taking a good enough action means improvement, not taking action means no improvement\n    -   \"Great is the enemy of good\"\n    -   Good code shipped today is often better than perfect code shipped next week\n-   Often, the experience you gain from taking action teaches you a lot more about what works well and what doesn't than just theorizing about what would be the best approach. See also [Quantity Always Trumps Quality](https://blog.codinghorror.com/quantity-always-trumps-quality/)\n    -   For creative problem solving, it might help to separate the process of creation from the process of analyzing what you created and improving. _\"You can‚Äôt write and edit, or sculpt and polish, or make and analyze at the same time. If you do, the editor stops the creator. While you invent, don‚Äôt select. While you sketch, don‚Äôt inspect. While you write the first draft, don‚Äôt reflect.\"_ ([source](https://kk.org/thetechnium/68-bits-of-unsolicited-advice/))\n-   Definitely don't wait for perfect circumstances, as they will likely never come\n\n### Focus on solutions rather than problems\n\n-   Software development is all about problem solving\n    -   Your real value is in delivering _solutions_\n-   Often, problems don't even need to be solved in order to make progress despite them\n    -   A lot of problems are not showstoppers\n    -   In a lot of situations, a workaround or partial solution is enough\n    -   Sometimes, it even makes sense to simply ignore the problem\n-   Rather than focusing on the problem, focus on finding possible solutions or at least paths that lead towards possible solutions\n    -   Problems that seem unfixable at first sight are likely to be fixable once you really think about it\n-   Looking at the big picture helps to find solutions or workarounds that may not be obvious if you focus too closely on the problem\n-   Note: All of this doesn't mean that you should start solving before you understand what the actual problem is!\n    -   See also [Keep it simple](./Keep-it-simple.md)\n-   Note: All of this doesn't mean that there is no value in identifying problems!\n    -   Typically, you need to identify a problem before you can solve it\n    -   It can be very valuable to identify the main problems that are limiting your success\n    -   Try to be a _Finder_, someone who identifies important problems and can also recognize if the team is solving the wrong problem because it's just a symptom of another more fundamental problem\n        -   See [The next career step for Senior Software Engineers (that isn‚Äôt management)](https://codewithoutrules.com/2018/10/10/beyond-senior-software-engineer/)\n    -   However, once you've found a problem, start moving your focus to actually solving it rather than just getting stressed by its existence\n\n### Make success easier than failure\n\nBasic idea:\n\n-   All humans tend to get lazy and take the easiest route\n    -   This is especially true if they're under some kind of time pressure\n-   Use this to your advantage by making success easier than failure\n    -   Make it so easy to do the right thing that it would actually be _more_ work to do the wrong thing\n    -   If you want to create substantial and persistent change in the way people do things, you need to make sure that the \"right way\" to do something is also the easiest way for people to achieve their goals. Instead of forcing people to do something, you need to make them _want_ to do it. Otherwise, they will always find a way around it.\n        -   Making the \"right way\" easier is often about tooling, but training can also have a large impact\n\nExamples:\n\n-   Productivity\n    -   Chop up your tasks until they're so small and well-defined that it's easier (and more fun) to start and complete them than to find excuses for avoiding them\n-   Enforcing coding standards\n    -   Writing up a document with coding standards and then expecting the team to follow them through sheer discipline is not the ideal approach\n    -   Automated formatting checks and linting make it easy to recognize and fix deviations from the standards\n    -   Even better if everyone in the team has their IDE set up so all code is automatically formatted according to the standards whenever a file is saved\n-   Making people write better PR descriptions\n    -   Can make success easier than failure by setting up a PR template where people just need to fill in the blanks\n        -   Can include description of changes, how to test things, ...\n        -   Can also include a checklist (written/adjusted relevant tests, ensured backwards API compatibility, ...) that we want developers to go through before committing their PR\n-   Architectural governance\n    -   Want teams to do incremental rollouts instead of immediately applying new code to all instances or users? Foresee a deployment pipeline where that is the default behavior and where you need to jump through a few hoops to bypass the mechanism.\n    -   Want developers to respect certain boundaries in your modular monolith? Enforce the boundaries programmatically and require thorough reviewing of any changes to the enforced rules.\n\n## Resources\n\n-   [Pragmatic Software Development](https://medium.com/gsoft-tech/pragmatic-software-development-59d12790e422)\n-   [3 Ways Owning Your Mistakes Will Make You Powerful](https://www.entrepreneur.com/article/232417)\n-   [Why you need to own your mistakes](https://www.klipfolio.com/blog/own-your-mistakes)\n-   [How to professionally acknowledge to a client that a former coworker made a mistake in production?](https://workplace.stackexchange.com/questions/159311/how-to-professionally-acknowledge-to-a-client-that-a-former-coworker-made-a-mist)\n-   How to Be an Imperfectionist (book by Stephen Guise)\n-   [Three Growth Strategies for Individual Contributors](https://hackernoon.com/three-growth-strategies-for-individual-contributors-kv4q3zgt)\n-   [How to Be Great? Just Be Good, Repeatably](https://blog.stephsmith.io/how-to-be-great/)\n-   [Quantity Always Trumps Quality](https://blog.codinghorror.com/quantity-always-trumps-quality/)\n-   [68 Bits of Unsolicited Advice](https://kk.org/thetechnium/68-bits-of-unsolicited-advice/)\n-   [Favourite Diff](https://essays.jwatzman.org/essays/favourite-diff.html)\n-   [The next career step for Senior Software Engineers (that isn‚Äôt management)](https://codewithoutrules.com/2018/10/10/beyond-senior-software-engineer/)\n-   [Releasing software to the fleet far too quickly broke stuff](http://rachelbythebay.com/w/2020/04/23/rel/) ([comments on Hacker News](https://news.ycombinator.com/item?id=22962830))","n":0.022}}},{"i":73,"$":{"0":{"v":"Fail Fast","n":0.707},"1":{"v":"\n# Fail fast\n\n## Contents\n\n- [Fail fast](#fail-fast)\n  - [Contents](#contents)\n  - [Basic idea](#basic-idea)\n  - [General tips](#general-tips)\n  - [Architecture, design and code](#architecture-design-and-code)\n  - [Development process](#development-process)\n    - [Tracer bullets and prototypes](#tracer-bullets-and-prototypes)\n  - [People](#people)\n  - [Resources](#resources)\n\n## Basic idea\n\nIf your approach is going to fail, you want to realize that as soon as possible\n\n-   You want to run into problems when it's still cheap and easy to fix them or correct course\n-   It doesn't make sense to invest a lot of effort into something that isn't going to work anyway\n\nBasically, it‚Äôs about **making the feedback loop as short as possible** so you can quickly abandon things that won't work without wasting more effort on them\n\nIf your feedback loop is short enough, the process of **trying things and learning from mistakes** can actually be a lot more effective than trying to get it right immediately, because you gain a lot of knowledge and experience along the way. See also [Pragmatism and imperfectionism - Consider going for imperfect action now instead of possibly perfect action in the future](Pragmatism-imperfectionism.md#consider-going-for-imperfect-action-now-instead-of-possibly-perfect-action-in-the-future)\n\nAll of this also means that, when trying to solve a problem, it can be a lot more effective to focus on **reducing the length of your feedback loop first**. If your current approach requires you to spend a lot of time and effort before you can validate your solution, the actual problem you should be solving is how to shorten your feedback loop. See also [You Are Solving The Wrong Problem](https://uxmag.com/articles/you-are-solving-the-wrong-problem)\n\n## General tips\n\n-   Identify your feedback loops and check if they can be shortened\n    -   Feedback can be related to code quality, functionality, customer satisfaction, product-market fit, ...\n-   Ask yourself: \"What is the simplest incarnation of my idea that allows me to validate whether it will work?\"\n    -   Could be as simple as a sketch on a napkin\n-   Split big problems into small steps that allow you to verify that you're on the right track after each step\n-   Tackle risky or uncertain parts as early as possible\n-   Be proactive about asking for feedback\n    -   This can be as simple as announcing something you're about to do, which gives people a chance to stop you or suggest an alternative approach (this is usually also faster than asking and waiting for explicit permission)\n        -   \"Do whatever you want, but do it loudly\" (from [Three Growth Strategies for Individual Contributors](https://hackernoon.com/three-growth-strategies-for-individual-contributors-kv4q3zgt))\n-   Make sure that you know how to check if a task is \"done\" and if it solved the problem you wanted to solve\n\n## Architecture, design and code\n\n-   If the problem you're solving requires a non-trivial approach, discuss it with a colleague before actually fully implementing it\n    -   You don't want to find out during code review that you need to throw most of your code away because your approach won't fit in with the rest of the system or you should have leveraged something that already existed\n    -   Fifteen minutes of discussion can prevent days of wasted development effort\n-   Within the code itself, put checks as early as possible in the flow so your program doesn't do useless work\n-   When considering a new piece of technology, try to build a proof of concept with it that shows you if it performs well under the kind of load you foresee\n    -   This can also force you to consult the technology's documentation while creating the proof of concept, giving you an idea of how good that documentation is\n-   When building fault-tolerant systems, it can make sense to deliberately trigger faults at random, even up in production, so any problem with fault tolerance surfaces sooner rather than later\n    -   See also [Architectural fitness functions](../architecture-design/Architectural-fitness-functions.md)\n\n## Development process\n\n-   Set up your development environment so it immediately alerts you of syntax errors, violations of coding style convention, code that is likely to have unintended effects, ...\n    -   You don't want to waste your energy and your colleagues' energy by identifying, discussing and fixing these through code reviews\n    -   See also [Static analysis](../processes-techniques/Static-analysis.md)\n-   Fast automated tests can notify you of a bug in your code while you are in the middle of working on it, rather than having to switch contexts to fix it once the bug is found during code review or (even worse) after deployment\n-   Monitoring for errors on a shared dev environment can help to find bugs before they are deployed to production\n-   If requirements are unclear, clarify them with someone or make a quick small POC and validate that with someone\n-   New tools or processes: first set up something simple and check if the added value is what you expected it to be, only then invest in improving\n    -   Works a lot better than trying to set up something \"perfect\" immediately\n\n### Tracer bullets and prototypes\n\nBoth can help you to get early customer feedback, as well as feedback on some technical aspects of the system\n\n**Tracer bullets:** take a requirement and build an initial version of the entire system that fulfills that requirement\n\n-   Can be used to get feedback from the customers\n-   The result should be a part of the skeleton for the final application\n    -   \"Lean but complete\"\n    -   Already includes all necessary components, including automated tests, build pipelines, ...\n    -   Sets up a structure for development team to work in (and allows to correct course if that structure is not working)\n\n**Prototypes:** build something disposable to explore and validate a specific aspect of the final system\n\n-   Useful for unproven or experimental parts, or parts that are absolutely critical to the final system\n-   Things you could prototype: new functionality, user interface design, interaction with third-party tools or components, ...\n-   Disposable: throwaway code, style and code quality don't matter, completeness doesn't matter\n    -   The goal is to learn, not to build something useful\n    -   Prototype code should never be deployed\n-   Doesn't have to be code!\n    -   **Paper prototypes** can be very useful for testing user interfaces\n    -   You can prototype an idea for an automated process by executing the process manually and validating the value the process brings\n    -   When analyzing product-market fit for a startup, it could even make sense to do a small-scale \"launch\" where part of the end-to-end process is taken care of by humans instead of by software\n\n## People\n\n-   If you notice tension in the room, discuss it explicitly before it grows too big to handle\n-   If something doesn't sit well with you, bring it up before it grows into a huge source of worry or frustration\n    -   Plenty of people have quit their jobs over issues that could have easily been solved if they would have been brought up early enough\n\n## Resources\n\n-   [Inefficient Efficiency](https://medium.com/@kentbeck_7670/inefficient-efficiency-5b3ab5294791)\n-   [You Are Solving The Wrong Problem](https://uxmag.com/articles/you-are-solving-the-wrong-problem)\n-   [3 Problems to Stop Looking For in Code Reviews](https://medium.com/swlh/3-problems-to-stop-looking-for-in-code-reviews-981bb169ba8b)\n-   The Pragmatic Programmer (book by Andrew Hunt and David Thomas) ([summary](https://github.com/HugoMatilla/The-Pragmatic-Programmer))\n-   [Three Growth Strategies for Individual Contributors](https://hackernoon.com/three-growth-strategies-for-individual-contributors-kv4q3zgt)\n-   [How to validate your startup idea quickly](https://amanjain.substack.com/p/how-to-validate-your-startup-idea)\n-   [The painted door test](https://web.archive.org/web/20210925031806/https://briandavidhall.com/the-painted-door-test/)\n-   [Wizard of Oz testing ‚Äì a method of testing a system that does not yet exist.](https://www.simpleusability.com/inspiration/2018/08/wizard-of-oz-testing-a-method-of-testing-a-system-that-does-not-yet-exist/)","n":0.03}}},{"i":74,"$":{"0":{"v":"Physics","n":1},"1":{"v":"\n## Optics\n\n[https://opticexplorer.sharedigm.com/](https://opticexplorer.sharedigm.com/)","n":0.707}}},{"i":75,"$":{"0":{"v":"Rocket Science","n":0.707},"1":{"v":"\n[How To Start A Rocket Engine | Everyday Astronaut](https://everydayastronaut.com/how-to-start-a-rocket-engine)","n":0.333}}},{"i":76,"$":{"0":{"v":"Music","n":1},"1":{"v":"\n# Theory\n\n[Music theory for nerds](https://eev.ee/blog/2016/09/15/music-theory-for-nerds/)\n\n[Sound](https://ciechanow.ski/sound/)","n":0.447}}},{"i":77,"$":{"0":{"v":"Information","n":1},"1":{"v":"\n## Forums\n\n[IDENTIFYING FORUM AGITATORS, PSYOPS & SHILLS](https://edith.reisen/computers/security/forum_shills.html)","n":0.378}}},{"i":78,"$":{"0":{"v":"How It Works","n":0.577},"1":{"v":"\n## Video processing\n\n[HowVideo.works](https://howvideo.works/)\n\n## GPS\n\n[GPS - Bartosz Ciechanowski](https://ciechanow.ski/gps/?utm_source=hackernewsletter&utm_medium=email&utm_term=fav)\n\n## Bicycle\n[Bicycle ‚Äì Bartosz Ciechanowski](https://ciechanow.ski/bicycle/)\n\n## Fractals\n\n[Fractal Tree](http://richdecibels.com/fractal-tree/)","n":0.277}}},{"i":79,"$":{"0":{"v":"Health","n":1},"1":{"v":"\n# Born\n\n[The Carnegie stages](https://www.intechopen.com/chapters/49200)","n":0.5}}},{"i":80,"$":{"0":{"v":"Brain","n":1},"1":{"v":"\n## Intelligence\n\n[Do Cats Have Intelligence/How Intelligent Are Cats?](http://messybeast.com/intelligence.htm#demotivate)\n\n## Sleep\n[Impacts Of Lack Of Sleep](https://belkarx.github.io/posts/finished/Impacts%20Of%20Lack%20Of%20Sleep.html)","n":0.277}}},{"i":81,"$":{"0":{"v":"Hardware","n":1},"1":{"v":"\n## Theory\n\n[HyperPhysics is an exploration environment for concepts in physics](http://hyperphysics.phy-astr.gsu.edu/hbase/index.html)\n\n## Batteries\n\n[Batteries types](https://www.scanofthemonth.com/scans/batteries)\n\n## Home automation\n\n[üå±üíß A Bluetooth Low Energy (BLE) soil moisture sensor](https://github.com/rbaron/b-parasite)\n[Making a Linux home server sleep on idle and wake on demand ‚Äî the simple way](https://dgross.ca/blog/linux-home-server-auto-sleep/)\n[Linux-based Time Machine backup server using Netatalk and ZFS](https://dgross.ca/blog/linux-time-machine-server/)\n\n## Practice\n\n[How to Write a Bootloader from Scratch](https://interrupt.memfault.com/blog/how-to-write-a-bootloader-from-scratch)\n\n## Electronics\n\n[There's no place like home ‚Äì (residence of electronics enthusiasts)](https://beletronics.wordpress.com/)\n[The Inner Beauty of Basic Electronics](https://spectrum.ieee.org/open-circuits)\n[Lessons in Electric Circuits Textbook](https://www.allaboutcircuits.com/textbook/)\n[Setting up an electronics workshop](https://lcamtuf.substack.com/p/setting-up-an-electronics-workshop)\n\n### Soldering\n[How To Get Started In Soldering for Beginners](https://www.popularmechanics.com/technology/a43400768/how-to-get-started-in-soldering/)\n\n## Fun\n[Papercraft Models ‚Äî Rocky Bergen](http://rockybergen.com/papercraft)\n\n## FPGA\n[How Does an FPGA Work? - SparkFun Learn](https://learn.sparkfun.com/tutorials/how-does-an-fpga-work/all)\n\n## Vectorize\nhttps://cvw.cac.cornell.edu/vector/default","n":0.102}}},{"i":82,"$":{"0":{"v":"Networks","n":1},"1":{"v":"\n## Linux Networking\n[Linux Networking Shallow Dive: WireGuard, Routing, TCP/IP and NAT - A Salty Blog](https://im.salty.fish/index.php/archives/linux-networking-shallow-dive.html)\n\n## Create your own network\n\n[Wiring a Home with fiber](https://sschueller.github.io/posts/wiring-a-home-with-fiber/)\n[Your First LTE | Open5GS](https://open5gs.org/open5gs/docs/tutorial/01-your-first-lte/)\n\n## Services\n\n[Query Border Gateway Protocol](https://bgp.tools/)","n":0.18}}},{"i":83,"$":{"0":{"v":"Asm","n":1},"1":{"v":"\n## Books\n\n[The Art of Assembly Language Programming](http://www.phatcode.net/res/223/files/html/toc.html)\n\n## Nasm\n\n[NASM Docs](https://www.nasm.us/doc/)\n\n[NASM Tutorial](https://cs.lmu.edu/~ray/notes/nasmtutorial/)\n\n## Interupts\n\n[BIOS Interupts Table](https://www.ctyme.com/intr/int.htm)\n\n## Instructions\n\n[x86 Instruction Set Reference](https://mudongliang.github.io/x86/)\n\n## DOS\n\n[DOS ASM Tutorial](https://bitfry-narod-ru.translate.goog/)\n\n## Fun Computers\n\n[Nibbler 4 Bit CPU](https://www.bigmessowires.com/nibbler/)\n\n## Practices\n[Learn x86-64 assembly by writing a GUI from scratch](https://gaultier.github.io/blog/x11_x64.html)\n[x86re | Reverse engineering for noobs](https://x86re.com/1.html)\n[x86re | Reverse engineering for noobs](https://x86re.com/2.html)","n":0.151}}},{"i":84,"$":{"0":{"v":"Architecture","n":1},"1":{"v":"\n## Consoles\n\n[Architecture of Consoles | A Practical Analysis](https://www.copetti.org/writings/consoles/#7th-generation)","n":0.354}}},{"i":85,"$":{"0":{"v":"Games","n":1},"1":{"v":"\n## Archives\n\n[Valve Archive](https://valvearchive.com/)\n\n## History\n[History of Video Games](https://ultimatehistoryvideogames.jimdofree.com/)\n\n## Titles\n\n[Backbone on Steam](https://store.steampowered.com/app/865610/Backbone/)\n\n[Mundaun on Steam](https://store.steampowered.com/app/720350/Mundaun/)\n\n[Save 10% on 30XX on Steam](https://store.steampowered.com/app/1029210/30XX/)\n\n[Season on Steam](https://store.steampowered.com/app/695330/Season/)\n\n[Sable on Steam](https://store.steampowered.com/app/757310/Sable/)\n\n[She Dreams Elsewhere on Steam](https://store.steampowered.com/app/492540/She_Dreams_Elsewhere/)\n\n[Noita - A roguelite where everything can be destroyed.](https://noitagame.com/)\n\n[NUTS on Steam](https://store.steampowered.com/app/768450/NUTS/)\n\n[R√∂ki on Steam](https://store.steampowered.com/app/1067540/Rki/)\n\n[Exo One on Steam](https://store.steampowered.com/app/773370/Exo_One/)","n":0.158}}},{"i":86,"$":{"0":{"v":"Design","n":1},"1":{"v":"\n# Concept\n\n## Interactivity\n[Communicating with Interactive Articles](https://distill.pub/2020/communicating-with-interactive-articles/)\n\n## CSS Tailwind\n\n[Cheatsheet](https://tailwindcomponents.com/cheatsheet/)\n\n## Design agencies\n\n### Top-notch\n\n[Pentagram - The world's largest independent design consultancy](https://www.pentagram.com/)\n\n## Icons\n\n[Shape - Browse](https://shape.so/browse)\n\n[Majesticons premium icons for designers and developers](https://www.majesticons.com/#solid-icons)\n\n## Fonts\n\n[GT America - Typeface Specimen and License Purchase](https://www.grillitype.com/typeface/gt-america)\n\n## API\n\n[Production-Ready Design Resources](https://developers.icons8.com/)\n\n## Internal\n\n[React - Geist UI](https://react.geist-ui.dev/en-us)\n\n## Icon\n[Iconhunt - Search for open source icons, 150.000+ icons.](https://www.iconhunt.site/)\n\n## Frameworks\n\n### TODO\n\n- [ ]  Choose the best\n- [ ]  Keep additinal\n- [ ]  Remove me\n\n[Radix UI](https://www.radix-ui.com/)\n\n[shaper - interface styles shaper](https://hihayk.github.io/shaper/)\n\n[Tailwind CSS - Rapidly build modern websites without ever leaving your HTML.](https://tailwindcss.com/)\n\n[Tailwind UI Kit - The most loaded tailwind css UI Kit on the planet](https://tailwinduikit.com/components/webapp/table/advance_table)\n\n[Tailwind UI](https://tailwindui.com/preview)\n\n[Lofi UI](https://lofiui.co/)\n\n[Flowbite - Tailwind CSS Components](https://flowbite.com/?status=accepted&expires=1638475997&p_sid=113942&p_aid=124350&p_link=3345&p_tok=3f98d7a1-bc23-4ee3-b4e2-ae9a7fd162fa)\n\n[Tailwind UI KIT - 250 components and templates for React, VueJS and Angular.](https://www.tailwind-kit.com/)\n\n[Starter Kit to create Design System and Wireframes in Figma and Sketch](https://tetrisly.com/sketch/)\n\n[Avatar](https://balance.reckon.com/package/avatar)\n\n[Dashboards - A powerful design kit with a huge set of customizable elements and templates.](https://dashboardsdesign.com/full-preview/)\n\n[Constructor UI for Figma, Sketch and Adobe XD](https://constructor.spline.one/)\n\n[One Design System Promo](https://www.figma.com/file/dQGra8qEG2obY3faf9SbFI/One-Design-System-Promo?node-id=1761%3A55750)\n\n[Druid Design System](https://druids.datadoghq.com/)\n\n[Open Design System](https://www.designsystems.com/open-design-systems/)\n\n## Plugins\n\n[GitHub - Spread0x/typeit: The most versatile JavaScript typewriter effect library on the planet.](https://github.com/Spread0x/typeit)\n\n## Gradients\n[Gradicol | Gradients & Website templates](https://gradicol.vercel.app/)\n\n## Colors\n[ColorMagic | AI Color Palette Generator](https://colormagic.app/)\n[Color Contrast Checker, analyser and color suggestions for WCAG & APCA](https://colorcontrast.app)\n\n## Inspiration\n[Mercury OS Design](https://www.mercuryos.com/architecture)","n":0.073}}},{"i":87,"$":{"0":{"v":"Home","n":1},"1":{"v":"\n## Furniture\n[Prettypegs](https://www.prettypegs.com/)","n":0.707}}},{"i":88,"$":{"0":{"v":"Data Science","n":0.707},"1":{"v":"\n## Principles\n\n[Eight Laws of Statistics](https://measuringu.com/abelsons-laws/?ref=sidebar)\n\n[awesome-bigdata/README.md at master ¬∑ 0xnr/awesome-bigdata](https://github.com/0xnr/awesome-bigdata/blob/master/README.md)","n":0.333}}},{"i":89,"$":{"0":{"v":"Ml","n":1},"1":{"v":"\n\n# General\n\n## Explanations\n\n[MLU-Explain](https://mlu-explain.github.io/)\n\n# Clustering\n\n## K-Means\n\n[Introduction to K-Means Clustering | Pinecone](https://www.pinecone.io/learn/k-means-clustering/)\n\n### Stable Diffusion\n\n[](https://multimodal.art/)\n\n[Machine learning education | TensorFlow](https://www.tensorflow.org/resources/learn-ml)\n\n<aside>\n‚òù **Essential**\n\n</aside>\n\n[graphdeeplearning/benchmarking-gnns](https://github.com/graphdeeplearning/benchmarking-gnns)\n\n[Triple Integral in rectangular coordinates](https://www.geogebra.org/m/jvkB8CJd)\n\n[Google Colaboratory](https://colab.research.google.com/github/google/neural-tangents/blob/master/notebooks/neural_tangents_cookbook.ipynb#scrollTo=Lt74vgCVNN2b)\n\n[Growing Neural Cellular Automata](https://distill.pub/2020/growing-ca/)\n\n[ctgk/PRML](https://github.com/ctgk/PRML)\n\n[Solving Differential Equations with Transformers](https://medium.com/analytics-vidhya/solving-differential-equations-with-transformers-21648d3a1695)\n\n[Transformers are Graph Neural Networks | NTU Graph Deep Learning Lab](https://graphdeeplearning.github.io/post/transformers-are-gnns/)\n\n[Lagrangian Neural Networks](https://greydanus.github.io/2020/03/10/lagrangian-nns/)\n\n[Zoom In: An Introduction to Circuits](https://distill.pub/2020/circuits/zoom-in/)\n\n[Stable Diffusion Updates](https://rentry.org/sdupdates2)","n":0.144}}},{"i":90,"$":{"0":{"v":"Math","n":1},"1":{"v":"\n# Math / Physics\n\n[A Primer on B√©zier Curves](https://pomax.github.io/bezierinfo/)\n\n[GitHub - michiganrobotics/rob501: Mathematics for Robotics](https://github.com/michiganrobotics/rob501?utm_source=hackernewsletter&utm_medium=email&utm_term=learn)\n\n[https://www.youtube.com/watch?v=iUhwCfz18os&list=PLdgVBOaXkb9CNMqbsL9GTWwU542DiRrPB&index=2&t=0s](https://www.youtube.com/watch?v=iUhwCfz18os&list=PLdgVBOaXkb9CNMqbsL9GTWwU542DiRrPB&index=2&t=0s)\n\n[Introduction to Complex Functions](https://www.youtube.com/watch?v=iUhwCfz18os&list=PLdgVBOaXkb9CNMqbsL9GTWwU542DiRrPB&index=2&t=0s)\n\n[Explorable Physics](https://landgreen.github.io/physics/index.html)\n\n[So You Want to Learn Physics... - Susan Fowler](https://www.susanjfowler.com/blog/2016/8/13/so-you-want-to-learn-physics)\n\n[Explained from First Principles](https://explained-from-first-principles.com/)\n\n## Math Fun\n[Donut math: how donut.c works ‚Äì a1k0n.net](https://www.a1k0n.net/2011/07/20/donut-math.html)\n\n## Algebra\n[Algebra - Factoring Polynomials](https://tutorial.math.lamar.edu/Classes/Alg/Factoring.aspx)\n\n## Linear algebra\n\n[Matrices and determinants](https://mathshistory.st-andrews.ac.uk/HistTopics/Matrices_and_determinants/)\n\n## Category Theory\n[Applied Category Theory Course](https://math.ucr.edu/home/baez/act_course/)\n[Category Theory Illustrated - index](https://abuseofnotation.github.io/category-theory-illustrated/)","n":0.137}}},{"i":91,"$":{"0":{"v":"Hadoop","n":1},"1":{"v":"\n# Hadoop\n\n[Introduction](https://jaceklaskowski.gitbooks.io/mastering-spark-sql/content/)\n\n[Create a cluster of instances on AWS](https://blog.insightdatascience.com/create-a-cluster-of-instances-on-aws-899a9dc5e4d0)\n\n[https://www.youtube.com/watch?v=gE1pn4qLK9U](https://www.youtube.com/watch?v=gE1pn4qLK9U)\n\n[What is the Difference Between Hadoop and Spark? | DIMENSIONLESS TECHNOLOGIES PVT.LTD.](https://dimensionless.in/what-is-the-difference-between-hadoop-and-spark/)\n\n[GitHub - InsightDataScience/pegasus: VM based deployment for prototyping Big Data tools on Amazon Web Services](https://github.com/InsightDataScience/pegasus)\n\n[](https://www.udemy.com/course/learn-big-data-the-hadoop-ecosystem-masterclass/?LSNPUBID=JVFxdTr9V80&ranEAID=JVFxdTr9V80&ranMID=39197&ranSiteID=JVFxdTr9V80-qZpDq2K8ISgXsoc_OvaXDQ&utm_medium=udemyads&utm_source=aff-campaign)\n\n[](https://www.udemy.com/course/the-ultimate-hands-on-hadoop-tame-your-big-data/?LSNPUBID=JVFxdTr9V80&ranEAID=JVFxdTr9V80&ranMID=39197&ranSiteID=JVFxdTr9V80-CCb9LjwsrvDTKp.N2Jo_PA&utm_medium=udemyads&utm_source=aff-campaign)\n\n[GitHub - Spread0x/structor: Vagrant files creating multi-node virtual Hadoop clusters with or without security.](https://github.com/Spread0x/structor)\n\n[Big Data Analytics with Hadoop 3](https://www.oreilly.com/library/view/big-data-analytics/9781788628846/)\n\n[Apache Hadoop 3 Quick Start Guide | Packt](https://www.packtpub.com/product/apache-hadoop-3-quick-start-guide/9781788999830)\n\n[Hadoop Cluster Management with Apache Ambari](https://www.e-zest.com/hadoop-cluster-management-with-apache-ambari)\n\n[Hadoop Cluster Management with Cloudera](https://www.e-zest.com/hadoop-cluster-management-with-cloudera)\n\n[](https://ambari.apache.org/)\n\n[Apache Spark and Hadoop: Working Together](https://databricks.com/blog/2014/01/21/spark-and-hadoop.html)\n\n```bash\nhttp://35.185.220.210:9870/dfshealth.html#tab-overview\nhttp://35.185.220.210:9864/datanode.html\nhttp://35.185.220.210:8088/cluster\n\n```\n\n[GitHub - hortonworks/bman: Bman - An Apache Hadoop cluster manager](https://github.com/hortonworks/bman)\n\n[Apache Hadoop Architecture Explained (In-Depth Overview)](https://phoenixnap.com/kb/apache-hadoop-architecture-explained)\n\n[Hortonworks Sandbox Product Download](https://www.cloudera.com/downloads/hortonworks-sandbox.html)\n\n[](https://www.cloudera.com/content/dam/www/marketing/documents/partners/ungated/cloudera-msazure-hadoop-deployment-guide.pdf)\n\n[hadoop Tutorial => Getting started with hadoop](https://riptutorial.com/hadoop)\n\n[How to Install and Set Up a 3-Node Hadoop Cluster](https://www.linode.com/docs/guides/how-to-install-and-set-up-hadoop-cluster/)\n\n[](https://www.airpair.com/hadoop/posts/getting-started-with-hadoop)\n\n[Installing Hadoop 3.1.0 multi-node cluster on Ubuntu 16.04 Step by Step](https://towardsdatascience.com/installing-hadoop-3-1-0-multi-node-cluster-on-ubuntu-16-04-step-by-step-8d1954b31505)\n\n[Apache Spark and Hadoop: Working Together](https://databricks.com/blog/2014/01/21/spark-and-hadoop.html)\n\n[Immuta Documentation](https://documentation.immuta.com/2022.1/)\n\n[Complete Guide to Install and Configure Apache Hadoop 3 on MacOS ‚ãÜ Pete Houston Blog](https://blog.petehouston.com/complete-guide-to-install-and-configure-apache-hadoop-3-on-macos/)\n\n[Install Hadoop 3.3.0 on macOS](https://kontext.tech/article/547/install-hadoop-330-on-mac)\n\n[Setup Hadoop(HDFS) on Mac](https://dbmstutorials.com/hive/hdfs-setup-on-mac.html)\n\n[Install Hadoop 3.0.0 on macOS High Sierra 10.13.3](https://alexjinlei.github.io/post/technique/install-hadoop-3-0-0-on-macos-high-sierra-10-13-3/)\n\n[](https://lemp.io/how-to-install-hadoop-on-mac-os/)\n\n[The (easiest) Hadoop installation - MacOS/Linux | GYUNAM](https://www.gyunam.com/post/hadoop-installation-mac-linux/)\n\n[How to Install Hadoop on Mac OS X El Capitan](https://www.quickprogrammingtips.com/big-data/how-to-install-hadoop-on-mac-os-x-el-capitan.html)\n\n[Hadoop installation and operation](https://www.codetd.com/en/article/10977079)\n\n[Install Apache Spark on macOS](https://notadatascientist.com/install-spark-on-macos/)\n\n[How to Install Hadoop on Mac with Homebrew - Tech Blost](https://techblost.com/how-to-install-hadoop-on-mac-with-homebrew/)\n\n[Cloudera Hadoop](https://help.tableau.com/current/pro/desktop/en-us/examples_hadoop.htm)\n\n[How to install latest Apache Spark on Mac OS](https://www.tutorialkart.com/apache-spark/how-to-install-spark-on-mac-os/)\n\n[How to setup Apache Hadoop Cluster on a Mac or Linux Computer](https://datashark.academy/how-to-setup-apache-hadoop-cluster-on-a-mac-or-linux-computer/)\n\n[How to Install Scala and Apache Spark on MacOS](https://www.freecodecamp.org/news/installing-scala-and-apache-spark-on-mac-os-837ae57d283f/)\n\n[Quick Start Guide - Alluxio v2.7.4 (stable)](https://docs.alluxio.io/os/user/stable/en/overview/Getting-Started.html)\n\n[Installing and getting started with Hadoop on Mac - OS X](https://hadoopsqletc.wordpress.com/2014/07/23/installing-and-getting-started-with-hadoop-on-mac-os-x/amp/)\n\n[Install HBase in a snap! A simple step-by-step guide | Engati](https://www.engati.com/blog/install-hbase-on-mac-in-5-minutes)\n\n[Apache Hadoop open source ecosystem | Cloudera](https://www.cloudera.com/products/open-source/apache-hadoop.html)\n\n[Apache Hadoop core components | Cloudera](https://www.cloudera.com/products/open-source/apache-hadoop/hdfs-mapreduce-yarn.html)\n\n## Repos\n\n[GitHub - cerndb/SparkPlugins: Code and examples of how to deploy Apache Spark Plugins with Spark 3.x. This allows extending the Spark metrics systems with user-provided monitoring probes for OS, I/O, and custom libraries/applications.](https://github.com/cerndb/SparkPlugins)\n\n[GitHub - da-huin/hadoop-tutorial: ‚ú® This document explains how to install Hadoop and Hbase and how to basic use it.](https://github.com/da-huin/hadoop-tutorial)\n\n[GitHub - strategist922/hadoop-tutorials: hadoop-tutorials](https://github.com/strategist922/hadoop-tutorials)\n\n[GitHub - becloudready/hadoop-tutorials: Hadoop Training tutorials](https://github.com/becloudready/hadoop-tutorials)\n\n[GitHub - mehikmat/hadoop-install: Hadoop cluster deployment script](https://github.com/mehikmat/hadoop-install)\n\n[GitHub - romainr/hadoop-tutorials-examples: Source, data and turotials of the blog post video series of Hue, the Web UI for Hadoop.](https://github.com/romainr/hadoop-tutorials-examples)\n\n[GitHub - jordicenzano/hadoop-tutorial: Initial experiments with Hadoop](https://github.com/jordicenzano/hadoop-tutorial)","n":0.055}}},{"i":92,"$":{"0":{"v":"Computer_science","n":1},"1":{"v":"\n## Books\n[A Functional Introduction To Computer Science (Part I)](https://cs.uwaterloo.ca/~plragde/flaneries/FICS/)\n","n":0.333}}},{"i":93,"$":{"0":{"v":"Cars","n":1},"1":{"v":"\n## How it works?\n[How a Car Works - Guides to car mechanics and automotive engineering](https://www.howacarworks.com/)\n","n":0.258}}},{"i":94,"$":{"0":{"v":"Business","n":1},"1":{"v":"\n# Principles\n\n## Products\n\n### Kinds\n\n1. –ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –∏–º –¥–µ–Ω—å–≥–∏.\n2. –ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —ç–∫–æ–Ω–æ–º—è—Ç –∏—Ö –¥–µ–Ω—å–≥–∏.\n3. –ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∂–∏–≥–∞—é—Ç –≤—Ä–µ–º—è.\n4. –ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —ç–∫–æ–Ω–æ–º—è—Ç –∏—Ö –≤—Ä–µ–º—è.\n5. –ü—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –∏—Ö –ª—É—á—à–µ.\n\n[YC Startup Library | Y Combinator](https://www.ycombinator.com/library)\n\n# Accounting\n[Accounting for Developers Part III: Building a Lending Marketplace](https://www.moderntreasury.com/journal/accounting-for-developers-part-iii)\n\nhttps://www.investopedia.com/terms/a/accountsreceivable.asp\nhttps://www.investopedia.com/terms/a/accountspayable.asp\nhttps://www.investopedia.com/terms/c/currentliabilities.asp\nhttps://www.investopedia.com/terms/d/double-entry.asp\nhttps://bench.co/blog/accounting/double-entry-accounting/\nhttps://bench.co/blog/accounting/balance-sheet/\nhttps://bench.co/blog/accounting/income-statement/\nhttps://bench.co/blog/accounting/cash-flow-statements/\nhttps://www.moderntreasury.com/journal/accounting-for-developers-part-i\nhttps://readhacker.news/s/5jx42\n\n# Due dilligence\n\n[A Short 100-Question Diligence Checklist](https://www.thediff.co/archive/100-due-diligence-questions-checklist/)","n":0.144}}},{"i":95,"$":{"0":{"v":"Copywrite","n":1},"1":{"v":"\n[Great Landing Page Copy is a little corner of the internet to find good landing page copywriting examples.](https://greatlandingpagecopy.com/)","n":0.236}}},{"i":96,"$":{"0":{"v":"Ads","n":1},"1":{"v":"\n[–¶–µ–Ω—Ç—Ä Google –ü–æ–∏—Å–∫–∞ | Google Developers](https://developers.google.com/search?hl=ru)\n\n[–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø–æ–∏—Å–∫–æ–≤—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é. –û—Å–Ω–æ–≤—ã | –¶–µ–Ω—Ç—Ä Google –ü–æ–∏—Å–∫–∞](https://developers.google.com/search/docs/beginner/seo-starter-guide?hl=ru)\n\n[Google AdWords](https://ads.google.com/aw/overview?ocid=141124202&euid=157071242&__u=4086294458&uscid=141124202&__c=7220057498&authuser=0)\n\n[–í–≤–µ–¥–µ–Ω–∏–µ - –í–µ–±–º–∞—Å—Ç–µ—Ä. –°–ø—Ä–∞–≤–∫–∞](https://yandex.ru/support/webmaster/recommendations/intro.html)\n\n[](https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&asset_id=202504750315584)\n\n[](https://www.facebook.com/adsmanager/manage/campaigns?act=261375321185875&nav_entry_point=lep_174)","n":0.236}}},{"i":97,"$":{"0":{"v":"Blockchain","n":1},"1":{"v":"\n## Wallets\n\n[Polygon](https://wallet.polygon.technology/wallet)\n\n## FIAT ‚Üî¬†USDT\n\n[Buy Tether ERC20 (USDT) with Visa/MasterCard RUB credit card - where is the best exchange rate?](https://www.bestchange.com/visa-mastercard-rub-to-tether-erc20.html)\n\n[Sell Tether ERC20 (USDT) to the Visa/MasterCard RUB credit card - where is the best exchange rate?](https://www.bestchange.com/tether-erc20-to-visa-mastercard-rub.html)\n\n## Exchanges\n\n[Web Multi-currency Wallet | Guarda](https://guarda.co/app/receive)\n\n[Polygon](https://wallet.polygon.technology/bridge/)\n\n[DeFiHelper - Autopilot for your DeFi portfolio](https://app.defihelper.io/settings)\n\n[SideShift.ai - No Sign-Up Crypto Exchange](https://sideshift.ai/btc/eth)\n\n[Enzyme](https://app.enzyme.finance/discover)\n\n[Uniswap Interface](https://app.uniswap.org/#/swap?chain=mainnet)\n\n[dYdX](https://trade.dydx.exchange/portfolio/overview)","n":0.139}}},{"i":98,"$":{"0":{"v":"Apps","n":1},"1":{"v":"\n## Math\n\n[MathKey - LaTeX Keyboard](https://mathkey-app.com/)\n\n[PocketCAS - Algebra and Graphing Calculator for iPhone, iPad and Mac - Home](https://pocketcas.com/)","n":0.243}}}]}
